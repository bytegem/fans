// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource database {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

/// User model
model User {
  id        String   @id /// User ID
  login     String?  @unique /// User-defined login name
  email     String?  @unique /// User bound E-Mail address
  phone     String?  @unique /// User bound phone number
  password  String? /// Encrypted password
  createdAt DateTime @default(now()) /// User account created date

  profile             UserProfile? /// the user profile
  authorizationTokens AuthorizationToken[] /// The user authorization tokens
  sentSecurityCodes   SecurityCode[] /// Sent security codes
  state               UserAccountChangeState? // User account changed state

  @@index([createdAt])
}

/// User Changed state model
model UserAccountChangeState {
  id                String    @id /// State ID
  loginChangeAt   DateTime? /// User login changed last time.
  emailChangedAt    DateTime? /// User email changed last time
  phoneChangedAt    DateTime? /// User phone changed last time
  passwordChangedAt String? /// User password changed last time.
  userId            String    @unique /// User ID
  user              User      @relation(fields: [id], references: [id])
}

/// User profile
model UserProfile {
  id        String   @id /// Profile ID
  userId    String   @unique /// The profile owner ID
  user      User     @relation(fields: [userId], references: [id]) /// The profile owner
  name      String? /// user display name
  avatar    String? /// user avatar
  bio       String? /// user bio
  location  String? /// user location
  updatedAt DateTime @updatedAt /// The profile updated datetime
}

/// Authorization Token
model AuthorizationToken {
  userId           String /// User ID
  token            String   @id
  expiredAt        DateTime /// Token expired date.
  refreshExpiredAt DateTime /// Use the token refresh expired data.

  user User @relation(fields: [userId]) /// The token bound user
  @@index([userId])
  @@index([expiredAt])
  @@index([refreshExpiredAt])
}

/// Setting
model Setting {
  namespace String /// Setting namespace
  name      String /// setting name key
  value     Json /// setting value
  updatedAt DateTime @default(now()) @updatedAt

  @@id([namespace, name])
  @@index([namespace])
  @@index([name])
}

// Validate code
model SecurityCode {
  id             String    @id /// ID
  senderId       String? /// Sender ID
  sender         User?     @relation(fields: [senderId], references: [id]) /// Sender
  account        String /// To account, E-Mail or phone number
  code           String /// validate code
  createdAt      DateTime  @default(now()) /// created At
  response       Json? /// Service response
  validateSender Boolean /// Validate sender
  disabledAt     DateTime? /// Disabled the code datetime.

  @@index([senderId])
  @@index([account])
  @@index([code])
  @@index([createdAt])
  @@index([validateSender])
  @@index([disabledAt])
}
