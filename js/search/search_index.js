var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.295,1,2.735]],["body/modules/AppModule.html",[0,2.378,1,5.599,2,2.042,3,2.148,4,2.395,5,2.395,6,2.148,7,2.959,8,2.265,9,3.825,10,3.825,11,4.766,12,0.016,13,4.766,14,3.351,15,4.445,16,4.445,17,4.445,18,3.128,19,2.395,20,2.265,21,0.182,22,0.141,23,0.121,24,4.422,25,0.161,26,5.776,27,3.538,28,3.319,29,0.314,30,1.425,31,0.828,32,4.422,33,1.551,34,2.708,35,4.422,36,4.422,37,5.776,38,3.432,39,3.793,40,3.825,41,2.042,42,1.944,43,4.422,44,4.483,45,2.708,46,3.432,47,3.432,48,0.182,49,0.301,50,0.009,51,0.012,52,0.009]],["title/interfaces/AuthDecoratorOptions.html",[53,2.215,54,2.991]],["body/interfaces/AuthDecoratorOptions.html",[12,0.016,21,0.174,22,0.135,23,0.116,25,0.154,29,0.276,30,1.366,33,2.664,39,2.784,40,3.667,48,0.276,50,0.009,51,0.011,52,0.009,53,2.436,54,4.89,55,3.009,56,3.009,57,5.207,58,4.89,59,3.859,60,0.322,61,1.098,62,1.202,63,5.091,64,0.665,65,3.621,66,2.879,67,4.109,68,5.618,69,5.618,70,4.239,71,3.009,72,3.987,73,3.667,74,3.29,75,3.229,76,4.71,77,3.634,78,2.171,79,2.353,80,3.667,81,4.239,82,4.239,83,2.597,84,3.667,85,1.206,86,4.239,87,4.239,88,4.239,89,3.859,90,4.239,91,1.471,92,2.597,93,0.829,94,3.29,95,3.29,96,2.059]],["title/guards/AuthorizationGuard.html",[39,2.531,97,2.735]],["body/guards/AuthorizationGuard.html",[12,0.016,21,0.11,22,0.085,23,0.073,25,0.24,29,0.282,30,0.859,31,0.756,33,2.409,34,1.633,38,2.07,39,2.653,45,1.633,48,0.11,49,0.182,50,0.005,51,0.008,52,0.005,60,0.203,62,1.145,64,0.651,65,2.321,66,2.672,67,3.332,71,2.867,72,2.867,73,2.307,74,2.07,75,2.321,76,4.321,77,1.444,79,2.409,85,1.871,89,1.633,91,1.277,93,0.79,97,4.365,98,2.667,99,2.307,100,1.547,101,2.355,102,5.44,103,4.876,104,4.04,105,4.04,106,4.04,107,4.04,108,1.547,109,2.667,110,6.737,111,3.781,112,3.038,113,0.743,114,2.667,115,1.417,116,2.34,117,1.359,118,5.49,119,3.494,120,1.694,121,1.776,122,4.04,123,3.855,124,2.667,125,4.04,126,3.983,127,3.95,128,2.157,129,2.321,130,2.667,131,2.667,132,4.04,133,4.04,134,4.04,135,2.667,136,4.04,137,4.04,138,2.667,139,4.04,140,2.667,141,4.04,142,1.962,143,4.04,144,2.667,145,2.321,146,4.218,147,1.48,148,2.667,149,2.667,150,0.38,151,0.499,152,2.07,153,1.893,154,2.07,155,2.07,156,1.751,157,0.544,158,2.498,159,1.953,160,3.494,161,2.307,162,2.307,163,4.04,164,4.04,165,2.474,166,0.935,167,2.667,168,2.667,169,1.618,170,2.667,171,2.667,172,2.667,173,2.667,174,2.307,175,2.667,176,2.667,177,2.667,178,2.667,179,1.295,180,0.824,181,2.667]],["title/classes/AuthorizationTokenEntity.html",[49,0.263,182,2.735]],["body/classes/AuthorizationTokenEntity.html",[12,0.016,21,0.153,22,0.119,23,0.102,25,0.275,29,0.243,31,0.699,33,2.484,48,0.153,49,0.254,50,0.008,51,0.01,52,0.008,60,0.284,61,1.008,64,0.581,66,2.946,77,3.198,78,3.025,80,5.508,113,0.777,150,0.532,151,0.699,157,1.052,166,1.789,182,3.659,183,0.532,184,3.19,185,5.977,186,3.23,187,3.84,188,4.191,189,5.108,190,3.198,191,3.534,192,1.251,193,1.611,194,4.42,195,3.734,196,4.182,197,3.734,198,1.546,199,6.368,200,3.734,201,6.909,202,3.386,203,3.734,204,2.963,205,2.226,206,3.734,207,0.762,208,2.381,209,2.505,210,2.65,211,3.23,212,5.186]],["title/classes/AuthorizationTokenEntityResolver.html",[49,0.263,213,2.735]],["body/classes/AuthorizationTokenEntityResolver.html",[12,0.016,21,0.108,22,0.084,23,0.072,25,0.253,27,2.446,29,0.293,31,1.226,33,2.503,34,3.745,48,0.108,49,0.179,50,0.005,51,0.008,52,0.005,60,0.2,62,1.04,63,2.834,64,0.62,66,2.662,67,1.609,77,3.705,78,3.504,79,2.145,85,1.651,89,1.609,91,1.046,93,1.055,96,1.276,100,1.529,101,1.85,108,1.529,111,3.652,112,2.492,113,0.675,115,2.297,116,2.127,117,1.235,120,1.675,121,2.373,123,3.255,126,3.436,127,2.163,128,1.893,145,3.514,150,0.374,151,0.492,154,2.038,158,2.045,159,1.599,165,3.306,166,1.668,169,1.599,179,1.94,180,1.234,182,5.273,183,0.374,184,2.823,187,2.776,192,1.01,196,3.544,205,1.287,207,0.815,209,1.94,210,1.864,211,4.179,213,2.834,214,2.272,215,4.831,216,3.454,217,2.626,218,2.626,219,2.626,220,2.038,221,3.893,222,2.626,223,3.454,224,2.626,225,3.099,226,2.626,227,3.812,228,2.622,229,2.626,230,3.547,231,2.626,232,2.626,233,2.626,234,2.626,235,1.864,236,2.626,237,2.622,238,3.172,239,2.834,240,2.834,241,1.725,242,2.038,243,1.725,244,1.345,245,2.038,246,1.609,247,1.725,248,1.509,249,1.609,250,2.038,251,2.626,252,2.272,253,2.626,254,2.626,255,1.864,256,3.993,257,2.626,258,2.626,259,3.993,260,1.844,261,2.626,262,2.038,263,2.626,264,1.422,265,2.038,266,3.993,267,2.626,268,1.422,269,2.272,270,1.213,271,2.038,272,2.626,273,2.626,274,2.626,275,2.626]],["title/modules/AuthorizationTokenModule.html",[0,1.295,11,2.531]],["body/modules/AuthorizationTokenModule.html",[0,2.444,2,2.23,3,2.346,4,2.615,5,2.615,6,2.346,7,3.435,8,3.435,11,5.129,12,0.016,14,3.43,17,4.55,18,3.31,19,2.615,20,2.473,21,0.198,22,0.154,23,0.132,25,0.176,28,3.513,29,0.299,30,1.556,33,2.473,34,2.958,48,0.198,49,0.329,50,0.01,51,0.012,52,0.01,66,2.34,111,4.512,154,3.747,184,2.23,213,4.338,276,4.177,277,4.829,278,4.177,279,4.177,280,4.829,281,4.744,282,3.171,283,4.829,284,4.829]],["title/injectables/AuthorizationTokenService.html",[111,2.215,147,1.412]],["body/injectables/AuthorizationTokenService.html",[12,0.016,21,0.098,22,0.076,23,0.066,25,0.215,29,0.274,30,0.771,31,1.103,33,2.34,34,3.765,48,0.098,49,0.163,50,0.005,51,0.007,52,0.005,60,0.182,62,0.997,64,0.64,65,2.136,66,2.928,67,3.148,76,2.441,79,2.229,83,1.465,85,1.675,89,1.465,91,1.664,93,0.468,96,1.162,100,1.423,101,2.601,108,1.423,111,2.136,112,2.373,113,0.685,115,2.066,116,2.039,117,1.254,120,2.47,121,2.26,128,1.952,129,3.198,147,1.362,151,0.448,156,1.571,158,1.904,159,1.489,165,4.161,166,1.704,169,2.545,179,2.214,180,1.588,184,2.839,188,3.647,189,3.943,190,1.296,191,1.105,194,3.409,196,3.375,198,1.363,216,3.943,221,1.465,244,1.226,247,1.571,248,1.375,249,3.148,250,1.857,255,1.698,260,3.137,264,1.296,268,2.013,285,1.296,286,2.07,287,4.558,288,3.717,289,5.139,290,4.558,291,2.07,292,3.652,293,2.393,294,3.717,295,2.393,296,2.393,297,3.717,298,3.717,299,2.441,300,4.173,301,2.393,302,2.393,303,2.393,304,2.393,305,3.215,306,3.215,307,2.393,308,2.393,309,2.393,310,2.393,311,2.885,312,3.647,313,1.857,314,1.698,315,2.393,316,2.885,317,2.885,318,2.885,319,2.885,320,2.885,321,1.698,322,1.465,323,5.139,324,2.393,325,2.393,326,2.393,327,2.393,328,2.497,329,2.885,330,3.215,331,2.393,332,2.885,333,2.393,334,2.393,335,2.393,336,2.393,337,2.393,338,2.393,339,2.393,340,3.717,341,2.393,342,2.393,343,2.393,344,1.857,345,2.393,346,2.393,347,2.393,348,3.717,349,2.393,350,2.393,351,2.393,352,1.857,353,2.393,354,2.393,355,4.446,356,2.07,357,1.857,358,2.393,359,2.07,360,3.215,361,1.698,362,2.393,363,1.375,364,2.393,365,2.393,366,2.393,367,2.393,368,2.393,369,2.393]],["title/interfaces/AuthorizationTokenValidityPeriod.html",[53,2.215,321,2.735]],["body/interfaces/AuthorizationTokenValidityPeriod.html",[12,0.016,21,0.215,22,0.167,23,0.144,25,0.191,29,0.215,48,0.215,50,0.011,51,0.013,52,0.011,53,3.014,55,3.721,60,0.399,61,1.258,64,0.659,66,2.903,184,2.421,312,3.721,321,4.566,328,3.126,329,5.634,330,6.279,332,4.994,370,4.536,371,6.279,372,6.962,373,3.126]],["title/classes/CreateAuthorizationTokenArgs.html",[49,0.263,227,2.531]],["body/classes/CreateAuthorizationTokenArgs.html",[12,0.016,21,0.176,22,0.136,23,0.117,25,0.267,29,0.26,33,2.523,48,0.176,49,0.292,50,0.009,51,0.011,52,0.009,60,0.325,61,1.105,64,0.661,66,2.164,113,0.736,115,2.668,150,0.61,165,4.56,166,1.697,183,0.61,184,3.109,192,1.185,193,1.526,198,1.465,207,1.374,227,3.712,230,3.062,249,4.124,250,3.321,260,3.54,328,3.271,374,5.226,375,3.702,376,4.279,377,4.279,378,4.422,379,4.422,380,4.422,381,2.578,382,4.279,383,4.012,384,4.279]],["title/classes/DateTimeFilter.html",[49,0.263,385,2.531]],["body/classes/DateTimeFilter.html",[12,0.016,21,0.147,22,0.114,23,0.098,25,0.282,29,0.205,31,0.668,48,0.147,49,0.243,50,0.007,51,0.01,52,0.007,60,0.271,61,0.977,62,1.377,64,0.62,93,1.502,113,0.83,150,0.508,151,0.668,157,1.019,183,0.508,191,3.695,192,1.336,193,1.721,207,1.479,352,5.101,385,4.316,386,6.273,387,3.087,388,3.785,389,2.8,390,5.686,391,5.686,392,5.686,393,5.686,394,4.986,395,2.013,396,3.569,397,3.569,398,3.569,399,3.569,400,3.569,401,3.569,402,3.569,403,3.569,404,4.686,405,1.913,406,3.569]],["title/classes/ExecutionContext.html",[49,0.263,123,1.974]],["body/classes/ExecutionContext.html",[12,0.016,21,0.125,22,0.097,23,0.084,25,0.225,29,0.183,31,0.571,33,2.267,48,0.125,49,0.208,50,0.006,51,0.009,52,0.006,60,0.232,61,0.872,62,1.226,64,0.58,66,2.921,77,2.417,78,2.286,79,2.267,83,1.867,85,1.759,91,1.619,93,0.596,96,1.481,100,1.709,101,2.021,108,1.709,112,3.359,113,0.776,115,2.341,116,2.129,117,1.236,123,2.704,126,3.577,127,3.147,128,1.852,129,3.339,142,2.168,151,0.571,152,6.109,153,4.857,158,3.506,165,4.572,166,1.727,169,1.221,180,0.942,183,0.434,198,1.544,246,4.192,264,1.651,328,2.168,357,2.366,407,2.637,408,6.982,409,6.982,410,5.279,411,4.463,412,3.048,413,3.048,414,3.86,415,3.048,416,3.048,417,3.048,418,3.048,419,3.048,420,4.463,421,3.048,422,3.048,423,4.463,424,3.048,425,4.463,426,3.048,427,5.279,428,3.048,429,3.048,430,3.048,431,3.048,432,1.867,433,3.048,434,3.048,435,3.048,436,3.048,437,3.048,438,3.048,439,3.048,440,3.048,441,3.048,442,3.048,443,3.048]],["title/classes/MomentAudioMedia.html",[49,0.263,444,2.215]],["body/classes/MomentAudioMedia.html",[12,0.016,21,0.138,22,0.107,23,0.092,25,0.278,29,0.197,48,0.275,49,0.415,50,0.007,51,0.01,52,0.007,60,0.256,61,0.937,62,0.859,64,0.65,85,1.588,91,0.882,93,0.937,113,0.649,117,1.02,150,0.48,157,1.139,179,1.635,180,1.04,183,0.48,192,1.045,193,1.346,198,1.715,207,1.403,208,2.81,244,1.725,322,2.062,395,1.256,444,3.497,445,1.935,446,4.497,447,4.238,448,2.676,449,4.17,450,5.15,451,3.875,452,3.367,453,4.382,454,3.367,455,4.223,456,2.613,457,2.613,458,3.148,459,3.403,460,1.935,461,2.062,462,2.062,463,3.667,464,2.389,465,2.755,466,3.209,467,3.209,468,3.148,469,2.011,470,2.211,471,2.755,472,2.211,473,2.062,474,2.211,475,3.42,476,2.211,477,2.211,478,2.211,479,1.725,480,2.211]],["title/classes/MomentEntity.html",[49,0.263,481,2.531]],["body/classes/MomentEntity.html",[12,0.016,21,0.139,22,0.108,23,0.093,25,0.281,29,0.251,31,0.634,48,0.139,49,0.231,50,0.007,51,0.01,52,0.007,60,0.257,61,0.941,64,0.612,93,1.193,113,0.819,150,0.482,151,0.634,157,0.982,166,1.296,183,0.482,187,3.22,191,2.817,192,1.318,193,1.698,198,1.681,205,2.429,207,1.461,208,2.223,209,2.339,210,2.404,395,1.598,404,3.679,447,3.732,469,3.352,471,2.767,481,3.162,482,2.93,483,5.347,484,3.22,485,4.846,486,4.827,487,4.348,488,5.347,489,3.387,490,4.165,491,4.735,492,3.387,493,6.101,494,3.387,495,3.387,496,4.815,497,3.387,498,3.387,499,3.387,500,3.387,501,3.387,502,3.387]],["title/classes/MomentFindFirstArgs.html",[49,0.263,503,2.735]],["body/classes/MomentFindFirstArgs.html",[12,0.016,21,0.222,22,0.172,23,0.148,29,0.29,31,1.012,48,0.222,49,0.368,50,0.011,51,0.013,52,0.011,60,0.411,61,1.281,91,1.416,96,3.428,113,0.629,150,0.77,151,1.012,157,1.337,183,0.77,264,3.822,328,2.627,379,4.633,383,5.007,448,2.377,469,2.267,479,2.77,503,4.653,504,3.551,505,4.677,506,4.016,507,5.407,508,4.677,509,3.551,510,4.677,511,5.407,512,4.677,513,4.677]],["title/classes/MomentFindManyArgs.html",[49,0.263,509,2.531]],["body/classes/MomentFindManyArgs.html",[12,0.016,21,0.138,22,0.107,23,0.092,25,0.273,29,0.264,31,0.631,48,0.138,49,0.23,50,0.007,51,0.01,52,0.007,60,0.256,61,0.938,62,1.329,64,0.581,93,1.45,113,0.778,117,0.717,150,0.48,151,0.631,157,0.979,183,0.48,192,1.252,193,1.613,207,1.435,221,2.94,373,2.958,379,4.518,383,3.406,389,2.332,395,1.942,460,1.938,462,2.065,469,2.553,504,3.727,509,3.152,512,5.952,513,5.952,514,2.917,515,3.725,516,6.881,517,6.435,518,4.834,519,3.998,520,6.688,521,7.034,522,6.089,523,5.918,524,3.372,525,5.589,526,3.372,527,4.321,528,4.8,529,3.67,530,6.089,531,3.372,532,5.267,533,7.034,534,6.089,535,4.152,536,3.372,537,4.8,538,3.372,539,3.998,540,3.372,541,4.337,542,2.617,543,2.917,544,2.393,545,3.372,546,3.372,547,3.372]],["title/classes/MomentImageMedia.html",[49,0.263,467,2.215]],["body/classes/MomentImageMedia.html",[12,0.016,21,0.143,22,0.111,23,0.096,25,0.278,29,0.202,48,0.278,49,0.421,50,0.007,51,0.01,52,0.007,60,0.265,61,0.962,64,0.649,85,1.62,91,0.914,93,0.682,113,0.572,117,1.047,150,0.497,157,1.162,179,1.696,180,1.079,183,0.497,192,0.921,193,1.186,198,1.711,207,1.418,208,2.856,244,1.789,322,2.139,395,0.914,444,3.274,445,2.007,446,4.143,447,4.23,448,2.719,449,4.203,450,4.801,451,3.664,453,4.347,455,4.281,456,2.71,457,2.71,458,3.231,459,3.492,460,2.007,461,2.139,462,2.139,463,4.061,464,2.478,465,2.827,466,3.274,467,3.554,468,4.281,469,2.063,470,2.293,471,2.827,472,2.293,473,2.139,474,2.293,475,3.489,476,2.293,477,2.293,478,2.293,479,1.789,480,2.293,548,3.492]],["title/classes/MomentListRelationFilter.html",[49,0.263,549,2.735]],["body/classes/MomentListRelationFilter.html",[12,0.016,21,0.182,22,0.142,23,0.122,25,0.27,29,0.265,31,0.831,48,0.182,49,0.302,50,0.009,51,0.012,52,0.009,60,0.337,61,1.132,62,1.302,64,0.56,93,1.42,113,0.75,150,0.632,151,0.831,157,1.181,183,0.632,192,1.206,193,1.554,207,1.393,381,2.782,389,3.595,395,1.903,405,2.217,469,3.147,504,3.7,539,5.027,544,3.151,549,4.11,550,5.064,551,3.151,552,7.085,553,5.252,554,3.84,555,4.439,556,3.84,557,4.439]],["title/classes/MomentMediaCommon.html",[49,0.263,449,2.215]],["body/classes/MomentMediaCommon.html",[12,0.016,21,0.147,22,0.114,23,0.098,25,0.277,29,0.206,48,0.28,49,0.426,50,0.007,51,0.01,52,0.007,60,0.272,61,0.979,64,0.646,85,1.642,91,0.938,93,0.7,113,0.416,117,1.066,150,0.51,157,1.178,179,1.739,180,1.106,183,0.51,192,0.67,193,0.863,198,1.701,207,1.428,208,2.887,244,1.834,322,2.193,395,0.938,444,3.318,445,2.058,446,4.177,447,4.241,448,2.539,449,4.17,450,4.839,451,3.693,453,4.375,455,4.321,458,3.288,459,3.554,460,2.058,461,2.193,462,2.193,463,3.792,464,2.541,465,3.318,466,3.318,467,3.318,468,3.288,469,2.1,470,2.351,471,2.878,472,2.351,473,2.193,474,2.351,475,3.537,476,2.351,477,2.351,478,2.351,479,1.834,480,2.351,558,3.58]],["title/modules/MomentModule.html",[0,1.295,13,2.531]],["body/modules/MomentModule.html",[0,2.384,2,2.527,3,2.658,4,2.964,5,2.964,6,2.658,7,3.383,8,2.803,12,0.016,13,5.03,14,3.537,18,3.577,19,2.964,20,2.803,21,0.225,22,0.174,23,0.15,28,3.795,29,0.291,30,1.763,48,0.225,49,0.373,50,0.011,51,0.013,52,0.011,282,3.594,559,5.472,560,5.472,561,5.472,562,4.687,563,5.472]],["title/classes/MomentOrderByInput.html",[49,0.263,527,2.735]],["body/classes/MomentOrderByInput.html",[12,0.016,21,0.139,22,0.108,23,0.093,25,0.279,29,0.23,31,0.635,48,0.139,49,0.231,50,0.007,51,0.01,52,0.007,60,0.258,61,0.942,62,1.368,64,0.612,93,1.492,113,0.819,150,0.483,151,0.635,157,0.983,183,0.483,192,1.319,193,1.699,205,1.807,207,1.605,381,1.299,395,1.999,405,1.845,447,3.037,469,1.422,483,4.352,484,3.222,485,4.85,486,3.682,487,4.352,488,4.352,504,3.882,527,3.421,529,5.187,542,2.633,564,2.407,565,6.043,566,5.923,567,2.934,568,2.934,569,2.934,570,2.934,571,2.934,572,4.333,573,3.392,574,2.934,575,2.934,576,1.737,577,3.392]],["title/classes/MomentResolver.html",[49,0.263,562,2.735]],["body/classes/MomentResolver.html",[12,0.016,21,0.127,22,0.098,23,0.085,25,0.263,29,0.282,48,0.127,49,0.21,50,0.006,51,0.009,52,0.006,60,0.235,62,1.114,64,0.597,79,2.05,85,1.662,93,0.88,100,1.724,108,1.181,112,2.996,113,0.723,116,2.277,117,1.381,128,2.05,145,2.588,150,0.44,151,0.578,159,1.236,180,1.391,183,0.44,192,1.094,205,0.994,207,0.919,209,2.187,210,2.19,220,4.126,221,3.58,230,4.021,235,2.19,237,2.957,239,4.148,240,3.196,243,2.026,244,1.581,264,2.439,271,2.395,300,2.957,379,5.058,380,3.491,389,3.543,395,1.179,469,3.156,481,4.081,486,3.838,503,4.411,509,4.081,510,2.669,519,4.081,523,5.036,532,5.056,543,2.669,562,3.196,578,2.669,579,5.316,580,5.316,581,5.316,582,2.669,583,3.086,584,3.086,585,6.309,586,3.086,587,3.086,588,6.868,589,5.056,590,3.086,591,3.086,592,5.056,593,3.086,594,4.503,595,3.086,596,2.395,597,5.316,598,3.086,599,2.669,600,1.89,601,3.086,602,3.086,603,3.086,604,3.086,605,2.669,606,3.086]],["title/classes/MomentVideoMedia.html",[49,0.263,466,2.215]],["body/classes/MomentVideoMedia.html",[12,0.016,21,0.139,22,0.108,23,0.093,25,0.278,29,0.198,48,0.275,49,0.416,50,0.007,51,0.01,52,0.007,60,0.257,61,0.941,64,0.651,85,1.593,91,0.887,93,0.662,113,0.652,117,1.025,150,0.482,157,1.143,179,1.645,180,1.046,183,0.482,192,1.049,193,1.351,198,1.717,207,1.405,208,2.817,244,1.735,322,2.075,395,0.887,444,3.22,445,1.946,446,4.102,447,4.24,448,2.683,449,4.176,450,5.156,451,3.88,453,4.618,455,4.233,456,2.629,457,2.629,458,3.162,459,3.417,460,1.946,461,2.075,462,2.075,463,3.679,464,2.404,465,2.767,466,3.506,467,3.22,468,3.162,469,2.019,470,2.224,471,2.767,472,2.224,473,2.075,474,2.224,475,3.432,476,2.224,477,2.224,478,2.224,479,1.735,480,2.224,607,3.387,608,3.387]],["title/classes/MomentWhereInput.html",[49,0.263,539,2.531]],["body/classes/MomentWhereInput.html",[12,0.016,21,0.14,22,0.108,23,0.093,25,0.281,29,0.251,31,0.636,48,0.14,49,0.231,50,0.007,51,0.01,52,0.007,60,0.258,61,0.943,62,1.381,64,0.623,93,1.506,113,0.834,150,0.484,151,0.636,157,0.984,183,0.484,191,2.228,192,1.342,193,1.729,198,1.551,205,2.222,207,1.483,385,3.685,388,3.169,389,3.608,395,2.018,405,1.847,483,5.008,484,3.225,486,4.528,487,4.355,488,5.008,491,3.745,504,3.938,506,2.956,539,4.83,576,1.74,609,2.411,610,3.397,611,4.621,612,2.636,613,2.939,614,2.939,615,2.939,616,2.636,617,4.012,618,2.939,619,2.939,620,2.939,621,2.636,622,2.636]],["title/classes/MomentWhereUniqueInput.html",[49,0.263,519,2.531]],["body/classes/MomentWhereUniqueInput.html",[12,0.016,21,0.231,22,0.18,23,0.154,25,0.205,29,0.295,31,1.055,48,0.231,49,0.384,50,0.011,51,0.014,52,0.011,91,1.476,150,0.803,151,1.055,157,1.371,183,0.803,205,1.816,380,3.701,381,2.158,405,2.75,448,2.478,469,2.364,481,3.701,504,3.053,519,4.414,599,4.876,623,4.374,624,4,625,4,626,5.636,627,5.636]],["title/modules/PrismaModule.html",[0,1.295,14,1.779]],["body/modules/PrismaModule.html",[0,2.459,2,2.104,7,2.334,8,2.334,12,0.016,14,2.719,21,0.187,22,0.145,23,0.125,25,0.166,29,0.268,30,1.468,31,1.394,46,3.536,47,3.536,48,0.187,49,0.445,50,0.009,51,0.012,52,0.009,91,1.193,101,2.255,108,2.255,112,3.013,118,4.57,121,3.141,151,0.853,157,0.929,158,2.334,159,1.825,169,2.358,180,1.408,281,5.064,311,5.064,448,2.003,628,3.536,629,5.094,630,4.631,631,5.645,632,5.645,633,3.536,634,4.57,635,3.941,636,3.941,637,3.941,638,3.941,639,3.941,640,3.941,641,3.941,642,5.094,643,5.094,644,3.941,645,3.941,646,3.233,647,3.941,648,3.941,649,3.941,650,3.941]],["title/modules/SecurityModule.html",[0,1.295,15,2.36]],["body/modules/SecurityModule.html",[0,2.452,2,2.254,3,2.371,4,2.644,5,2.644,6,2.371,7,3.452,8,3.452,12,0.016,14,3.44,15,4.792,16,4.563,18,3.333,19,2.644,20,2.5,21,0.2,22,0.156,23,0.134,25,0.178,28,3.537,29,0.3,30,1.573,42,2.146,48,0.2,49,0.333,50,0.01,51,0.012,52,0.01,260,3.268,282,3.205,651,4.222,652,4.222,653,4.222,654,4.881,655,4.519,656,4.881,657,2.047,658,4.367,659,4.881,660,3.788]],["title/classes/SecuritySmsResolver.html",[49,0.263,658,2.735]],["body/classes/SecuritySmsResolver.html",[12,0.016,21,0.14,22,0.109,23,0.094,25,0.262,27,2.968,29,0.284,33,1.7,48,0.14,49,0.233,50,0.007,51,0.01,52,0.007,60,0.26,62,1.009,63,2.425,64,0.584,67,2.093,74,2.652,75,3.236,79,1.975,85,1.378,89,2.093,91,1.269,93,0.947,100,1.855,101,2.572,108,1.308,113,0.655,115,2.608,116,2.063,117,1.304,120,2.032,123,3.138,126,3.539,127,2.625,128,1.7,142,2.354,145,3.861,150,0.487,159,1.369,169,1.941,179,1.66,180,1.056,183,0.487,184,1.578,188,3.439,192,0.907,198,1.417,202,4.023,223,2.956,228,3.182,230,2.625,238,3.697,241,2.244,244,1.751,245,2.652,246,2.093,260,3.462,270,3.462,373,3.356,404,3.697,600,2.093,655,3.97,658,3.439,660,2.652,661,4.348,662,2.956,663,4.958,664,5.63,665,4.846,666,2.956,667,3.418,668,4.846,669,3.418,670,4.459,671,3.418,672,3.418,673,3.418,674,3.418,675,2.652,676,2.652,677,3.418,678,3.418,679,2.956,680,3.418,681,3.418]],["title/injectables/SecuritySmsService.html",[147,1.412,655,2.215]],["body/injectables/SecuritySmsService.html",[12,0.016,21,0.117,22,0.091,23,0.078,25,0.23,29,0.247,30,0.921,31,1.182,41,1.965,42,1.872,48,0.117,49,0.195,50,0.006,51,0.009,52,0.006,59,3.115,60,0.217,62,1.079,64,0.523,65,2.922,79,2.294,85,1.86,91,1.76,96,2.47,100,1.63,101,2.629,108,1.63,112,2.601,113,0.701,115,1.493,116,2.206,117,1.282,120,2.648,121,1.872,128,1.976,129,2.446,147,1.559,151,0.535,158,2.18,159,1.705,169,2.036,180,0.883,188,3.021,191,1.32,198,1.589,205,1.371,247,1.878,248,1.643,260,3.455,264,1.549,268,2.305,269,2.473,270,3.493,285,1.549,312,3.021,329,4.372,363,2.446,373,2.736,484,1.643,518,2.473,655,2.446,657,1.199,661,4.481,663,4.589,670,4.584,676,4.9,682,2.473,683,5.085,684,3.682,685,4.257,686,2.859,687,4.005,688,2.859,689,2.859,690,2.859,691,4.257,692,4.257,693,4.257,694,2.859,695,5.633,696,4.257,697,5.633,698,5.085,699,4.257,700,2.859,701,4.257,702,5.633,703,2.859,704,3.304,705,2.859,706,2.859,707,2.859,708,2.859,709,2.859,710,2.859,711,2.859,712,2.859,713,2.859,714,2.859,715,2.859,716,2.859,717,2.859,718,4.257,719,2.859,720,2.859,721,2.859,722,2.473,723,2.859,724,2.859,725,2.859,726,2.859,727,2.859,728,2.859,729,2.859,730,2.859,731,2.859,732,2.859,733,2.859,734,2.859,735,2.859,736,2.859,737,2.859,738,2.859,739,2.859]],["title/interfaces/SocfonyConfig.html",[53,2.215,740,2.735]],["body/interfaces/SocfonyConfig.html",[12,0.016,21,0.177,22,0.138,23,0.185,25,0.157,27,4.302,29,0.234,30,1.392,45,3.484,48,0.261,50,0.009,51,0.011,52,0.009,53,2.483,55,3.066,60,0.328,61,1.112,64,0.553,65,3.655,78,3.766,79,1.516,83,3.484,85,1.229,91,1.49,128,1.516,142,3.09,180,1.335,198,1.701,225,4.415,361,4.037,373,3.09,451,3.661,630,4.037,740,4.797,741,3.353,742,6.238,743,7.023,744,7.352,745,6.36,746,5.689,747,3.737,748,3.737,749,5.246,750,3.737,751,4.32,752,4.32,753,4.32,754,4.32,755,4.32,756,3.066,757,4.32,758,4.32,759,4.32,760,4.32]],["title/classes/StringFilter.html",[49,0.263,611,2.36]],["body/classes/StringFilter.html",[12,0.016,21,0.125,22,0.097,23,0.084,25,0.284,29,0.183,31,0.571,48,0.125,49,0.208,50,0.006,51,0.009,52,0.006,60,0.232,61,0.873,62,1.392,64,0.633,93,1.518,113,0.846,117,0.65,150,0.435,151,0.571,157,0.911,183,0.435,192,1.362,193,1.755,198,1.865,207,1.499,221,2.736,352,4.802,389,2.567,390,5.352,391,5.352,392,5.352,393,5.352,394,4.57,395,2.034,405,1.71,460,1.754,611,3.79,761,2.641,762,6.188,763,5.283,764,6.188,765,5.283,766,3.053,767,4.467,768,3.053,769,3.053,770,3.053,771,3.053,772,3.053,773,3.053,774,3.053,775,5.283,776,3.053,777,3.053,778,3.053,779,4.467,780,3.053,781,3.053,782,3.053,783,3.053]],["title/classes/TencentCloudCosCredentials.html",[49,0.263,784,2.735]],["body/classes/TencentCloudCosCredentials.html",[12,0.016,21,0.175,22,0.136,23,0.117,25,0.271,29,0.232,33,2.572,41,3.615,42,3.443,48,0.175,49,0.291,50,0.009,51,0.011,52,0.009,60,0.325,61,1.104,64,0.55,66,2.576,113,0.736,150,0.608,183,0.608,192,1.184,193,1.525,198,1.663,207,1.373,208,2.607,657,2.822,784,4.007,785,3.695,786,5.439,787,3.874,788,6.629,789,5.203,790,4.121,791,4.021,792,4.271,793,4.271,794,4.271]],["title/classes/TencentCloudCosResolver.html",[49,0.263,795,2.735]],["body/classes/TencentCloudCosResolver.html",[12,0.016,21,0.123,22,0.095,23,0.143,25,0.253,29,0.263,33,2.478,41,3.409,42,3.246,45,1.83,48,0.181,49,0.204,50,0.006,51,0.009,52,0.006,60,0.227,62,0.935,64,0.642,66,1.684,79,2.019,85,1.484,92,2.694,100,1.684,101,2.456,108,1.144,113,0.669,115,2.512,116,1.912,117,1.305,120,1.844,126,1.53,127,1.618,128,1.83,129,3.812,142,1.451,145,3.687,150,0.426,159,1.197,183,0.426,192,0.977,225,2.319,228,2.888,230,2.382,235,2.12,237,2.888,238,3.427,239,3.121,240,3.121,241,1.962,247,1.962,248,1.717,371,3.804,446,1.83,453,1.83,460,1.717,462,1.83,468,1.962,600,1.83,657,2.572,722,3.804,784,4.084,786,5.143,787,4.063,790,2.694,791,2.999,795,3.121,796,2.319,797,3.413,798,5.755,799,5.218,800,2.988,801,3.525,802,2.988,803,5.218,804,2.988,805,2.988,806,3.413,807,4.978,808,2.988,809,2.988,810,6.009,811,4.467,812,2.988,813,2.988,814,2.988,815,2.988,816,3.121,817,3.804,818,3.804,819,3.804,820,3.804,821,3.804,822,3.804,823,3.804,824,3.804,825,3.804,826,2.988,827,2.988,828,2.988,829,3.413,830,4.398,831,2.988,832,2.585,833,2.988]],["title/injectables/TencentCloudCosService.html",[147,1.412,801,2.36]],["body/injectables/TencentCloudCosService.html",[12,0.016,21,0.136,22,0.106,23,0.091,25,0.202,29,0.228,30,1.07,41,3.341,42,3.182,48,0.136,49,0.226,50,0.007,51,0.01,52,0.007,59,3.919,60,0.253,62,0.851,64,0.413,79,1.666,85,1.72,91,1.743,100,1.818,101,2.548,108,1.272,113,0.744,115,2.334,116,1.74,117,1.416,120,2.791,128,1.666,147,1.74,159,1.33,169,1.902,198,1.282,247,2.181,248,1.909,285,1.799,300,3.119,432,2.909,550,3.119,600,2.035,657,2.791,684,2.874,786,5.249,787,4.076,788,4.795,789,3.934,791,3.825,801,2.909,807,4.108,811,3.686,816,3.37,832,4.108,834,2.874,835,6.048,836,4.749,837,4.108,838,5.543,839,3.322,840,3.705,841,3.322,842,3.322,843,6.655,844,4.749,845,3.322,846,3.322,847,3.322,848,3.322,849,4.749,850,4.749,851,3.322,852,3.322,853,3.322,854,4.749,855,4.749,856,4.749,857,4.749,858,4.749,859,4.749,860,4.749,861,4.749,862,4.749,863,4.749,864,4.749,865,4.749,866,4.749,867,4.749,868,4.749,869,4.749,870,4.749,871,3.322,872,3.322,873,3.322,874,3.322,875,3.322,876,3.322,877,3.322,878,3.322,879,3.322,880,3.322,881,3.322,882,3.322,883,3.322]],["title/modules/TencentCloudModule.html",[0,1.295,16,2.36]],["body/modules/TencentCloudModule.html",[0,2.421,2,2.16,3,2.273,4,2.534,5,2.534,6,2.273,7,3.385,8,3.385,12,0.016,16,4.811,18,3.245,19,2.534,20,2.396,21,0.192,22,0.149,23,0.128,25,0.17,29,0.296,30,1.507,41,2.766,42,2.634,48,0.192,49,0.319,50,0.009,51,0.012,52,0.009,657,1.962,663,3.072,687,4.788,786,3.32,791,2.689,795,4.251,801,4.788,840,4.788,884,4.047,885,4.047,886,4.047,887,4.679,888,4.679,889,4.679,890,4.679]],["title/injectables/TencentCloudSmsService.html",[147,1.412,687,2.36]],["body/injectables/TencentCloudSmsService.html",[12,0.016,21,0.162,22,0.126,23,0.108,25,0.195,29,0.268,30,1.273,41,3.01,42,2.867,48,0.162,49,0.269,50,0.008,51,0.011,52,0.008,59,3.282,60,0.3,62,0.96,64,0.466,78,2.023,79,1.386,85,1.729,91,1.403,100,2.051,101,2.328,113,0.707,115,1.879,116,1.963,117,1.14,120,2.247,121,3.161,128,2.133,147,1.963,152,3.066,169,1.582,180,1.22,198,1.626,285,2.139,328,2.603,465,2.27,479,2.744,515,5.289,657,2.734,663,4.922,676,5.578,687,3.282,787,2.419,789,4.837,829,3.066,837,4.635,891,3.417,892,4.635,893,6.08,894,4.635,895,3.95,896,5.64,897,5.64,898,3.95,899,3.95,900,7.028,901,3.95,902,3.95,903,5.358,904,3.518,905,3.518,906,3.95,907,3.95,908,3.95,909,3.802,910,3.95,911,3.95,912,3.95,913,3.95,914,3.95,915,3.95,916,3.95,917,3.95,918,1.512,919,3.417,920,3.95,921,3.95,922,3.95,923,3.95]],["title/classes/TencentCloudStsCredentials.html",[49,0.263,924,2.735]],["body/classes/TencentCloudStsCredentials.html",[12,0.016,21,0.146,22,0.113,23,0.097,25,0.273,29,0.236,41,3.632,42,3.441,48,0.205,49,0.34,50,0.007,51,0.01,52,0.007,60,0.27,61,0.974,64,0.5,66,2.774,93,1.125,113,0.669,150,0.507,157,1.174,183,0.507,191,2.302,192,1.077,193,1.388,194,3.82,198,1.717,205,2.009,207,1.425,208,2.657,373,1.728,388,3.273,395,1.507,432,3.82,541,3.869,657,2.615,790,2.179,791,3.773,797,6.132,806,3.869,904,3.273,905,3.273,924,4.426,925,2.761,926,4.978,927,4.978,928,6.168,929,3.558,930,3.558,931,3.558,932,4.312,933,4.312,934,4.312,935,4.312,936,3.077,937,4.312,938,3.077]],["title/classes/TencentCloudStsFederationToken.html",[49,0.263,790,2.36]],["body/classes/TencentCloudStsFederationToken.html",[12,0.016,21,0.143,22,0.111,23,0.095,25,0.272,29,0.233,41,3.624,42,3.422,48,0.201,49,0.334,50,0.007,51,0.01,52,0.007,60,0.264,61,0.959,62,1.21,64,0.494,66,2.586,93,1.32,113,0.661,150,0.495,157,1.159,183,0.495,191,2.85,192,1.064,193,1.37,194,4.342,198,1.668,205,1.58,207,1.416,208,2.624,373,2.382,388,4.053,395,1.769,432,3.004,541,3.806,657,2.588,790,3.004,791,3.741,797,6.12,806,4.41,904,3.22,905,3.22,924,4.38,925,2.697,926,3.006,927,3.006,928,5.339,932,4.915,933,4.242,934,4.915,935,5.339,936,4.915,937,5.339,938,4.915,939,3.476,940,3.476,941,3.476]],["title/injectables/TencentCloudStsService.html",[147,1.412,840,2.36]],["body/injectables/TencentCloudStsService.html",[12,0.016,21,0.199,22,0.154,23,0.133,25,0.223,29,0.276,30,1.559,41,2.826,42,2.691,48,0.199,49,0.33,50,0.01,51,0.012,52,0.01,60,0.368,62,0.867,64,0.421,78,2.479,79,1.697,85,1.376,100,2.343,113,0.563,115,2.147,116,1.773,117,1.03,120,2.567,121,3.268,128,1.697,147,2.242,180,1.495,198,1.553,285,2.621,328,2.351,465,2.781,479,2.479,657,2.567,787,2.964,789,5.357,791,4.054,840,3.749,892,5.294,894,5.294,896,5.294,897,5.294,904,3.178,905,3.178,909,4.344,918,1.853,919,4.186,942,4.186,943,4.839,944,5.294,945,4.839,946,4.839]],["title/classes/UpdateViewerArgs.html",[49,0.263,947,2.735]],["body/classes/UpdateViewerArgs.html",[12,0.016,21,0.182,22,0.141,23,0.121,25,0.258,29,0.264,33,1.554,48,0.182,49,0.302,50,0.009,51,0.012,52,0.009,60,0.337,61,1.13,62,1.036,64,0.56,75,3.922,91,1.16,93,1.13,113,0.673,150,0.631,166,1.638,180,2.109,183,0.631,184,2.046,192,1.083,193,1.395,198,1.49,202,3.798,207,1.313,227,3.798,230,3.132,252,3.833,260,3.269,268,3.487,270,3.464,363,4.398,374,3.439,381,2.613,383,4.569,395,1.515,448,1.948,625,4.104,646,4.844,670,4.181,947,4.104,948,5.569,949,3.833,950,5.569,951,4.844,952,4.431,953,4.431,954,3.833]],["title/classes/UserEntity.html",[49,0.263,209,1.872]],["body/classes/UserEntity.html",[12,0.016,21,0.138,22,0.107,23,0.092,25,0.278,29,0.229,31,0.628,48,0.138,49,0.229,50,0.007,51,0.01,52,0.007,60,0.255,61,0.935,64,0.597,65,3.204,93,1.373,113,0.799,117,1.293,150,0.478,151,0.628,157,0.976,166,1.838,183,0.478,187,3.204,191,3.083,192,1.286,193,1.657,198,1.698,204,3.949,205,2.303,207,0.976,208,2.209,209,2.324,212,5.183,270,3.173,373,2.952,395,1.84,404,3.142,484,3.204,506,2.93,646,4.312,918,2.631,955,2.904,956,3.204,957,4.822,958,6.077,959,3.357,960,7.025,961,5.256,962,5.256,963,6.077,964,3.357,965,3.357,966,3.692,967,3.357,968,3.357,969,5.256,970,3.357,971,4.822,972,3.357,973,2.75,974,2.904]],["title/modules/UserModule.html",[0,1.295,17,2.36]],["body/modules/UserModule.html",[0,2.436,2,2.206,3,2.321,4,2.588,5,2.588,6,2.321,7,3.418,8,3.418,12,0.016,14,3.421,15,4.538,17,4.824,18,3.288,19,2.588,20,2.447,21,0.196,22,0.152,23,0.131,25,0.174,28,3.489,29,0.304,30,1.539,48,0.196,49,0.326,50,0.01,51,0.012,52,0.01,166,1.405,282,3.137,292,4.506,975,4.133,976,4.133,977,4.133,978,4.133,979,4.865,980,4.778,981,4.778,982,4.778,983,4.309,984,4.778,985,4.133]],["title/classes/UserOrderByInput.html",[49,0.263,572,2.735]],["body/classes/UserOrderByInput.html",[12,0.016,21,0.146,22,0.114,23,0.098,25,0.279,29,0.237,31,0.667,48,0.146,49,0.243,50,0.007,51,0.01,52,0.007,60,0.271,61,0.975,62,1.362,64,0.608,93,1.485,113,0.813,150,0.508,151,0.667,157,1.018,166,0.824,183,0.508,192,1.309,193,1.686,204,3.31,205,1.856,207,1.601,270,2.659,381,1.364,395,1.99,405,1.911,484,3.31,529,5.178,542,2.766,564,2.529,565,6.015,566,5.898,567,3.082,568,3.082,569,3.082,570,3.082,571,3.082,572,3.542,574,3.082,575,3.082,576,3.654,918,2.389,956,3.31,966,3.31,986,4.429,987,3.082,988,3.563]],["title/classes/UserProfileEntity.html",[49,0.263,973,2.215]],["body/classes/UserProfileEntity.html",[12,0.016,21,0.149,22,0.116,23,0.1,25,0.278,29,0.149,48,0.149,49,0.248,50,0.007,51,0.01,52,0.007,60,0.277,61,0.99,64,0.596,93,1.442,113,0.797,117,1.496,150,0.518,157,1.033,166,1.824,183,0.518,187,3.347,190,3.154,191,2.338,192,1.283,193,1.653,198,1.797,205,2.208,207,1.033,208,2.338,212,5.137,395,1.931,404,3.325,451,3.411,486,4.135,918,2.853,973,3.619,989,3.147,990,5.457,991,5.457,992,5.457,993,4.52,994,6.297,995,3.638,996,3.638,997,3.638,998,3.638,999,6.297,1000,3.638,1001,3.638]],["title/modules/UserProfileModule.html",[0,1.295,979,2.531]],["body/modules/UserProfileModule.html",[0,2.474,2,2.324,3,2.445,4,2.726,5,2.726,6,2.445,7,3.501,8,3.501,12,0.016,14,3.466,18,3.398,19,2.726,20,2.578,21,0.207,22,0.16,23,0.138,25,0.183,28,3.605,29,0.294,30,1.622,48,0.207,49,0.343,50,0.01,51,0.013,52,0.01,166,1.451,282,3.305,918,2.402,979,5.096,1002,4.354,1003,4.354,1004,5.033,1005,4.354,1006,4.537,1007,5.033,1008,4.452,1009,5.033,1010,4.354]],["title/classes/UserProfileOrderByInput.html",[49,0.263,986,2.735]],["body/classes/UserProfileOrderByInput.html",[12,0.016,21,0.154,22,0.12,23,0.103,25,0.277,29,0.213,31,0.704,48,0.154,49,0.256,50,0.008,51,0.01,52,0.008,60,0.286,61,1.012,62,1.355,64,0.602,93,1.478,113,0.805,117,1.261,150,0.535,151,0.704,157,1.057,166,0.87,183,0.535,190,3.21,192,1.296,193,1.67,207,1.596,381,1.439,395,1.98,405,1.983,529,5.154,564,2.668,565,6.053,566,5.867,918,2.767,986,3.676,990,4.599,991,4.599,992,4.599,993,4.599,1011,5.035,1012,3.759,1013,3.759,1014,3.759,1015,3.759,1016,3.759,1017,3.759,1018,3.759]],["title/classes/UserProfileRelationFilter.html",[49,0.263,1019,2.735]],["body/classes/UserProfileRelationFilter.html",[12,0.016,21,0.203,22,0.158,23,0.135,25,0.267,29,0.278,31,0.926,48,0.203,49,0.337,50,0.01,51,0.012,52,0.01,60,0.376,61,1.213,62,1.274,64,0.539,93,1.39,113,0.722,150,0.704,151,0.926,157,1.266,166,1.435,183,0.704,192,1.162,193,1.496,207,1.383,381,2.722,389,2.402,395,1.862,405,2.375,544,3.509,551,3.509,554,4.277,556,4.277,918,2.804,1011,4.812,1019,4.403,1020,5.865,1021,5.383,1022,4.945]],["title/classes/UserProfileResolver.html",[49,0.263,1008,2.735]],["body/classes/UserProfileResolver.html",[12,0.016,21,0.157,22,0.122,23,0.105,25,0.254,29,0.293,31,0.981,48,0.157,49,0.26,50,0.008,51,0.011,52,0.008,60,0.291,62,0.939,64,0.52,79,2.256,85,1.087,91,1.001,92,3.209,100,2.006,101,2.289,108,2.006,112,3.351,113,0.609,115,1.838,116,1.919,117,1.272,120,2.197,121,2.304,123,3.294,126,3.717,127,2.838,128,1.341,142,2.545,145,3.999,150,0.545,151,0.716,158,2.684,159,2.098,166,1.679,169,2.098,183,0.545,187,3.696,190,2.071,192,0.716,202,4.425,228,2.51,230,2.838,238,3.441,241,2.51,246,2.342,268,3.86,363,4.095,381,2.006,918,2.819,954,3.307,973,3.436,1006,3.696,1008,3.719,1010,3.307,1023,3.307,1024,6.432,1025,5.978,1026,3.823,1027,3.823,1028,5.978,1029,3.823,1030,4.782,1031,3.823,1032,3.823,1033,3.823,1034,3.307,1035,3.823,1036,3.823,1037,3.823]],["title/injectables/UserProfileService.html",[147,1.412,1006,2.215]],["body/injectables/UserProfileService.html",[12,0.016,21,0.177,22,0.138,23,0.118,25,0.232,29,0.234,30,1.392,31,1.35,48,0.177,49,0.294,50,0.009,51,0.011,52,0.009,60,0.328,62,1.019,64,0.494,75,3.269,79,1.996,85,1.809,96,2.099,100,2.178,101,2.435,108,1.654,112,3.121,113,0.662,115,1.996,116,2.084,117,1.211,120,2.834,121,2.501,128,1.516,129,3.269,147,2.084,151,0.809,159,1.73,166,1.821,169,2.278,190,3.081,237,4.438,264,2.34,268,2.34,285,2.34,291,3.737,344,4.415,600,2.646,918,2.989,971,3.737,1006,3.269,1038,3.737,1039,6.36,1040,4.32,1041,4.32,1042,6.759,1043,4.32,1044,4.32,1045,4.32]],["title/classes/UserProfileUpdateInput.html",[49,0.263,1030,2.735]],["body/classes/UserProfileUpdateInput.html",[12,0.016,21,0.222,22,0.172,23,0.148,25,0.239,29,0.29,31,1.012,48,0.222,49,0.368,50,0.011,51,0.013,52,0.011,91,1.416,150,0.77,151,1.012,157,1.337,166,1.632,183,0.77,190,2.929,363,4.055,381,2.701,405,2.701,448,2.377,506,4.016,508,5.671,624,3.837,918,2.701,973,3.107,993,4.196,1030,4.653,1034,4.677,1046,4.677,1047,4.196,1048,5.407]],["title/classes/UserProfileWhereInput.html",[49,0.263,1021,2.735]],["body/classes/UserProfileWhereInput.html",[12,0.016,21,0.137,22,0.106,23,0.091,25,0.281,29,0.249,31,0.625,48,0.137,49,0.227,50,0.007,51,0.01,52,0.007,60,0.254,61,0.931,62,1.377,64,0.621,93,1.502,113,0.83,117,1.182,150,0.475,151,0.625,157,0.972,166,1.761,183,0.475,190,3.009,192,1.337,193,1.722,205,2.333,207,1.477,381,1.278,389,3.596,395,2.013,405,1.824,506,2.918,553,3.381,576,1.709,609,2.368,611,4.664,612,2.59,613,2.886,616,2.59,617,3.98,618,2.886,619,2.886,620,2.886,621,2.59,622,2.59,918,2.806,990,4.312,991,4.312,992,4.312,1011,5.14,1021,5.201,1049,2.886,1050,2.886,1051,2.886]],["title/classes/UserRelationFilter.html",[49,0.263,617,2.531]],["body/classes/UserRelationFilter.html",[12,0.016,21,0.201,22,0.156,23,0.134,25,0.266,29,0.277,31,0.918,48,0.201,49,0.334,50,0.01,51,0.012,52,0.01,60,0.373,61,1.206,62,1.27,64,0.536,93,1.385,113,0.718,150,0.698,151,0.918,157,1.259,166,1.725,183,0.698,192,1.155,193,1.488,207,1.378,389,3.549,395,1.856,405,2.363,544,3.479,551,3.479,553,5.184,576,3.459,617,4.052,1020,5.842,1052,5.372,1053,4.902,1054,4.902,1055,4.902]],["title/classes/UserResolver.html",[49,0.263,983,2.735]],["body/classes/UserResolver.html",[12,0.016,21,0.084,22,0.065,23,0.056,25,0.255,29,0.284,31,0.616,33,1.654,48,0.084,49,0.14,50,0.004,51,0.007,52,0.004,60,0.156,62,1.079,64,0.577,65,1.89,77,2.554,78,2.415,79,2.179,83,2.015,85,1.766,91,1.627,92,2.523,96,0.996,100,1.259,101,1.577,108,1.259,112,2.674,113,0.7,115,1.154,116,2.206,117,1.322,120,1.379,121,1.446,123,2.967,126,3.698,127,1.781,128,2.032,142,1.598,145,3.46,150,0.292,151,0.384,156,1.346,158,2.11,159,1.65,166,1.823,169,2.207,179,2.001,180,1.595,183,0.292,187,2.71,192,1.084,198,0.761,202,4.355,205,0.66,207,1.181,209,2.508,220,2.553,221,4.184,228,1.346,230,3.527,235,3.346,237,3.096,238,2.16,239,4.11,240,3.664,241,1.346,243,1.346,244,1.685,245,1.59,246,1.255,248,1.178,249,1.255,255,1.454,260,1.519,264,1.781,265,1.59,268,1.781,270,2.943,271,1.59,292,3.46,314,1.454,344,2.553,355,5.208,356,2.845,357,2.553,359,2.845,361,1.454,363,3.328,373,0.996,378,3.39,380,3.39,432,2.888,582,1.773,585,1.773,605,2.845,670,1.255,679,2.845,704,1.59,829,1.59,918,1.805,947,3.664,950,2.845,956,3.328,957,2.845,966,1.89,973,1.89,974,1.773,983,2.334,985,1.773,1006,3.328,1056,1.59,1057,4.12,1058,2.049,1059,2.049,1060,2.049,1061,2.049,1062,2.049,1063,2.049,1064,2.049,1065,2.049,1066,2.049,1067,2.049,1068,2.049,1069,2.049,1070,3.289,1071,3.289,1072,2.049,1073,2.049,1074,2.049,1075,2.049,1076,2.049,1077,2.049,1078,1.59,1079,2.553,1080,2.553,1081,2.553,1082,2.049,1083,2.049,1084,1.773,1085,2.049,1086,1.773,1087,2.049,1088,2.049,1089,2.049,1090,2.049,1091,2.049,1092,2.049,1093,2.049,1094,1.773,1095,2.049,1096,2.049,1097,2.049,1098,2.049,1099,2.049,1100,1.59,1101,4.715,1102,2.049,1103,3.289,1104,3.289,1105,2.845,1106,2.049,1107,2.049,1108,2.049,1109,2.049,1110,2.049,1111,1.773,1112,2.049]],["title/injectables/UserService.html",[147,1.412,292,2.215]],["body/injectables/UserService.html",[12,0.016,21,0.152,22,0.118,23,0.101,25,0.231,29,0.274,30,1.193,48,0.152,49,0.252,50,0.007,51,0.01,52,0.007,60,0.282,62,1.054,64,0.643,75,3.647,79,2.418,85,1.96,91,0.97,96,2.856,100,1.963,101,2.639,108,1.418,113,0.684,115,1.798,116,2.154,117,1.251,120,2.89,128,1.798,129,3.647,147,1.878,151,0.693,159,1.483,166,1.823,169,2.355,198,1.594,248,2.128,249,3.887,255,2.628,260,3.418,265,2.874,285,2.006,292,2.946,299,4.729,300,3.366,328,2.49,381,1.963,473,2.269,475,3.14,479,1.897,600,2.269,655,4.061,660,2.874,661,2.628,663,3.366,666,3.204,966,4.254,1084,3.204,1094,3.204,1111,3.204,1113,3.204,1114,5.127,1115,5.88,1116,3.704,1117,5.127,1118,3.704,1119,5.127,1120,3.704,1121,3.704,1122,5.127,1123,3.704,1124,3.704,1125,3.704,1126,3.704,1127,3.704,1128,3.704]],["title/classes/UserUpdateInput.html",[49,0.263,951,2.735]],["body/classes/UserUpdateInput.html",[12,0.016,21,0.201,22,0.156,23,0.134,25,0.258,29,0.277,31,0.918,48,0.201,49,0.334,50,0.01,51,0.012,52,0.01,60,0.373,61,1.206,62,1.106,64,0.426,93,1.206,113,0.57,150,0.698,151,0.918,157,1.259,166,1.751,180,2.19,183,0.698,192,0.918,193,1.182,198,1.562,204,2.817,207,1.259,209,2.381,270,2.263,363,3.881,381,2.586,395,1.616,405,2.586,448,2.155,515,4.789,576,3.161,624,4.379,625,3.479,951,4.379,956,2.817,966,4.35,1047,3.804,1078,3.804,1129,4.902,1130,4.902]],["title/classes/UserWhereInput.html",[49,0.263,1052,2.735]],["body/classes/UserWhereInput.html",[12,0.016,21,0.13,22,0.101,23,0.087,25,0.281,29,0.258,31,0.593,48,0.13,49,0.216,50,0.006,51,0.009,52,0.006,60,0.241,61,0.897,62,1.38,64,0.622,93,1.505,113,0.833,117,0.977,150,0.451,151,0.593,157,0.936,166,1.563,183,0.451,191,2.119,192,1.34,193,1.726,204,3.609,205,2.024,207,1.479,270,2.9,381,1.213,385,3.886,388,3.014,389,3.561,395,2.016,405,1.757,469,1.925,484,3.102,491,3.562,504,1.716,506,2.811,523,4.189,549,3.83,550,3.544,553,4.199,576,3.715,609,2.248,611,4.532,612,2.459,614,2.741,615,2.741,616,2.459,621,2.459,622,3.562,918,2.507,956,3.102,961,3.97,962,3.97,987,2.741,1019,4.457,1049,2.741,1050,2.741,1051,2.741,1052,5.147,1131,3.168,1132,3.168,1133,4.59,1134,3.168]],["title/classes/UserWhereUniqueInput.html",[49,0.263,378,2.531]],["body/classes/UserWhereUniqueInput.html",[12,0.016,21,0.222,22,0.172,23,0.148,25,0.239,29,0.29,31,1.012,48,0.222,49,0.368,50,0.011,51,0.013,52,0.011,91,1.416,150,0.77,151,1.012,157,1.337,166,1.632,183,0.77,204,3.107,205,2.112,207,1.103,209,2.627,270,2.497,378,4.305,381,2.701,405,2.701,448,2.377,576,2.77,623,4.196,624,3.837,625,4.653,956,3.107,1078,4.196,1135,7.056,1136,5.407,1137,5.407]],["title/coverage.html",[1138,4.557]],["body/coverage.html",[6,1.163,12,0.016,23,0.066,33,1.305,34,2.279,39,1.573,44,1.859,49,0.532,50,0.005,51,0.007,52,0.005,53,2.621,54,1.859,56,3.649,64,0.208,71,1.7,72,1.7,83,3.894,92,1.467,95,1.859,97,1.7,99,2.072,111,1.376,121,1.053,123,1.227,126,1.227,147,2.253,155,1.859,156,1.573,180,0.74,182,1.7,184,3.187,185,2.072,186,2.072,205,0.772,209,1.163,213,1.7,214,2.072,227,1.573,242,1.859,243,1.573,246,1.467,286,2.072,292,1.376,299,1.573,313,1.859,314,1.7,316,1.859,317,1.859,318,1.859,319,1.859,320,1.859,321,1.7,370,2.072,374,1.859,375,2.072,378,1.573,379,2.443,385,1.573,386,2.072,387,2.072,407,2.072,444,1.376,445,3.2,449,1.376,461,1.467,466,1.376,467,1.376,471,1.376,481,1.573,482,2.072,503,1.7,504,3.192,505,2.072,509,1.573,514,2.072,519,1.573,527,1.7,529,2.995,535,5.97,539,1.573,549,1.7,550,1.573,551,3.237,562,1.7,564,3.237,572,1.7,576,2.852,578,2.072,596,1.859,609,3.237,611,1.467,617,1.573,623,2.887,628,1.859,633,1.859,655,1.376,657,2.666,658,1.7,661,2.64,662,2.072,675,1.859,682,2.072,687,1.467,740,1.7,741,3.54,756,1.7,761,2.072,784,1.7,785,2.072,790,1.467,795,1.7,796,1.859,801,1.467,834,2.072,840,1.467,891,2.072,909,1.7,918,1.746,924,1.7,925,2.887,942,2.072,947,1.7,948,2.072,949,2.072,951,1.7,955,2.072,973,1.376,983,1.7,986,1.7,989,2.072,1006,1.376,1008,1.7,1011,3.237,1019,1.7,1021,1.7,1023,2.072,1030,1.7,1038,2.072,1046,2.072,1047,2.887,1052,1.7,1056,2.887,1079,1.859,1080,1.859,1081,1.859,1100,1.859,1113,2.072,1138,2.072,1139,1.859,1140,2.395,1141,2.395,1142,8.037,1143,6.673,1144,7.84,1145,2.072,1146,4.561,1147,3.72,1148,5.32,1149,7.709,1150,5.893,1151,4.561,1152,5.878,1153,2.072,1154,2.395,1155,2.395,1156,2.072,1157,2.395,1158,2.072,1159,3.72,1160,4.816,1161,2.072,1162,2.072,1163,2.072,1164,2.072,1165,3.218,1166,2.887,1167,2.395,1168,2.395,1169,2.395,1170,2.395,1171,2.395,1172,3.72,1173,3.72,1174,2.395,1175,4.561,1176,2.395,1177,2.395,1178,2.072,1179,2.072,1180,2.395,1181,2.395,1182,3.72,1183,2.395,1184,2.395,1185,2.395,1186,2.395,1187,2.395,1188,2.395]],["title/dependencies.html",[3,2.253,1189,3.214]],["body/dependencies.html",[3,2.62,12,0.016,30,1.738,38,4.186,45,3.304,49,0.446,50,0.011,51,0.013,52,0.011,150,0.768,151,1.01,153,5.002,312,3.828,747,4.666,904,3.542,905,3.542,944,4.666,1190,7.048,1191,5.394,1192,5.394,1193,5.394,1194,5.394,1195,5.394,1196,5.394,1197,5.394,1198,5.394,1199,5.394,1200,5.394,1201,5.394,1202,5.394,1203,5.394,1204,5.394,1205,5.394,1206,5.394,1207,5.394,1208,5.394,1209,4.666,1210,5.394,1211,5.394,1212,5.394,1213,5.394,1214,5.394]],["title/miscellaneous/enumerations.html",[1215,1.968,1216,4.011]],["body/miscellaneous/enumerations.html",[12,0.016,23,0.144,50,0.011,51,0.013,52,0.011,57,4.089,60,0.4,64,0.632,67,3.952,165,3.227,166,1.219,184,2.433,194,3.227,196,3.459,249,3.952,260,2.433,299,3.459,328,3.735,445,3.028,446,3.227,447,2.853,453,3.227,455,4.237,463,3.459,657,2.209,796,4.089,810,5.582,816,3.739,817,4.557,818,4.557,819,5.582,820,5.582,821,5.582,822,5.582,823,5.582,824,5.582,825,5.582,966,3.028,1215,3.227,1216,4.557,1217,5.268,1218,6.453,1219,4.557,1220,5.268,1221,5.268,1222,5.268]],["title/miscellaneous/functions.html",[1215,1.968,1223,3.599]],["body/miscellaneous/functions.html",[6,3.374,12,0.015,23,0.163,25,0.253,27,2.842,31,0.869,33,2.309,41,2.143,42,2.04,50,0.009,51,0.012,52,0.009,56,3.293,58,3.601,59,2.842,60,0.353,62,1.287,66,1.776,75,2.667,76,3.047,77,2.513,78,2.377,84,4.014,115,2.309,116,2.632,117,1.529,128,2.309,142,2.895,299,4.322,414,5.155,451,3.227,465,2.667,490,6.008,630,4.672,633,4.625,634,3.601,657,1.946,740,3.293,741,3.601,742,5.155,748,4.014,749,4.625,750,4.014,756,4.672,787,3.65,909,4.672,966,4.297,1100,5.109,1145,5.155,1165,4.014,1166,3.601,1178,4.014,1179,4.014,1215,2.842,1223,3.601,1224,4.014,1225,4.014,1226,5.959,1227,5.959,1228,4.64,1229,4.64,1230,4.64,1231,5.959,1232,5.959,1233,4.64,1234,4.64,1235,4.64,1236,4.64]],["title/index.html",[60,0.244,1237,2.78,1238,2.78]],["body/index.html",[12,0.013,22,0.177,25,0.202,27,4.075,50,0.011,51,0.013,52,0.011,119,4.792,142,3.731,589,5.755,811,4.299,969,6.168,1139,4.299,1223,4.299,1239,5.54,1240,5.54,1241,5.755,1242,5.54,1243,6.653,1244,5.54,1245,5.54,1246,5.54,1247,5.54,1248,5.54,1249,5.54,1250,5.54,1251,5.54,1252,5.54,1253,5.54,1254,5.54,1255,5.54,1256,5.54,1257,5.54,1258,5.54,1259,5.54,1260,5.54,1261,4.792,1262,4.299,1263,4.792,1264,4.299,1265,4.792,1266,5.54]],["title/license.html",[1237,2.78,1238,2.78,1262,2.494]],["body/license.html",[12,0.012,20,2.372,22,0.19,50,0.009,51,0.012,52,0.009,94,4.619,117,0.985,153,3.286,268,2.508,550,3.908,670,2.836,704,3.594,1105,4.005,1139,3.594,1241,5.688,1261,4.005,1262,3.594,1263,4.005,1264,3.594,1265,4.005,1267,7.348,1268,4.631,1269,4.631,1270,4.631,1271,4.631,1272,4.631,1273,4.631,1274,4.631,1275,6.576,1276,5.951,1277,4.631,1278,4.631,1279,4.631,1280,6.576,1281,6.576,1282,6.576,1283,4.631,1284,5.951,1285,4.631,1286,5.951,1287,5.951,1288,5.951,1289,4.631,1290,4.631,1291,4.631,1292,4.631,1293,4.631,1294,5.951,1295,4.631,1296,6.576,1297,4.631,1298,4.631,1299,4.631,1300,4.631,1301,4.631,1302,4.631,1303,4.631,1304,4.631,1305,5.951,1306,5.951,1307,6.576,1308,5.951,1309,4.631,1310,4.631,1311,4.631,1312,4.631,1313,4.631,1314,4.631,1315,4.631,1316,4.631,1317,4.631,1318,4.631,1319,4.631,1320,4.631,1321,4.631,1322,4.631,1323,4.631,1324,4.631,1325,4.631,1326,4.631,1327,4.631,1328,4.631,1329,4.631,1330,4.631,1331,4.631,1332,4.631,1333,4.631,1334,5.951,1335,4.631,1336,4.631,1337,4.631,1338,4.631,1339,4.631,1340,4.631,1341,4.631,1342,4.631,1343,4.631,1344,4.631,1345,4.631,1346,4.631]],["title/modules.html",[2,2.433]],["body/modules.html",[1,4.02,2,2.616,11,3.72,12,0.014,13,3.72,14,2.616,15,3.47,16,3.47,17,3.47,50,0.011,51,0.014,52,0.011,979,3.72,1347,7.802,1348,7.802,1349,7.802,1350,7.864,1351,5.665,1352,5.665]],["title/overview.html",[1353,4.557]],["body/overview.html",[0,1.358,1,5.493,2,1.866,3,1.963,4,2.189,5,2.189,6,1.963,7,2.07,8,2.07,9,3.496,10,3.496,11,4.943,12,0.016,13,4.511,14,3.394,15,4.651,16,4.715,17,4.715,18,2.947,19,2.189,20,2.07,50,0.008,51,0.011,52,0.008,55,2.868,97,2.868,111,4.155,183,0.576,262,3.137,276,3.496,278,3.496,279,3.496,285,2.189,292,4.155,651,3.496,652,3.496,653,3.496,655,4.155,687,4.429,801,4.429,840,4.429,884,3.496,885,3.496,886,3.496,975,3.496,976,3.496,977,3.496,978,3.496,979,4.827,1002,3.496,1003,3.496,1005,3.496,1006,4.155,1156,3.496,1264,3.137,1353,3.496,1354,4.042,1355,4.042]],["title/miscellaneous/variables.html",[1215,1.968,1356,4.011]],["body/miscellaneous/variables.html",[0,1.213,12,0.016,14,1.064,25,0.084,28,1.324,31,1.024,33,2.201,44,2.802,45,1.412,46,1.789,47,1.789,49,0.246,50,0.005,51,0.007,52,0.005,56,1.636,57,3.909,58,1.789,59,1.412,60,0.175,63,2.562,64,0.662,66,2.527,71,2.562,72,2.562,76,2.922,77,1.955,85,1.724,89,2.211,91,0.604,92,2.211,93,0.87,94,1.789,95,2.802,96,1.12,101,1.382,108,1.382,112,2.325,115,0.808,117,0.49,118,2.802,121,2.214,123,1.18,126,2.801,127,1.248,142,1.754,146,1.994,155,3.909,156,2.37,157,0.47,158,1.18,159,0.923,160,1.994,161,1.994,162,1.994,166,1.452,169,1.446,174,1.994,179,1.12,180,1.115,184,1.064,194,3.085,196,2.37,198,1.713,204,1.324,205,1.953,242,3.454,243,2.922,260,1.064,262,2.802,270,1.667,281,1.789,300,1.513,305,3.123,306,3.123,311,3.454,313,3.454,314,3.158,316,2.802,317,2.802,318,2.802,319,2.802,320,2.802,322,1.412,328,3.73,332,2.802,360,3.849,361,2.562,373,2.945,380,1.513,432,2.211,444,2.075,445,1.324,447,2.41,448,1.013,449,1.324,451,1.248,458,1.513,461,2.726,466,2.075,467,2.075,469,1.866,470,1.513,471,2.557,472,1.513,473,1.412,474,1.513,475,2.726,476,1.513,477,1.513,478,1.513,479,3.976,480,1.513,592,1.994,596,3.454,628,1.789,629,1.994,630,2.562,631,3.123,632,3.123,634,1.789,635,1.994,636,1.994,637,1.994,638,1.994,639,3.123,640,1.994,641,1.994,642,3.123,643,3.123,644,1.994,645,1.994,646,2.562,647,1.994,648,1.994,649,1.994,650,1.994,670,1.412,675,3.454,749,1.789,756,1.636,816,1.636,956,1.324,1056,1.789,1079,3.909,1080,3.909,1081,3.909,1086,1.994,1148,1.994,1152,1.994,1153,1.994,1158,1.994,1160,1.994,1161,4.356,1162,3.849,1163,3.849,1164,3.123,1166,1.789,1209,4.356,1215,1.412,1219,1.994,1224,3.123,1225,1.994,1356,1.994,1357,5.468,1358,7.27,1359,2.305,1360,2.305,1361,2.305,1362,2.305,1363,6.452,1364,2.305,1365,5.468,1366,2.305,1367,2.305,1368,2.305,1369,2.305,1370,2.305,1371,2.305,1372,2.305,1373,2.305,1374,2.305,1375,2.305,1376,2.305,1377,2.305,1378,4.45,1379,2.305,1380,2.305,1381,2.305,1382,2.305,1383,2.305,1384,2.305,1385,2.305,1386,4.45,1387,2.305,1388,2.305,1389,2.305,1390,2.305,1391,2.305,1392,3.61,1393,2.305,1394,2.305,1395,2.305]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":535,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"coverage.html":{}}}],["0.1.13",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1170,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1181,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":262,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1***$2@$3",{"_index":1092,"title":{},"body":{"classes/UserResolver.html":{}}}],["1****$2",{"_index":1089,"title":{},"body":{"classes/UserResolver.html":{}}}],["1.10.4",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":537,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["15.5.0",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["2.0",{"_index":867,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["2.17.0",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["2.21.0",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":1269,"title":{},"body":{"license.html":{}}}],["3",{"_index":1264,"title":{},"body":{"index.html":{},"license.html":{},"overview.html":{}}}],["3.1.20",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":708,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["3000",{"_index":759,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["37",{"_index":1355,"title":{},"body":{"overview.html":{}}}],["4.0.65",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["6.6.3",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["60).tostring",{"_index":726,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["66",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1156,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["7.6.12",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["7.9.9",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["7200",{"_index":853,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["8",{"_index":1354,"title":{},"body":{"overview.html":{}}}],["8.2.0",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":857,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["_.forrootasync",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_data",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":1286,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":837,"title":{},"body":{"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{}}}],["action",{"_index":870,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["activate",{"_index":125,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["activel",{"_index":132,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["add(setting.expiredin.value",{"_index":346,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["add(setting.refreshexpiredin.value",{"_index":349,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["address",{"_index":963,"title":{},"body":{"classes/UserEntity.html":{}}}],["advised",{"_index":1343,"title":{},"body":{"license.html":{}}}],["allow",{"_index":816,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["allows",{"_index":1249,"title":{},"body":{"index.html":{}}}],["allowuploadfiletype",{"_index":810,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["alphabet",{"_index":1161,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["alphabet(a",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":1291,"title":{},"body":{"license.html":{}}}],["ap",{"_index":896,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["api",{"_index":199,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["apollo",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app_guard",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":1244,"title":{},"body":{"index.html":{}}}],["applydecorators",{"_index":68,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":230,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/MomentResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{}}}],["argstype",{"_index":383,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/UpdateViewerArgs.html":{}}}],["arising",{"_index":1340,"title":{},"body":{"license.html":{}}}],["array.isarray(token",{"_index":440,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["async",{"_index":101,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["audio",{"_index":446,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["auth",{"_index":57,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["auth_metadata_has_authorization",{"_index":71,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_metadata_has_authorization_type",{"_index":72,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_default_expired_in",{"_index":316,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_default_expired_unit",{"_index":317,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_default_refresh_expired_in",{"_index":318,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_default_refresh_expired_unit",{"_index":319,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_vvalidity_period_key",{"_index":320,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authdecoratoroptions",{"_index":54,"title":{"interfaces/AuthDecoratorOptions.html":{}},"body":{"interfaces/AuthDecoratorOptions.html":{},"coverage.html":{}}}],["authoprization",{"_index":303,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["authorization",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["authorization(options",{"_index":84,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"miscellaneous/functions.html":{}}}],["authorization(undefined",{"_index":804,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["authorization.guard",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{}}}],["authorization_token_create_user_where_allow_one",{"_index":242,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization_token_not_found",{"_index":313,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorizationguard",{"_index":39,"title":{"guards/AuthorizationGuard.html":{}},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"coverage.html":{}}}],["authorizationtoken",{"_index":165,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"miscellaneous/enumerations.html":{}}}],["authorizationtoken(@context",{"_index":258,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["authorizationtoken(context",{"_index":219,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["authorizationtoken.expiredat.gettime",{"_index":364,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["authorizationtoken.token",{"_index":367,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["authorizationtoken?.user",{"_index":430,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["authorizationtokenentity",{"_index":182,"title":{"classes/AuthorizationTokenEntity.html":{}},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"coverage.html":{}}}],["authorizationtokenentity'})@authorization({hasauthorization",{"_index":222,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["authorizationtokenentityresolver",{"_index":213,"title":{"classes/AuthorizationTokenEntityResolver.html":{}},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"coverage.html":{}}}],["authorizationtokenmodule",{"_index":11,"title":{"modules/AuthorizationTokenModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules.html":{},"overview.html":{}}}],["authorizationtokenservice",{"_index":111,"title":{"injectables/AuthorizationTokenService.html":{}},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"overview.html":{}}}],["authorizationtokenvalidityperiod",{"_index":321,"title":{"interfaces/AuthorizationTokenValidityPeriod.html":{}},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"coverage.html":{}}}],["authorizationwith",{"_index":92,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorizationwithout",{"_index":95,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authotization",{"_index":294,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["authotizationtoken",{"_index":336,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["autoschemafile",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":1352,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":990,"title":{},"body":{"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileWhereInput.html":{}}}],["await",{"_index":169,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["base",{"_index":903,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["baseoptions",{"_index":893,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["bcrypt",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["binary",{"_index":1276,"title":{},"body":{"license.html":{}}}],["bio",{"_index":991,"title":{},"body":{"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileWhereInput.html":{}}}],["boolean",{"_index":65,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bound",{"_index":960,"title":{},"body":{"classes/UserEntity.html":{}}}],["browse",{"_index":1350,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1347,"title":{},"body":{"modules.html":{}}}],["bsd",{"_index":1263,"title":{},"body":{"index.html":{},"license.html":{}}}],["bucket",{"_index":788,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"injectables/TencentCloudCosService.html":{}}}],["bucket.split",{"_index":859,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["builds",{"_index":1242,"title":{},"body":{"index.html":{}}}],["business",{"_index":1330,"title":{},"body":{"license.html":{}}}],["by.input",{"_index":542,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{}}}],["by.input.ts",{"_index":564,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{},"coverage.html":{}}}],["by.input.ts:10",{"_index":1017,"title":{},"body":{"classes/UserProfileOrderByInput.html":{}}}],["by.input.ts:11",{"_index":570,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{}}}],["by.input.ts:16",{"_index":1015,"title":{},"body":{"classes/UserProfileOrderByInput.html":{}}}],["by.input.ts:17",{"_index":575,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{}}}],["by.input.ts:22",{"_index":1012,"title":{},"body":{"classes/UserProfileOrderByInput.html":{}}}],["by.input.ts:23",{"_index":567,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{}}}],["by.input.ts:28",{"_index":1013,"title":{},"body":{"classes/UserProfileOrderByInput.html":{}}}],["by.input.ts:29",{"_index":571,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{}}}],["by.input.ts:34",{"_index":1014,"title":{},"body":{"classes/UserProfileOrderByInput.html":{}}}],["by.input.ts:35",{"_index":568,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{}}}],["by.input.ts:40",{"_index":1016,"title":{},"body":{"classes/UserProfileOrderByInput.html":{}}}],["by.input.ts:41",{"_index":569,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{}}}],["by.input.ts:47",{"_index":574,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{}}}],["by.input.ts:53",{"_index":573,"title":{},"body":{"classes/MomentOrderByInput.html":{}}}],["byte",{"_index":1270,"title":{},"body":{"license.html":{}}}],["c",{"_index":1268,"title":{},"body":{"license.html":{}}}],["callback",{"_index":643,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["canactivate",{"_index":102,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["canactivate(context",{"_index":122,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["canactivelytokenhandler",{"_index":103,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["canactivelytokenhandler(context",{"_index":130,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["case",{"_index":475,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["caused",{"_index":1332,"title":{},"body":{"license.html":{}}}],["check",{"_index":1104,"title":{},"body":{"classes/UserResolver.html":{}}}],["china",{"_index":696,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["class",{"_index":49,"title":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"classes/SecuritySmsResolver.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":183,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"classes/SecuritySmsResolver.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"overview.html":{}}}],["classprovider",{"_index":629,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["clause",{"_index":1265,"title":{},"body":{"index.html":{},"license.html":{}}}],["client",{"_index":121,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.sendsms(request",{"_index":923,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["cloud",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/SecurityModule.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"miscellaneous/functions.html":{}}}],["cloud.module.ts",{"_index":888,"title":{},"body":{"modules/TencentCloudModule.html":{}}}],["cloud/common/index.ts",{"_index":1179,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cloud/cos/cos.resolver.ts",{"_index":796,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["cloud/cos/cos.resolver.ts:43",{"_index":802,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cloud/cos/cos.resolver.ts:55",{"_index":805,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cloud/cos/cos.resolver.ts:72",{"_index":808,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cloud/cos/cos.resolver.ts:90",{"_index":813,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cloud/cos/entities/cos.entity.ts",{"_index":785,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"coverage.html":{}}}],["cloud/cos/entities/cos.entity.ts:17",{"_index":792,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{}}}],["cloud/cos/entities/cos.entity.ts:25",{"_index":793,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{}}}],["cloud/cos/entities/cos.entity.ts:33",{"_index":794,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{}}}],["cloud/cos/soc.service.ts",{"_index":834,"title":{},"body":{"injectables/TencentCloudCosService.html":{},"coverage.html":{}}}],["cloud/cos/soc.service.ts:19",{"_index":846,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/cos/soc.service.ts:29",{"_index":848,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/cos/soc.service.ts:36",{"_index":842,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/cos/soc.service.ts:64",{"_index":845,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/cos/soc.service.ts:9",{"_index":841,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/sms",{"_index":705,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["cloud/sms/sms.service.ts",{"_index":891,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"coverage.html":{}}}],["cloud/sms/sms.service.ts:14",{"_index":902,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["cloud/sms/sms.service.ts:29",{"_index":895,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["cloud/sms/sms.service.ts:45",{"_index":899,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["cloud/sts/entities/sts.entity.ts",{"_index":925,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"coverage.html":{}}}],["cloud/sts/entities/sts.entity.ts:18",{"_index":931,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{}}}],["cloud/sts/entities/sts.entity.ts:26",{"_index":929,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{}}}],["cloud/sts/entities/sts.entity.ts:34",{"_index":930,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{}}}],["cloud/sts/entities/sts.entity.ts:52",{"_index":939,"title":{},"body":{"classes/TencentCloudStsFederationToken.html":{}}}],["cloud/sts/entities/sts.entity.ts:61",{"_index":941,"title":{},"body":{"classes/TencentCloudStsFederationToken.html":{}}}],["cloud/sts/entities/sts.entity.ts:70",{"_index":940,"title":{},"body":{"classes/TencentCloudStsFederationToken.html":{}}}],["cloud/sts/sts.service.ts",{"_index":942,"title":{},"body":{"injectables/TencentCloudStsService.html":{},"coverage.html":{}}}],["cloud/sts/sts.service.ts:14",{"_index":943,"title":{},"body":{"injectables/TencentCloudStsService.html":{}}}],["cloud/tencent",{"_index":887,"title":{},"body":{"modules/TencentCloudModule.html":{}}}],["clous",{"_index":934,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authorizationtokenmodule",{"_index":276,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"overview.html":{}}}],["cluster_authorizationtokenmodule_exports",{"_index":279,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"overview.html":{}}}],["cluster_authorizationtokenmodule_imports",{"_index":277,"title":{},"body":{"modules/AuthorizationTokenModule.html":{}}}],["cluster_authorizationtokenmodule_providers",{"_index":278,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"overview.html":{}}}],["cluster_momentmodule",{"_index":559,"title":{},"body":{"modules/MomentModule.html":{}}}],["cluster_momentmodule_imports",{"_index":560,"title":{},"body":{"modules/MomentModule.html":{}}}],["cluster_securitymodule",{"_index":651,"title":{},"body":{"modules/SecurityModule.html":{},"overview.html":{}}}],["cluster_securitymodule_exports",{"_index":653,"title":{},"body":{"modules/SecurityModule.html":{},"overview.html":{}}}],["cluster_securitymodule_imports",{"_index":654,"title":{},"body":{"modules/SecurityModule.html":{}}}],["cluster_securitymodule_providers",{"_index":652,"title":{},"body":{"modules/SecurityModule.html":{},"overview.html":{}}}],["cluster_tencentcloudmodule",{"_index":884,"title":{},"body":{"modules/TencentCloudModule.html":{},"overview.html":{}}}],["cluster_tencentcloudmodule_exports",{"_index":885,"title":{},"body":{"modules/TencentCloudModule.html":{},"overview.html":{}}}],["cluster_tencentcloudmodule_providers",{"_index":886,"title":{},"body":{"modules/TencentCloudModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":975,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":977,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":976,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":978,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule",{"_index":1002,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_exports",{"_index":1003,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_imports",{"_index":1004,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["cluster_userprofilemodule_providers",{"_index":1005,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["code",{"_index":670,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserResolver.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["code'})@authorization({hasauthorization",{"_index":673,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["codes",{"_index":1086,"title":{},"body":{"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["common",{"_index":465,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"miscellaneous/functions.html":{}}}],["compare",{"_index":299,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["compare(password",{"_index":1230,"title":{},"body":{"miscellaneous/functions.html":{}}}],["comparecode",{"_index":683,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["comparecode(phone",{"_index":689,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["compared",{"_index":355,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/UserResolver.html":{}}}],["comparepassword",{"_index":1114,"title":{},"body":{"injectables/UserService.html":{}}}],["comparepassword(user",{"_index":1117,"title":{},"body":{"injectables/UserService.html":{}}}],["comparesecurity",{"_index":1115,"title":{},"body":{"injectables/UserService.html":{}}}],["comparesecurity(user",{"_index":1120,"title":{},"body":{"injectables/UserService.html":{}}}],["compase",{"_index":691,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["complexity",{"_index":1254,"title":{},"body":{"index.html":{}}}],["compore",{"_index":1119,"title":{},"body":{"injectables/UserService.html":{}}}],["conditions",{"_index":1282,"title":{},"body":{"license.html":{}}}],["config",{"_index":742,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{}}}],["connect",{"_index":644,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["consequential",{"_index":1322,"title":{},"body":{"license.html":{}}}],["const",{"_index":91,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserWhereUniqueInput.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":156,"title":{},"body":{"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":108,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentResolver.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor(authorizationtokenservice",{"_index":217,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["constructor(cosservice",{"_index":800,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["constructor(prisma",{"_index":291,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/UserProfileService.html":{}}}],["constructor(prismaclient",{"_index":582,"title":{},"body":{"classes/MomentResolver.html":{},"classes/UserResolver.html":{}}}],["constructor(private",{"_index":600,"title":{},"body":{"classes/MomentResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{}}}],["constructor(profileservice",{"_index":1026,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["constructor(reflector",{"_index":109,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["constructor(request",{"_index":412,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["constructor(securitysmsservice",{"_index":666,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/UserService.html":{}}}],["constructor(sts",{"_index":839,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["constructor(tencentcloudsmsservice",{"_index":686,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["contains",{"_index":762,"title":{},"body":{"classes/StringFilter.html":{}}}],["content",{"_index":483,"title":{},"body":{"classes/MomentEntity.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentWhereInput.html":{}}}],["context",{"_index":126,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.authorizationtoken",{"_index":259,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["context.gethandler",{"_index":164,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["context.gettype",{"_index":160,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["context.request.context",{"_index":431,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.switchtohttp().getrequest",{"_index":172,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["context.switchtohttp().getrequest().context",{"_index":162,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["context.ts",{"_index":407,"title":{},"body":{"classes/ExecutionContext.html":{},"coverage.html":{}}}],["context.ts:15",{"_index":416,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:16",{"_index":415,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:17",{"_index":417,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:24",{"_index":419,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:54",{"_index":424,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:7",{"_index":413,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:73",{"_index":422,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.user",{"_index":679,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"classes/UserResolver.html":{}}}],["continue",{"_index":1103,"title":{},"body":{"classes/UserResolver.html":{}}}],["contract",{"_index":1335,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":1296,"title":{},"body":{"license.html":{}}}],["convert",{"_index":1099,"title":{},"body":{"classes/UserResolver.html":{}}}],["copyright",{"_index":1267,"title":{},"body":{"license.html":{}}}],["core",{"_index":119,"title":{},"body":{"guards/AuthorizationGuard.html":{},"index.html":{}}}],["cos",{"_index":786,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{}}}],["cos/cos.resolver",{"_index":889,"title":{},"body":{"modules/TencentCloudModule.html":{}}}],["cosservice",{"_index":803,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cover",{"_index":450,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{}}}],["coverage",{"_index":1138,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":298,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["create",{"_index":115,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["create(prismaclient",{"_index":418,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["createauthorizationtoken",{"_index":215,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["createauthorizationtoken(args",{"_index":226,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["createauthorizationtokenargs",{"_index":227,"title":{"classes/CreateAuthorizationTokenArgs.html":{}},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/UpdateViewerArgs.html":{},"coverage.html":{}}}],["createclient",{"_index":892,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["createclient(region",{"_index":894,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["createcostemporaryreadcredential",{"_index":798,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["createcostemporarywritecredential",{"_index":799,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["createcostemporarywritecredential(type",{"_index":809,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["created",{"_index":491,"title":{},"body":{"classes/MomentEntity.html":{},"classes/MomentWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["createdat",{"_index":484,"title":{},"body":{"classes/MomentEntity.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentWhereInput.html":{},"injectables/SecuritySmsService.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserWhereInput.html":{}}}],["createparamdecorator(function",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createsecurity",{"_index":664,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["createsecurity(phone",{"_index":669,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["createtemporaryreadcredential",{"_index":835,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["createtemporarywritecredential",{"_index":836,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["createtemporarywritecredential(name",{"_index":844,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["createtokenwithsecurity",{"_index":287,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["createtokenwithsecurity(user",{"_index":295,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["createuniontype",{"_index":458,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["createuserauthorizationtoken",{"_index":288,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["createuserauthorizationtoken(user",{"_index":301,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["createviewersecurity",{"_index":665,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["createviewersecurity(@context",{"_index":678,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["createviewersecurity(context",{"_index":672,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["creathe",{"_index":297,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["credential",{"_index":787,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"miscellaneous/functions.html":{}}}],["credential'})@authorizationwith",{"_index":812,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["credentials",{"_index":797,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["cursor",{"_index":516,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["custom",{"_index":1162,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["customalphabet('0123456789",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customalphabet('23456789qwertyupasdfghjklzxcvbnm",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customalphabet('qwertyuiopasdfghjklzxcvbnm",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customalphabet(alphabet",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damage",{"_index":1346,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1323,"title":{},"body":{"license.html":{}}}],["data",{"_index":268,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"license.html":{}}}],["data[key",{"_index":1101,"title":{},"body":{"classes/UserResolver.html":{}}}],["database",{"_index":311,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["datasources",{"_index":638,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":191,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/DateTimeFilter.html":{},"classes/MomentEntity.html":{},"classes/MomentWhereInput.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserProfileEntity.html":{},"classes/UserWhereInput.html":{}}}],["date.now",{"_index":736,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["datetimefilter",{"_index":385,"title":{"classes/DateTimeFilter.html":{}},"body":{"classes/DateTimeFilter.html":{},"classes/MomentWhereInput.html":{},"classes/UserWhereInput.html":{},"coverage.html":{}}}],["dayjs",{"_index":312,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"injectables/SecuritySmsService.html":{},"dependencies.html":{}}}],["dayjs().add(10",{"_index":353,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["dayjs().add(options.expiredin",{"_index":716,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["days",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["decorator",{"_index":58,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":192,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/SecuritySmsResolver.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{}}}],["default",{"_index":479,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":534,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["defined",{"_index":113,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{}}}],["deleted",{"_index":493,"title":{},"body":{"classes/MomentEntity.html":{}}}],["deletedat",{"_index":485,"title":{},"body":{"classes/MomentEntity.html":{},"classes/MomentOrderByInput.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derived",{"_index":1300,"title":{},"body":{"license.html":{}}}],["desc",{"_index":733,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["description",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["destory",{"_index":648,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["determine",{"_index":528,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["developers",{"_index":1250,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1255,"title":{},"body":{"index.html":{}}}],["direct",{"_index":1317,"title":{},"body":{"license.html":{}}}],["disclaimed",{"_index":1313,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1288,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":649,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["distinct",{"_index":517,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["distribution",{"_index":1293,"title":{},"body":{"license.html":{}}}],["document",{"_index":1260,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1139,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["don't",{"_index":174,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["dontenvconfig",{"_index":746,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["dot",{"_index":755,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["dotenv",{"_index":747,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"dependencies.html":{}}}],["dto",{"_index":1077,"title":{},"body":{"classes/UserResolver.html":{}}}],["dto/create",{"_index":251,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["dto/moment",{"_index":597,"title":{},"body":{"classes/MomentResolver.html":{}}}],["dto/profile",{"_index":1033,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["dto/update",{"_index":1082,"title":{},"body":{"classes/UserResolver.html":{}}}],["duration",{"_index":849,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["durationseconds",{"_index":862,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["e",{"_index":961,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserWhereInput.html":{}}}],["ecosystem",{"_index":1256,"title":{},"body":{"index.html":{}}}],["effect",{"_index":869,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["email",{"_index":956,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"miscellaneous/variables.html":{}}}],["email(@parent",{"_index":1090,"title":{},"body":{"classes/UserResolver.html":{}}}],["email(user",{"_index":1059,"title":{},"body":{"classes/UserResolver.html":{}}}],["email.replace(/^(\\w{1}).*?(\\w{1",{"_index":1091,"title":{},"body":{"classes/UserResolver.html":{}}}],["encrpyted",{"_index":1232,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encrypted",{"_index":1231,"title":{},"body":{"miscellaneous/functions.html":{}}}],["end",{"_index":767,"title":{},"body":{"classes/StringFilter.html":{}}}],["endorse",{"_index":1297,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":78,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"interfaces/SocfonyConfig.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{}}}],["endpoit",{"_index":80,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntity.html":{}}}],["endswith",{"_index":763,"title":{},"body":{"classes/StringFilter.html":{}}}],["entities/authorization",{"_index":253,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["entities/cos.entity",{"_index":814,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["entities/moment.entity",{"_index":599,"title":{},"body":{"classes/MomentResolver.html":{},"classes/MomentWhereUniqueInput.html":{}}}],["entities/profile.entity",{"_index":1034,"title":{},"body":{"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{}}}],["entities/user.entity",{"_index":1078,"title":{},"body":{"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["entity",{"_index":187,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentEntity.html":{},"classes/UserEntity.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{}}}],["entity.'})@authorization({hasauthorization",{"_index":232,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["enum",{"_index":462,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/TencentCloudCosResolver.html":{}}}],["enumerations",{"_index":1216,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":255,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["env",{"_index":749,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["equals",{"_index":390,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/StringFilter.html":{}}}],["error",{"_index":361,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/SocfonyConfig.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["error(authorization_token_create_user_where_allow_one",{"_index":263,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["error(authorization_token_not_found",{"_index":362,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["error(constants[`user_${key.touppercase()}_field_existed",{"_index":1108,"title":{},"body":{"classes/UserResolver.html":{}}}],["error(media_type_dont_supported",{"_index":480,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["error(moment_not_found",{"_index":602,"title":{},"body":{"classes/MomentResolver.html":{}}}],["error(security_compare_failed",{"_index":359,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/UserResolver.html":{}}}],["error(unauthorized",{"_index":181,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["error(user_not_found",{"_index":271,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentResolver.html":{},"classes/UserResolver.html":{}}}],["error(user_not_set_phone",{"_index":680,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["even",{"_index":1342,"title":{},"body":{"license.html":{}}}],["event",{"_index":1314,"title":{},"body":{"license.html":{}}}],["exection",{"_index":1071,"title":{},"body":{"classes/UserResolver.html":{}}}],["execution",{"_index":127,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["executioncontext",{"_index":123,"title":{"classes/ExecutionContext.html":{}},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["executioncontext.create(prisma",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exemplary",{"_index":1321,"title":{},"body":{"license.html":{}}}],["existed",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiration",{"_index":938,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["expired",{"_index":194,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["expiredat",{"_index":188,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{}}}],["expiredat.gettime",{"_index":339,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["expiredin",{"_index":329,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"injectables/SecuritySmsService.html":{}}}],["expiredin.unit",{"_index":333,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["expiredin.value",{"_index":331,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["expiredtime",{"_index":936,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["export",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["express",{"_index":153,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/ExecutionContext.html":{},"dependencies.html":{},"license.html":{}}}],["extendcode",{"_index":914,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["extends",{"_index":448,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":96,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentFindFirstArgs.html":{},"injectables/SecuritySmsService.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["federation",{"_index":806,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["fetch",{"_index":530,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["field",{"_index":207,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["field((type",{"_index":212,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/UserEntity.html":{},"classes/UserProfileEntity.html":{}}}],["field(undefined",{"_index":193,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{}}}],["file",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["filename",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":389,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentResolver.html":{},"classes/MomentWhereInput.html":{},"classes/StringFilter.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserWhereInput.html":{}}}],["find",{"_index":379,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentResolver.html":{},"coverage.html":{}}}],["first",{"_index":532,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentResolver.html":{}}}],["first.args",{"_index":598,"title":{},"body":{"classes/MomentResolver.html":{}}}],["first.args.ts",{"_index":505,"title":{},"body":{"classes/MomentFindFirstArgs.html":{},"coverage.html":{}}}],["first.args.ts:9",{"_index":507,"title":{},"body":{"classes/MomentFindFirstArgs.html":{}}}],["fitness",{"_index":1310,"title":{},"body":{"license.html":{}}}],["fiveminutesdate",{"_index":368,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["fiveminutesdate.gettime",{"_index":365,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["flutter",{"_index":1259,"title":{},"body":{"index.html":{}}}],["following",{"_index":1281,"title":{},"body":{"license.html":{}}}],["form",{"_index":1289,"title":{},"body":{"license.html":{}}}],["forms",{"_index":1277,"title":{},"body":{"license.html":{}}}],["found",{"_index":360,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"miscellaneous/variables.html":{}}}],["friendly",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full",{"_index":969,"title":{},"body":{"classes/UserEntity.html":{},"index.html":{}}}],["function",{"_index":83,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"interfaces/SocfonyConfig.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["functions",{"_index":1223,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["gem",{"_index":1271,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getauthorizationtoken",{"_index":410,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["getauthorizationtoken(prismaclient",{"_index":421,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["getbaseoptions",{"_index":901,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["getconfig",{"_index":756,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getcredential",{"_index":909,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getfederationtokenresponse",{"_index":932,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["gethasauthorization",{"_index":104,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gethasauthorization(context",{"_index":134,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gethasauthorizationtype",{"_index":105,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gethasauthorizationtype(context",{"_index":137,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gethttpauthorization",{"_index":411,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["gethttpauthorization(request",{"_index":423,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["getoptions",{"_index":684,"title":{},"body":{"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{}}}],["getoptions(haschina",{"_index":693,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["gettemporarycredentialdurationseconds",{"_index":847,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["getting",{"_index":1237,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettokenexpiredin",{"_index":289,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["gif",{"_index":821,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["global",{"_index":281,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["goods",{"_index":1326,"title":{},"body":{"license.html":{}}}],["gqlcontexttype",{"_index":148,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gqlexecutioncontext",{"_index":149,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext",{"_index":161,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":1351,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["graphqlisodatetime",{"_index":404,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/MomentEntity.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserEntity.html":{},"classes/UserProfileEntity.html":{}}}],["graphqlmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gt",{"_index":391,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/StringFilter.html":{}}}],["gte",{"_index":392,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/StringFilter.html":{}}}],["guangzhou",{"_index":897,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["guard",{"_index":97,"title":{"guards/AuthorizationGuard.html":{}},"body":{"guards/AuthorizationGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":98,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["handler",{"_index":133,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["hasauthorization",{"_index":63,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"miscellaneous/variables.html":{}}}],["haschina",{"_index":695,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["hash",{"_index":1100,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hash(password",{"_index":1233,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hastokenexpired",{"_index":290,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["hastokenexpired(token",{"_index":307,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["hastokenexpiredtype",{"_index":67,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"miscellaneous/enumerations.html":{}}}],["hastokenexpiredtype.auth",{"_index":89,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"miscellaneous/variables.html":{}}}],["hastokenexpiredtype.refresh",{"_index":273,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["header",{"_index":425,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["headers",{"_index":435,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["headers[key",{"_index":439,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["headers[key.tolowercase",{"_index":437,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["help",{"_index":1252,"title":{},"body":{"index.html":{}}}],["helper",{"_index":1235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["holder",{"_index":1294,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1304,"title":{},"body":{"license.html":{}}}],["hook",{"_index":642,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":77,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpprofile",{"_index":919,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["icontext",{"_index":146,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["icontext.create",{"_index":170,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["id",{"_index":205,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentEntity.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserResolver.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["idhelper",{"_index":247,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{}}}],["idhelper.alphabet(32",{"_index":861,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["idhelper.id(128",{"_index":345,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["idhelper.id(64",{"_index":269,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/SecuritySmsService.html":{}}}],["idhelper.numeral(6",{"_index":715,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["image",{"_index":463,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/enumerations.html":{}}}],["images",{"_index":468,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/TencentCloudCosResolver.html":{}}}],["implements",{"_index":157,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/DateTimeFilter.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"classes/StringFilter.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"miscellaneous/variables.html":{}}}],["implied",{"_index":1305,"title":{},"body":{"license.html":{}}}],["import",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"miscellaneous/variables.html":{}}}],["incidental",{"_index":1319,"title":{},"body":{"license.html":{}}}],["include",{"_index":443,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["including",{"_index":1307,"title":{},"body":{"license.html":{}}}],["index",{"_index":60,"title":{"index.html":{}},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":1318,"title":{},"body":{"license.html":{}}}],["info",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["inherited",{"_index":456,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentVideoMedia.html":{}}}],["inique",{"_index":1135,"title":{},"body":{"classes/UserWhereUniqueInput.html":{}}}],["init",{"_index":641,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["initializecontext",{"_index":106,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["initializecontext(context",{"_index":139,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["initialzd",{"_index":141,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["inject",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":147,"title":{"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":285,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":381,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentWhereUniqueInput.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["inputtype",{"_index":405,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"classes/StringFilter.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["instanceof",{"_index":357,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/UserResolver.html":{}}}],["int",{"_index":541,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["interface",{"_index":53,"title":{"interfaces/AuthDecoratorOptions.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"interfaces/SocfonyConfig.html":{}},"body":{"interfaces/AuthDecoratorOptions.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"interfaces/SocfonyConfig.html":{},"coverage.html":{}}}],["interfaces",{"_index":55,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"interfaces/SocfonyConfig.html":{},"overview.html":{}}}],["interfacetype",{"_index":459,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{}}}],["interruption",{"_index":1331,"title":{},"body":{"license.html":{}}}],["isnot",{"_index":1020,"title":{},"body":{"classes/UserProfileRelationFilter.html":{},"classes/UserRelationFilter.html":{}}}],["iso8601",{"_index":937,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["isproduction",{"_index":743,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["issetpassword",{"_index":957,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserResolver.html":{}}}],["issetpassword(@parent",{"_index":1093,"title":{},"body":{"classes/UserResolver.html":{}}}],["issetpassword(user",{"_index":1061,"title":{},"body":{"classes/UserResolver.html":{}}}],["item",{"_index":722,"title":{},"body":{"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{}}}],["jpg",{"_index":819,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["json.stringify",{"_index":865,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["kernel",{"_index":420,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["key",{"_index":432,"title":{},"body":{"classes/ExecutionContext.html":{},"injectables/TencentCloudCosService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["liability",{"_index":1334,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1316,"title":{},"body":{"license.html":{}}}],["license",{"_index":1262,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":1266,"title":{},"body":{"index.html":{}}}],["limited",{"_index":1308,"title":{},"body":{"license.html":{}}}],["list",{"_index":550,"title":{},"body":{"classes/MomentListRelationFilter.html":{},"injectables/TencentCloudCosService.html":{},"classes/UserWhereInput.html":{},"coverage.html":{},"license.html":{}}}],["listing",{"_index":522,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["literal",{"_index":371,"title":{},"body":{"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/TencentCloudCosResolver.html":{}}}],["load",{"_index":748,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{}}}],["loadconfig",{"_index":1145,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadconfig(path",{"_index":750,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{}}}],["location",{"_index":992,"title":{},"body":{"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileWhereInput.html":{}}}],["logged",{"_index":201,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["logger",{"_index":630,"title":{},"body":{"modules/PrismaModule.html":{},"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["logger('prisma",{"_index":636,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["logger('socfony",{"_index":751,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["logger.error(error.message",{"_index":752,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["logger.log(`loaded",{"_index":754,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["login",{"_index":204,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"miscellaneous/variables.html":{}}}],["loss",{"_index":1328,"title":{},"body":{"license.html":{}}}],["lt",{"_index":393,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/StringFilter.html":{}}}],["lte",{"_index":352,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/DateTimeFilter.html":{},"classes/StringFilter.html":{}}}],["mail",{"_index":962,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserWhereInput.html":{}}}],["many.args",{"_index":510,"title":{},"body":{"classes/MomentFindFirstArgs.html":{},"classes/MomentResolver.html":{}}}],["many.args.ts",{"_index":514,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"coverage.html":{}}}],["many.args.ts:23",{"_index":540,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["many.args.ts:29",{"_index":531,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["many.args.ts:38",{"_index":524,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["many.args.ts:48",{"_index":538,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["many.args.ts:58",{"_index":536,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["many.args.ts:64",{"_index":526,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["map((item",{"_index":721,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["matches",{"_index":585,"title":{},"body":{"classes/MomentResolver.html":{},"classes/UserResolver.html":{}}}],["matching",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materials",{"_index":1292,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":1248,"title":{},"body":{"index.html":{}}}],["media",{"_index":447,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["media.entity",{"_index":501,"title":{},"body":{"classes/MomentEntity.html":{}}}],["media_type_dont_supported",{"_index":461,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1309,"title":{},"body":{"license.html":{}}}],["met",{"_index":1283,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":1209,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":100,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentResolver.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":634,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mime",{"_index":818,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["minutes').todate",{"_index":354,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["miscellaneous",{"_index":1215,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":1109,"title":{},"body":{"classes/UserResolver.html":{}}}],["mode",{"_index":764,"title":{},"body":{"classes/StringFilter.html":{}}}],["modification",{"_index":1278,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":469,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereUniqueInput.html":{},"classes/UserWhereInput.html":{},"miscellaneous/variables.html":{}}}],["moment.resolver",{"_index":563,"title":{},"body":{"modules/MomentModule.html":{}}}],["moment/moment.module",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["moment_not_found",{"_index":596,"title":{},"body":{"classes/MomentResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["momentaudiomedia",{"_index":444,"title":{"classes/MomentAudioMedia.html":{}},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["momententity",{"_index":481,"title":{"classes/MomentEntity.html":{}},"body":{"classes/MomentEntity.html":{},"classes/MomentResolver.html":{},"classes/MomentWhereUniqueInput.html":{},"coverage.html":{}}}],["momentfindfirst",{"_index":579,"title":{},"body":{"classes/MomentResolver.html":{}}}],["momentfindfirst(args",{"_index":584,"title":{},"body":{"classes/MomentResolver.html":{}}}],["momentfindfirstargs",{"_index":503,"title":{"classes/MomentFindFirstArgs.html":{}},"body":{"classes/MomentFindFirstArgs.html":{},"classes/MomentResolver.html":{},"coverage.html":{}}}],["momentfindmany",{"_index":580,"title":{},"body":{"classes/MomentResolver.html":{}}}],["momentfindmany(args",{"_index":587,"title":{},"body":{"classes/MomentResolver.html":{}}}],["momentfindmanyargs",{"_index":509,"title":{"classes/MomentFindManyArgs.html":{}},"body":{"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentResolver.html":{},"coverage.html":{}}}],["momentfindunique",{"_index":581,"title":{},"body":{"classes/MomentResolver.html":{}}}],["momentfindunique(where",{"_index":591,"title":{},"body":{"classes/MomentResolver.html":{}}}],["momentimagemedia",{"_index":467,"title":{"classes/MomentImageMedia.html":{}},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["momentlistrelationfilter",{"_index":549,"title":{"classes/MomentListRelationFilter.html":{}},"body":{"classes/MomentListRelationFilter.html":{},"classes/UserWhereInput.html":{},"coverage.html":{}}}],["momentmedia",{"_index":471,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["momentmediacommon",{"_index":449,"title":{"classes/MomentMediaCommon.html":{}},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["momentmediacommon:36",{"_index":457,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentVideoMedia.html":{}}}],["momentmediatype",{"_index":455,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/enumerations.html":{}}}],["momentmediatype.audio",{"_index":476,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["momentmediatype.image",{"_index":477,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["momentmediatype.video",{"_index":478,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["momentmodule",{"_index":13,"title":{"modules/MomentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MomentModule.html":{},"modules.html":{},"overview.html":{}}}],["momentorderbyinput",{"_index":527,"title":{"classes/MomentOrderByInput.html":{}},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentOrderByInput.html":{},"coverage.html":{}}}],["momentresolver",{"_index":562,"title":{"classes/MomentResolver.html":{}},"body":{"modules/MomentModule.html":{},"classes/MomentResolver.html":{},"coverage.html":{}}}],["moments",{"_index":523,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentResolver.html":{},"classes/UserWhereInput.html":{}}}],["momentscalarfieldenum",{"_index":546,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["momentvideomedia",{"_index":466,"title":{"classes/MomentVideoMedia.html":{}},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["momentwhereinput",{"_index":539,"title":{"classes/MomentWhereInput.html":{}},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentWhereInput.html":{},"coverage.html":{}}}],["momentwhereuniqueinput",{"_index":519,"title":{"classes/MomentWhereUniqueInput.html":{}},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentResolver.html":{},"classes/MomentWhereUniqueInput.html":{},"coverage.html":{}}}],["months",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":589,"title":{},"body":{"classes/MomentResolver.html":{},"index.html":{}}}],["mp3",{"_index":824,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["mp4",{"_index":822,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["mutation",{"_index":238,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{}}}],["mutation(undefined",{"_index":228,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{}}}],["n",{"_index":533,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["name",{"_index":117,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserEntity.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserWhereInput.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["name/cos:abortmultipartupload",{"_index":882,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:completemultipartupload",{"_index":881,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:getobject",{"_index":871,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:headobject",{"_index":872,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:initiatemultipartupload",{"_index":877,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:listmultipartuploads",{"_index":878,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:listparts",{"_index":879,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:optionsobject",{"_index":873,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:postobject",{"_index":876,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:putobject",{"_index":875,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:uploadpart",{"_index":880,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["names",{"_index":1295,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":326,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["namespace_name",{"_index":325,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["nanoid",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["nanoid(size",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":75,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/SecuritySmsResolver.html":{},"classes/UpdateViewerArgs.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["negligence",{"_index":1338,"title":{},"body":{"license.html":{}}}],["nestjs",{"_index":118,"title":{},"body":{"guards/AuthorizationGuard.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"modules/MomentModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":150,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"classes/SecuritySmsResolver.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["networking",{"_index":1246,"title":{},"body":{"index.html":{}}}],["new",{"_index":180,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newphonesecurity",{"_index":950,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"classes/UserResolver.html":{}}}],["nextjs",{"_index":136,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["nodejs",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["nodejs/tencentcloud/services/sms/v20190711/sms_client",{"_index":906,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["nodejs/tencentcloud/services/sms/v20190711/sms_models",{"_index":908,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["nodejs/tencentcloud/services/sts/v20180813/sts_client",{"_index":945,"title":{},"body":{"injectables/TencentCloudStsService.html":{}}}],["nodejs/tencentcloud/services/sts/v20180813/sts_models",{"_index":933,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["none",{"_index":552,"title":{},"body":{"classes/MomentListRelationFilter.html":{}}}],["notice",{"_index":1287,"title":{},"body":{"license.html":{}}}],["notin",{"_index":394,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/StringFilter.html":{}}}],["nullable",{"_index":395,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/StringFilter.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{}}}],["number",{"_index":373,"title":{},"body":{"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/MomentFindManyArgs.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["number.parseint",{"_index":706,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["numberfilter",{"_index":1133,"title":{},"body":{"classes/UserWhereInput.html":{}}}],["numeral",{"_index":1163,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":300,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/MomentResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":829,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudSmsService.html":{},"classes/UserResolver.html":{}}}],["object.keys(data",{"_index":1098,"title":{},"body":{"classes/UserResolver.html":{}}}],["object.keys(where).length",{"_index":261,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["objecttype",{"_index":208,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserProfileEntity.html":{}}}],["ogg",{"_index":823,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["omit",{"_index":506,"title":{},"body":{"classes/MomentFindFirstArgs.html":{},"classes/MomentWhereInput.html":{},"classes/UserEntity.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["omittype",{"_index":508,"title":{},"body":{"classes/MomentFindFirstArgs.html":{},"classes/UserProfileUpdateInput.html":{}}}],["omittype(momentfindmanyargs",{"_index":511,"title":{},"body":{"classes/MomentFindFirstArgs.html":{}}}],["one",{"_index":592,"title":{},"body":{"classes/MomentResolver.html":{},"miscellaneous/variables.html":{}}}],["onmoduledestroy",{"_index":631,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":632,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1240,"title":{},"body":{"index.html":{}}}],["optional",{"_index":62,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentWhereInput.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":59,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.endpoint",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options.expiredin",{"_index":725,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["options.isproduction",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options.templateid",{"_index":730,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["options.veriables",{"_index":719,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["options?.hasauthorization",{"_index":87,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["options?.type",{"_index":88,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["order",{"_index":529,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{},"coverage.html":{}}}],["orderby",{"_index":518,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"injectables/SecuritySmsService.html":{}}}],["other.id",{"_index":1107,"title":{},"body":{"classes/UserResolver.html":{}}}],["otherwise",{"_index":1339,"title":{},"body":{"license.html":{}}}],["out",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1353,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":486,"title":{},"body":{"classes/MomentEntity.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentWhereInput.html":{},"classes/UserProfileEntity.html":{}}}],["owner(parent",{"_index":594,"title":{},"body":{"classes/MomentResolver.html":{}}}],["ownerid",{"_index":487,"title":{},"body":{"classes/MomentEntity.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentWhereInput.html":{}}}],["package",{"_index":1189,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":79,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentResolver.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["param.hasauthorization",{"_index":81,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["param.type",{"_index":82,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["parameters",{"_index":116,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentResolver.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":900,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["paramsset",{"_index":718,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["parent",{"_index":239,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserResolver.html":{}}}],["parent.ownerid",{"_index":606,"title":{},"body":{"classes/MomentResolver.html":{}}}],["partialtype",{"_index":624,"title":{},"body":{"classes/MomentWhereUniqueInput.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["partialtype(picktype(momententity",{"_index":626,"title":{},"body":{"classes/MomentWhereUniqueInput.html":{}}}],["partialtype(userentity",{"_index":1136,"title":{},"body":{"classes/UserWhereUniqueInput.html":{}}}],["partialtype(userprofileentity",{"_index":1048,"title":{},"body":{"classes/UserProfileUpdateInput.html":{}}}],["particular",{"_index":1311,"title":{},"body":{"license.html":{}}}],["password",{"_index":966,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["passwordhelper",{"_index":1084,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["passwordhelper.compare(password",{"_index":1124,"title":{},"body":{"injectables/UserService.html":{}}}],["passwordhelper.hash(data[key",{"_index":1102,"title":{},"body":{"classes/UserResolver.html":{}}}],["path",{"_index":451,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"interfaces/SocfonyConfig.html":{},"classes/UserProfileEntity.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["period",{"_index":306,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":1303,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1279,"title":{},"body":{"license.html":{}}}],["phone",{"_index":270,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"miscellaneous/variables.html":{}}}],["phone(@parent",{"_index":1087,"title":{},"body":{"classes/UserResolver.html":{}}}],["phone(user",{"_index":1063,"title":{},"body":{"classes/UserResolver.html":{}}}],["phone.replace(/(.*)\\d{4}(\\d{4",{"_index":1088,"title":{},"body":{"classes/UserResolver.html":{}}}],["phone.startswith('+86",{"_index":713,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["phonenumberset",{"_index":729,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["pick",{"_index":515,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"injectables/TencentCloudSmsService.html":{},"classes/UserUpdateInput.html":{}}}],["picktype",{"_index":625,"title":{},"body":{"classes/MomentWhereUniqueInput.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["picktype(userentity",{"_index":1130,"title":{},"body":{"classes/UserUpdateInput.html":{}}}],["platform",{"_index":1243,"title":{},"body":{"index.html":{}}}],["playground",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugin",{"_index":1247,"title":{},"body":{"index.html":{}}}],["png",{"_index":820,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["policy",{"_index":864,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["port",{"_index":744,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["position",{"_index":521,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["possibility",{"_index":1344,"title":{},"body":{"license.html":{}}}],["prifle",{"_index":1024,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["prior",{"_index":1302,"title":{},"body":{"license.html":{}}}],["prisma",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"classes/StringFilter.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma.authorizationtokengetpayload",{"_index":211,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{}}}],["prisma.datetimefilter",{"_index":406,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["prisma.jsonvalue",{"_index":496,"title":{},"body":{"classes/MomentEntity.html":{}}}],["prisma.middleware",{"_index":1236,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prisma.momentgetpayload",{"_index":502,"title":{},"body":{"classes/MomentEntity.html":{}}}],["prisma.momentlistrelationfilter",{"_index":557,"title":{},"body":{"classes/MomentListRelationFilter.html":{}}}],["prisma.momentorderbyinput",{"_index":577,"title":{},"body":{"classes/MomentOrderByInput.html":{}}}],["prisma.momentscalarfieldenum",{"_index":525,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["prisma.momentwhereuniqueinput",{"_index":627,"title":{},"body":{"classes/MomentWhereUniqueInput.html":{}}}],["prisma.querymode",{"_index":775,"title":{},"body":{"classes/StringFilter.html":{}}}],["prisma.sortorder",{"_index":565,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{}}}],["prisma.stringfilter",{"_index":783,"title":{},"body":{"classes/StringFilter.html":{}}}],["prisma.usergetpayload",{"_index":1042,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["prisma.userorderbyinput",{"_index":988,"title":{},"body":{"classes/UserOrderByInput.html":{}}}],["prisma.userprofileorderbyinput",{"_index":1018,"title":{},"body":{"classes/UserProfileOrderByInput.html":{}}}],["prisma.userprofilerelationfilter",{"_index":1022,"title":{},"body":{"classes/UserProfileRelationFilter.html":{}}}],["prisma.userrelationfilter",{"_index":1055,"title":{},"body":{"classes/UserRelationFilter.html":{}}}],["prisma.userwhereuniqueinput",{"_index":1137,"title":{},"body":{"classes/UserWhereUniqueInput.html":{}}}],["prisma/client",{"_index":151,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"classes/StringFilter.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":112,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentResolver.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["prismaclient.authorizationtoken.findunique",{"_index":442,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["prismaloggermiddleware",{"_index":633,"title":{},"body":{"modules/PrismaModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["prismaloggermiddleware(logger",{"_index":1234,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prismamodule",{"_index":14,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":158,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["process.argv",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.client_graphql_endpoint",{"_index":760,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["process.env.client_server_port",{"_index":758,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["process.env.database_url",{"_index":640,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":757,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["process.env.tencent_cloud_cos_bucket",{"_index":851,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["process.env.tencent_cloud_cos_region",{"_index":852,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["process.env.tencent_cloud_sms_app_id",{"_index":911,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["process.env.tencent_cloud_sms_china_template_id",{"_index":709,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_china_veriables",{"_index":710,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_expired_in",{"_index":707,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_extend_code",{"_index":915,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["process.env.tencent_cloud_sms_other_template_id",{"_index":711,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_other_veriables",{"_index":712,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_sender_id",{"_index":917,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["process.env.tencent_cloud_sms_sign",{"_index":913,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["process.exit(1",{"_index":753,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["procurement",{"_index":1324,"title":{},"body":{"license.html":{}}}],["production",{"_index":745,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["products",{"_index":1299,"title":{},"body":{"license.html":{}}}],["profile",{"_index":918,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserResolver.html":{},"classes/UserWhereInput.html":{},"coverage.html":{}}}],["profile'})@authorizationwith",{"_index":1031,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["profile(@parent",{"_index":1095,"title":{},"body":{"classes/UserResolver.html":{}}}],["profile(user",{"_index":1065,"title":{},"body":{"classes/UserResolver.html":{}}}],["profile.resolver",{"_index":1009,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["profile.service",{"_index":1010,"title":{},"body":{"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{}}}],["profile.userid",{"_index":1037,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["profile/dto/user",{"_index":987,"title":{},"body":{"classes/UserOrderByInput.html":{},"classes/UserWhereInput.html":{}}}],["profile/entities/profile.entity",{"_index":974,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserResolver.html":{}}}],["profile/profile.module",{"_index":982,"title":{},"body":{"modules/UserModule.html":{}}}],["profile/profile.service",{"_index":1085,"title":{},"body":{"classes/UserResolver.html":{}}}],["profileservice",{"_index":1028,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["profits",{"_index":1329,"title":{},"body":{"license.html":{}}}],["project",{"_index":1257,"title":{},"body":{"index.html":{}}}],["promise",{"_index":129,"title":{},"body":{"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{}}}],["promote",{"_index":1298,"title":{},"body":{"license.html":{}}}],["properties",{"_index":61,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntity.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{}}}],["provide",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1280,"title":{},"body":{"license.html":{}}}],["provider",{"_index":635,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["public",{"_index":408,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["purpose",{"_index":1312,"title":{},"body":{"license.html":{}}}],["qcs::cos:${region}:uid/${uid}:${bucket",{"_index":874,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["qcs::cos:${region}:uid/${uid}:${bucket}/${name",{"_index":883,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["query",{"_index":221,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentResolver.html":{},"classes/StringFilter.html":{},"classes/UserResolver.html":{}}}],["query(undefined",{"_index":220,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentResolver.html":{},"classes/UserResolver.html":{}}}],["querymode",{"_index":782,"title":{},"body":{"classes/StringFilter.html":{}}}],["read",{"_index":807,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{}}}],["readability",{"_index":1164,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["readability(23456789qwertyupasdfghjklzxcvbnm",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":159,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/MomentResolver.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["redistribution",{"_index":1274,"title":{},"body":{"license.html":{}}}],["redistributions",{"_index":1284,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":110,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["refresh",{"_index":196,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["refreshauthorizationtoken",{"_index":216,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{}}}],["refreshauthorizationtoken(@context",{"_index":274,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["refreshauthorizationtoken(authorizationtoken",{"_index":309,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["refreshauthorizationtoken(context",{"_index":231,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["refreshexpiredat",{"_index":189,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{}}}],["refreshexpiredin",{"_index":330,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{}}}],["refreshexpiredin.unit",{"_index":335,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["refreshexpiredin.value",{"_index":334,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["region",{"_index":789,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["register",{"_index":826,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["registered",{"_index":958,"title":{},"body":{"classes/UserEntity.html":{}}}],["registerenumtype",{"_index":460,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosResolver.html":{}}}],["registerenumtype(allowuploadfiletype",{"_index":828,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["registerenumtype(momentmediatype",{"_index":464,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{}}}],["registerenumtype(prisma.momentscalarfieldenum",{"_index":545,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["registerenumtype(prisma.querymode",{"_index":781,"title":{},"body":{"classes/StringFilter.html":{}}}],["rejectonnotfound",{"_index":264,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{}}}],["relation",{"_index":553,"title":{},"body":{"classes/MomentListRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserWhereInput.html":{}}}],["relation.filter",{"_index":622,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["relation.filter.ts",{"_index":551,"title":{},"body":{"classes/MomentListRelationFilter.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserRelationFilter.html":{},"coverage.html":{}}}],["relation.filter.ts:12",{"_index":554,"title":{},"body":{"classes/MomentListRelationFilter.html":{},"classes/UserProfileRelationFilter.html":{}}}],["relation.filter.ts:13",{"_index":1053,"title":{},"body":{"classes/UserRelationFilter.html":{}}}],["relation.filter.ts:18",{"_index":556,"title":{},"body":{"classes/MomentListRelationFilter.html":{},"classes/UserProfileRelationFilter.html":{}}}],["relation.filter.ts:19",{"_index":1054,"title":{},"body":{"classes/UserRelationFilter.html":{}}}],["relation.filter.ts:24",{"_index":555,"title":{},"body":{"classes/MomentListRelationFilter.html":{}}}],["replace('#code",{"_index":723,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["replace('#expired",{"_index":724,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["reproduce",{"_index":1290,"title":{},"body":{"license.html":{}}}],["req",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":152,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/ExecutionContext.html":{},"injectables/TencentCloudSmsService.html":{}}}],["request.context",{"_index":427,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["request.context.authorizationtoken?.token",{"_index":428,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["request.header",{"_index":433,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["request.header(key",{"_index":434,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["request.headers",{"_index":436,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["reserved",{"_index":1273,"title":{},"body":{"license.html":{}}}],["reset",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["resolve",{"_index":237,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentResolver.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{}}}],["resolvecontext",{"_index":107,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["resolvecontext(context",{"_index":143,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["resolvefield",{"_index":240,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserResolver.html":{}}}],["resolvefield(undefined",{"_index":235,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserResolver.html":{}}}],["resolveprofile",{"_index":1039,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["resolveprofile(user",{"_index":1041,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["resolver",{"_index":145,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{}}}],["resolvers",{"_index":890,"title":{},"body":{"modules/TencentCloudModule.html":{}}}],["resolvetype(value",{"_index":472,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["resource",{"_index":832,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{}}}],["result",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1285,"title":{},"body":{"license.html":{}}}],["return",{"_index":85,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":128,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentResolver.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1272,"title":{},"body":{"license.html":{}}}],["root",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["runner",{"_index":225,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{}}}],["rxjs",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["scalar",{"_index":547,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["schema",{"_index":827,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["schema.graphql",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scofony",{"_index":1070,"title":{},"body":{"classes/UserResolver.html":{}}}],["sdk",{"_index":905,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"dependencies.html":{}}}],["seconds",{"_index":850,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["seconds').todate",{"_index":717,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["secrect",{"_index":928,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["secuity",{"_index":1122,"title":{},"body":{"injectables/UserService.html":{}}}],["secure",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["security",{"_index":260,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["security.expiredat.gettime",{"_index":735,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["security.id",{"_index":738,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["security.usedat",{"_index":734,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["security/security.module",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["security_compare_failed",{"_index":314,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["securitymodule",{"_index":15,"title":{"modules/SecurityModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SecurityModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["securitysmscode",{"_index":702,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["securitysmsresolver",{"_index":658,"title":{"classes/SecuritySmsResolver.html":{}},"body":{"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"coverage.html":{}}}],["securitysmsservice",{"_index":655,"title":{"injectables/SecuritySmsService.html":{}},"body":{"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["secyrity",{"_index":668,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["send",{"_index":676,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudSmsService.html":{}}}],["send(params",{"_index":898,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["send(phone",{"_index":699,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["senderid",{"_index":916,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["sendsmsrequest",{"_index":907,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["sent",{"_index":692,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["server",{"_index":944,"title":{},"body":{"injectables/TencentCloudStsService.html":{},"dependencies.html":{}}}],["service",{"_index":120,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["services",{"_index":1327,"title":{},"body":{"license.html":{}}}],["set",{"_index":646,"title":{},"body":{"modules/PrismaModule.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["setmetadata",{"_index":69,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["setmetadata(auth_metadata_has_authorization",{"_index":86,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["sets",{"_index":520,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["setting",{"_index":323,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["setting.expiredin.unit",{"_index":347,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["setting.refreshexpiredin.unit",{"_index":350,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["shall",{"_index":1315,"title":{},"body":{"license.html":{}}}],["sign",{"_index":912,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["size",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skip",{"_index":512,"title":{},"body":{"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{}}}],["sms",{"_index":663,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/UserService.html":{}}}],["sms.resolver",{"_index":659,"title":{},"body":{"modules/SecurityModule.html":{}}}],["sms.resolver.ts",{"_index":662,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"coverage.html":{}}}],["sms.resolver.ts:13",{"_index":667,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["sms.resolver.ts:27",{"_index":671,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["sms.resolver.ts:47",{"_index":674,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["sms.service",{"_index":660,"title":{},"body":{"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/UserService.html":{}}}],["sms.service.ts",{"_index":682,"title":{},"body":{"injectables/SecuritySmsService.html":{},"coverage.html":{}}}],["sms.service.ts:11",{"_index":688,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.service.ts:113",{"_index":703,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.service.ts:26",{"_index":694,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.service.ts:49",{"_index":700,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.service.ts:85",{"_index":690,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.tencentcloudapi.com",{"_index":920,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["sms_code",{"_index":1222,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["smssdkappid",{"_index":910,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["soc.service",{"_index":815,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["socfony",{"_index":142,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["socfonyconfig",{"_index":740,"title":{"interfaces/SocfonyConfig.html":{}},"body":{"interfaces/SocfonyConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["social",{"_index":1245,"title":{},"body":{"index.html":{}}}],["software",{"_index":1241,"title":{},"body":{"index.html":{},"license.html":{}}}],["solve",{"_index":1253,"title":{},"body":{"index.html":{}}}],["sort",{"_index":566,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{}}}],["sortschema",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"index.html":{},"license.html":{}}}],["special",{"_index":1320,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1301,"title":{},"body":{"license.html":{}}}],["split",{"_index":720,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["src/.../app.config.ts",{"_index":1227,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../authorization.decorator.ts",{"_index":1224,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../context.decorator.ts",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cos.resolver.ts",{"_index":1217,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../enums.ts",{"_index":1218,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../graphql.module.ts",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../id.helper.ts",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1228,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.middleware.ts",{"_index":1229,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":1225,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../media.entity.ts",{"_index":1219,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../password.helper.ts",{"_index":1226,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prisma.module.ts",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.resolver.ts",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.config.ts",{"_index":741,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["src/authorization",{"_index":184,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/SecuritySmsResolver.html":{},"classes/UpdateViewerArgs.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/authorization.decorator",{"_index":241,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{}}}],["src/authorization.decorator.ts",{"_index":56,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/authorization.guard.ts",{"_index":99,"title":{},"body":{"guards/AuthorizationGuard.html":{},"coverage.html":{}}}],["src/authorization.guard.ts:101",{"_index":124,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:19",{"_index":114,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:36",{"_index":144,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:48",{"_index":135,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:59",{"_index":138,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:71",{"_index":131,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:88",{"_index":140,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/constants",{"_index":244,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserResolver.html":{}}}],["src/constants.ts",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/context.decorator",{"_index":245,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserResolver.html":{}}}],["src/context.decorator.ts",{"_index":1153,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/execution",{"_index":246,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["src/graphql",{"_index":621,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["src/graphql/filters/date",{"_index":386,"title":{},"body":{"classes/DateTimeFilter.html":{},"coverage.html":{}}}],["src/graphql/filters/string.filter.ts",{"_index":761,"title":{},"body":{"classes/StringFilter.html":{},"coverage.html":{}}}],["src/graphql/filters/string.filter.ts:16",{"_index":769,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:19",{"_index":772,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:22",{"_index":778,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:25",{"_index":773,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:28",{"_index":774,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:31",{"_index":770,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:34",{"_index":771,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:37",{"_index":766,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:40",{"_index":780,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:43",{"_index":768,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:46",{"_index":776,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:49",{"_index":777,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/graphql.module.ts",{"_index":1158,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/helper",{"_index":248,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["src/helper/id.helper.ts",{"_index":1160,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/helper/password.helper.ts",{"_index":1165,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/main.ts",{"_index":1166,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/moment/dto/moment",{"_index":504,"title":{},"body":{"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"classes/UserWhereInput.html":{},"coverage.html":{}}}],["src/moment/entities/media.entity.ts",{"_index":445,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/moment/entities/media.entity.ts:36",{"_index":558,"title":{},"body":{"classes/MomentMediaCommon.html":{}}}],["src/moment/entities/media.entity.ts:51",{"_index":607,"title":{},"body":{"classes/MomentVideoMedia.html":{}}}],["src/moment/entities/media.entity.ts:57",{"_index":608,"title":{},"body":{"classes/MomentVideoMedia.html":{}}}],["src/moment/entities/media.entity.ts:72",{"_index":454,"title":{},"body":{"classes/MomentAudioMedia.html":{}}}],["src/moment/entities/media.entity.ts:78",{"_index":452,"title":{},"body":{"classes/MomentAudioMedia.html":{}}}],["src/moment/entities/media.entity.ts:90",{"_index":548,"title":{},"body":{"classes/MomentImageMedia.html":{}}}],["src/moment/entities/moment.entity.ts",{"_index":482,"title":{},"body":{"classes/MomentEntity.html":{},"coverage.html":{}}}],["src/moment/entities/moment.entity.ts:23",{"_index":495,"title":{},"body":{"classes/MomentEntity.html":{}}}],["src/moment/entities/moment.entity.ts:29",{"_index":500,"title":{},"body":{"classes/MomentEntity.html":{}}}],["src/moment/entities/moment.entity.ts:35",{"_index":489,"title":{},"body":{"classes/MomentEntity.html":{}}}],["src/moment/entities/moment.entity.ts:41",{"_index":497,"title":{},"body":{"classes/MomentEntity.html":{}}}],["src/moment/entities/moment.entity.ts:47",{"_index":492,"title":{},"body":{"classes/MomentEntity.html":{}}}],["src/moment/entities/moment.entity.ts:53",{"_index":494,"title":{},"body":{"classes/MomentEntity.html":{}}}],["src/moment/entities/moment.entity.ts:59",{"_index":499,"title":{},"body":{"classes/MomentEntity.html":{}}}],["src/moment/entities/moment.entity.ts:65",{"_index":498,"title":{},"body":{"classes/MomentEntity.html":{}}}],["src/moment/moment.module.ts",{"_index":561,"title":{},"body":{"modules/MomentModule.html":{}}}],["src/moment/moment.resolver.ts",{"_index":578,"title":{},"body":{"classes/MomentResolver.html":{},"coverage.html":{}}}],["src/moment/moment.resolver.ts:11",{"_index":583,"title":{},"body":{"classes/MomentResolver.html":{}}}],["src/moment/moment.resolver.ts:21",{"_index":593,"title":{},"body":{"classes/MomentResolver.html":{}}}],["src/moment/moment.resolver.ts:42",{"_index":590,"title":{},"body":{"classes/MomentResolver.html":{}}}],["src/moment/moment.resolver.ts:56",{"_index":586,"title":{},"body":{"classes/MomentResolver.html":{}}}],["src/moment/moment.resolver.ts:67",{"_index":595,"title":{},"body":{"classes/MomentResolver.html":{}}}],["src/prisma",{"_index":282,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{}}}],["src/prisma/middleware/logger.middleware.ts",{"_index":1178,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":628,"title":{},"body":{"modules/PrismaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/security/security",{"_index":661,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/security/security.module",{"_index":981,"title":{},"body":{"modules/UserModule.html":{}}}],["src/security/security.module.ts",{"_index":656,"title":{},"body":{"modules/SecurityModule.html":{}}}],["src/tencent",{"_index":657,"title":{},"body":{"modules/SecurityModule.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/user/dto",{"_index":384,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["src/user/dto/update",{"_index":948,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"coverage.html":{}}}],["src/user/dto/user",{"_index":576,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/MomentWhereInput.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":210,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentEntity.html":{},"classes/MomentResolver.html":{}}}],["src/user/entities/user.entity.ts",{"_index":955,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:28",{"_index":965,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:37",{"_index":968,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:46",{"_index":964,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:55",{"_index":970,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:64",{"_index":967,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:72",{"_index":959,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/entities/user.entity.ts:80",{"_index":972,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/user/enums",{"_index":250,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{}}}],["src/user/enums.ts",{"_index":1221,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/user/profile/dto/profile",{"_index":1046,"title":{},"body":{"classes/UserProfileUpdateInput.html":{},"coverage.html":{}}}],["src/user/profile/dto/user",{"_index":1011,"title":{},"body":{"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"coverage.html":{}}}],["src/user/profile/entities/profile.entity.ts",{"_index":989,"title":{},"body":{"classes/UserProfileEntity.html":{},"coverage.html":{}}}],["src/user/profile/entities/profile.entity.ts:16",{"_index":1001,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:25",{"_index":998,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:34",{"_index":995,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:43",{"_index":996,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:52",{"_index":997,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:61",{"_index":1000,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/profile.module.ts",{"_index":1007,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["src/user/profile/profile.resolver.ts",{"_index":1023,"title":{},"body":{"classes/UserProfileResolver.html":{},"coverage.html":{}}}],["src/user/profile/profile.resolver.ts:13",{"_index":1027,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["src/user/profile/profile.resolver.ts:33",{"_index":1032,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["src/user/profile/profile.service.ts",{"_index":1038,"title":{},"body":{"injectables/UserProfileService.html":{},"coverage.html":{}}}],["src/user/profile/profile.service.ts:19",{"_index":1043,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["src/user/profile/profile.service.ts:8",{"_index":1040,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["src/user/user.module",{"_index":283,"title":{},"body":{"modules/AuthorizationTokenModule.html":{}}}],["src/user/user.module.ts",{"_index":980,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.resolver.ts",{"_index":1056,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.resolver.ts:104",{"_index":1076,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.resolver.ts:117",{"_index":1069,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.resolver.ts:185",{"_index":1073,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.resolver.ts:42",{"_index":1058,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.resolver.ts:59",{"_index":1064,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.resolver.ts:73",{"_index":1060,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.resolver.ts:83",{"_index":1062,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.resolver.ts:92",{"_index":1066,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.service",{"_index":315,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["src/user/user.service.ts",{"_index":1113,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:11",{"_index":1116,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":1118,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:34",{"_index":1121,"title":{},"body":{"injectables/UserService.html":{}}}],["stack",{"_index":1239,"title":{},"body":{"index.html":{}}}],["started",{"_index":1238,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":779,"title":{},"body":{"classes/StringFilter.html":{}}}],["startswith",{"_index":765,"title":{},"body":{"classes/StringFilter.html":{}}}],["statement",{"_index":868,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["statements",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":409,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["status",{"_index":1258,"title":{},"body":{"index.html":{}}}],["storage",{"_index":994,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["strict",{"_index":1336,"title":{},"body":{"license.html":{}}}],["string",{"_index":198,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserProfileEntity.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["stringfilter",{"_index":611,"title":{"classes/StringFilter.html":{}},"body":{"classes/MomentWhereInput.html":{},"classes/StringFilter.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{},"coverage.html":{}}}],["sts",{"_index":791,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{}}}],["sts.tencentcloudapi.com",{"_index":946,"title":{},"body":{"injectables/TencentCloudStsService.html":{}}}],["stsclient",{"_index":855,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["stsclient.getfederationtoken",{"_index":860,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["substitute",{"_index":1325,"title":{},"body":{"license.html":{}}}],["such",{"_index":1345,"title":{},"body":{"license.html":{}}}],["super",{"_index":637,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":1348,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":1349,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":473,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["system",{"_index":327,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["table",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":513,"title":{},"body":{"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{}}}],["teams",{"_index":1251,"title":{},"body":{"index.html":{}}}],["templateid",{"_index":697,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["templateparamset",{"_index":731,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["temporary",{"_index":843,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["temporarycredentialdurationseconds",{"_index":838,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["tencent",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"miscellaneous/functions.html":{}}}],["tencentcloud",{"_index":904,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"dependencies.html":{}}}],["tencentcloudcoscredentials",{"_index":784,"title":{"classes/TencentCloudCosCredentials.html":{}},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"coverage.html":{}}}],["tencentcloudcosresolver",{"_index":795,"title":{"classes/TencentCloudCosResolver.html":{}},"body":{"classes/TencentCloudCosResolver.html":{},"modules/TencentCloudModule.html":{},"coverage.html":{}}}],["tencentcloudcosservice",{"_index":801,"title":{"injectables/TencentCloudCosService.html":{}},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"coverage.html":{},"overview.html":{}}}],["tencentcloudmodule",{"_index":16,"title":{"modules/TencentCloudModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules.html":{},"overview.html":{}}}],["tencentcloudsmsservice",{"_index":687,"title":{"injectables/TencentCloudSmsService.html":{}},"body":{"injectables/SecuritySmsService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"coverage.html":{},"overview.html":{}}}],["tencentcloudstscredentials",{"_index":924,"title":{"classes/TencentCloudStsCredentials.html":{}},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"coverage.html":{}}}],["tencentcloudstsfederationtoken",{"_index":790,"title":{"classes/TencentCloudStsFederationToken.html":{}},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"coverage.html":{}}}],["tencentcloudstsservice",{"_index":840,"title":{"injectables/TencentCloudStsService.html":{}},"body":{"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudStsService.html":{},"coverage.html":{},"overview.html":{}}}],["text",{"_index":490,"title":{},"body":{"classes/MomentEntity.html":{},"miscellaneous/functions.html":{}}}],["theory",{"_index":1333,"title":{},"body":{"license.html":{}}}],["this.$connect",{"_index":645,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["this.$disconnect",{"_index":650,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["this.$use(prismaloggermiddleware(this.logger",{"_index":647,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["this.authorizationtokenservice.createtokenwithsecurity",{"_index":272,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["this.authorizationtokenservice.hastokenexpired",{"_index":168,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.authorizationtokenservice.refreshauthorizationtoken",{"_index":275,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["this.baseoptions",{"_index":922,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["this.canactivelytokenhandler(context",{"_index":178,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.comparepassword(user",{"_index":1126,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cosservice.createtemporaryreadcredential",{"_index":831,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["this.cosservice.createtemporarywritecredential(idhelper.id(64",{"_index":833,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["this.cosservice.options",{"_index":830,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["this.createclient(region",{"_index":921,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["this.createsecurity(phone",{"_index":681,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["this.createuserauthorizationtoken(authorizationtoken.userid",{"_index":369,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.createuserauthorizationtoken(user",{"_index":358,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.getauthorizationtoken",{"_index":429,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["this.gethasauthorization(context",{"_index":176,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.gethasauthorizationtype(context",{"_index":177,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.gethttpauthorization(request",{"_index":426,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["this.getoptions(haschina",{"_index":714,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.gettokenexpiredin",{"_index":340,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.initializecontext(context",{"_index":173,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.options",{"_index":854,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["this.prisma.$transaction",{"_index":341,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.authorizationtoken.create",{"_index":342,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.authorizationtoken.deletemany",{"_index":351,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.authorizationtoken.update",{"_index":366,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.securitysmscode.create",{"_index":727,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.prisma.securitysmscode.findfirst",{"_index":732,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.prisma.securitysmscode.update",{"_index":737,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.prisma.setting.findunique",{"_index":324,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.user.create",{"_index":267,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["this.prisma.user.findunique",{"_index":256,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["this.prisma.userprofile.create",{"_index":1045,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["this.prisma.userprofile.findunique",{"_index":1044,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["this.prismaclient",{"_index":171,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.prismaclient.moment.findfirst(args",{"_index":604,"title":{},"body":{"classes/MomentResolver.html":{}}}],["this.prismaclient.moment.findmany(args",{"_index":603,"title":{},"body":{"classes/MomentResolver.html":{}}}],["this.prismaclient.moment.findunique",{"_index":601,"title":{},"body":{"classes/MomentResolver.html":{}}}],["this.prismaclient.user.findunique",{"_index":605,"title":{},"body":{"classes/MomentResolver.html":{},"classes/UserResolver.html":{}}}],["this.prismaclient.user.update",{"_index":1112,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.prismaclient.userprofile.update",{"_index":1036,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["this.profileservice.resolveprofile(context.user",{"_index":1035,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["this.reflector.get",{"_index":163,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.resolvecontext(context",{"_index":167,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.securitysmsservice.comparecode",{"_index":1127,"title":{},"body":{"injectables/UserService.html":{}}}],["this.securitysmsservice.send(phone",{"_index":677,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["this.securitysmsservice.updatecodetoused(value",{"_index":1128,"title":{},"body":{"injectables/UserService.html":{}}}],["this.sts.createclient(region",{"_index":856,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["this.temporarycredentialdurationseconds",{"_index":863,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["this.tencentcloudsmsservice.send",{"_index":728,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.userprofileservice.resolveprofile(user",{"_index":1096,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.comparesecurity",{"_index":356,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/UserResolver.html":{}}}],["throw",{"_index":179,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":388,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/MomentWhereInput.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserWhereInput.html":{}}}],["time.filter.ts",{"_index":387,"title":{},"body":{"classes/DateTimeFilter.html":{},"coverage.html":{}}}],["time.filter.ts:15",{"_index":396,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["time.filter.ts:18",{"_index":399,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["time.filter.ts:24",{"_index":403,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["time.filter.ts:27",{"_index":400,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["time.filter.ts:30",{"_index":401,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["time.filter.ts:33",{"_index":397,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["time.filter.ts:36",{"_index":398,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["time.filter.ts:39",{"_index":402,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["title",{"_index":488,"title":{},"body":{"classes/MomentEntity.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentWhereInput.html":{}}}],["tmpsecretid",{"_index":926,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["tmpsecretkey",{"_index":927,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["todate",{"_index":348,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token",{"_index":66,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["token.args",{"_index":252,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/UpdateViewerArgs.html":{}}}],["token.args.ts",{"_index":375,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"coverage.html":{}}}],["token.args.ts:16",{"_index":382,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["token.args.ts:24",{"_index":377,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["token.args.ts:32",{"_index":376,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["token.entity",{"_index":254,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.entity.ts",{"_index":186,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"coverage.html":{}}}],["token.entity.ts:23",{"_index":206,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.entity.ts:31",{"_index":203,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.entity.ts:39",{"_index":200,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.entity.ts:47",{"_index":195,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.entity.ts:55",{"_index":197,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.expiredat",{"_index":337,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.length",{"_index":438,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["token.module",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["token.module.ts",{"_index":280,"title":{},"body":{"modules/AuthorizationTokenModule.html":{}}}],["token.pop",{"_index":441,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["token.refreshexpiredat",{"_index":338,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.resolver",{"_index":284,"title":{},"body":{"modules/AuthorizationTokenModule.html":{}}}],["token.resolver.ts",{"_index":214,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"coverage.html":{}}}],["token.resolver.ts:127",{"_index":233,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.resolver.ts:29",{"_index":218,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.resolver.ts:45",{"_index":236,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.resolver.ts:72",{"_index":224,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.resolver.ts:83",{"_index":229,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.service",{"_index":154,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{}}}],["token.service.ts",{"_index":286,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{}}}],["token.service.ts:121",{"_index":296,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:145",{"_index":310,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:25",{"_index":293,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:39",{"_index":304,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:69",{"_index":308,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:86",{"_index":302,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.userid",{"_index":257,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token/authorization",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"coverage.html":{}}}],["token/constants",{"_index":73,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{}}}],["token/constants.ts",{"_index":1148,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["token/dto/create",{"_index":374,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/UpdateViewerArgs.html":{},"coverage.html":{}}}],["token/entities/authorization",{"_index":185,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"coverage.html":{}}}],["token/enums",{"_index":74,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/SecuritySmsResolver.html":{}}}],["token/enums.ts",{"_index":1220,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["token/types.ts",{"_index":370,"title":{},"body":{"interfaces/AuthorizationTokenValidityPeriod.html":{},"coverage.html":{}}}],["tort",{"_index":1337,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":93,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/SecuritySmsResolver.html":{},"classes/StringFilter.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":64,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":343,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["types",{"_index":322,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["uid",{"_index":858,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["unauthorized",{"_index":155,"title":{},"body":{"guards/AuthorizationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":223,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{}}}],["union",{"_index":470,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":380,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/MomentResolver.html":{},"classes/MomentWhereUniqueInput.html":{},"classes/UserResolver.html":{},"miscellaneous/variables.html":{}}}],["unique.input",{"_index":543,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentResolver.html":{}}}],["unique.input.ts",{"_index":623,"title":{},"body":{"classes/MomentWhereUniqueInput.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{}}}],["unit",{"_index":332,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"miscellaneous/variables.html":{}}}],["unittype",{"_index":372,"title":{},"body":{"interfaces/AuthorizationTokenValidityPeriod.html":{}}}],["unix",{"_index":935,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["unknown",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update",{"_index":363,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{}}}],["update.input",{"_index":954,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{}}}],["update.input.ts",{"_index":1047,"title":{},"body":{"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"coverage.html":{}}}],["update.input.ts:25",{"_index":1129,"title":{},"body":{"classes/UserUpdateInput.html":{}}}],["updatecodetoused",{"_index":685,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["updatecodetoused(security",{"_index":701,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["updated",{"_index":999,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["updatedat",{"_index":993,"title":{},"body":{"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileUpdateInput.html":{}}}],["updateviewer",{"_index":1057,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateviewer(context",{"_index":1067,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateviewerargs",{"_index":947,"title":{"classes/UpdateViewerArgs.html":{}},"body":{"classes/UpdateViewerArgs.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["updateviewerprofile",{"_index":1025,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["updateviewerprofile(context",{"_index":1029,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["upload",{"_index":817,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["url",{"_index":639,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":1275,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":704,"title":{},"body":{"injectables/SecuritySmsService.html":{},"classes/UserResolver.html":{},"license.html":{}}}],["usedat",{"_index":739,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["usefactory(prisma",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":70,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["useguards(authorizationguard",{"_index":90,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["user",{"_index":166,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/MomentEntity.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user(token",{"_index":234,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["user(where",{"_index":1072,"title":{},"body":{"classes/UserResolver.html":{}}}],["user.'})@authorizationwith",{"_index":1075,"title":{},"body":{"classes/UserResolver.html":{}}}],["user.id",{"_index":344,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{}}}],["user.password",{"_index":1094,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["user.phone",{"_index":1111,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["user.resolver",{"_index":984,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":985,"title":{},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{}}}],["user/user.module",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["user?.password",{"_index":1123,"title":{},"body":{"injectables/UserService.html":{}}}],["user_email_field_existed",{"_index":1079,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_login_field_existed",{"_index":1080,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_not_found",{"_index":243,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_not_set_phone",{"_index":675,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_phone_field_existed",{"_index":1081,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userentity",{"_index":209,"title":{"classes/UserEntity.html":{}},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentEntity.html":{},"classes/MomentResolver.html":{},"classes/UserEntity.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{}}}],["userid",{"_index":190,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{}}}],["usermodule",{"_index":17,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userorderbyinput",{"_index":572,"title":{"classes/UserOrderByInput.html":{}},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{},"coverage.html":{}}}],["userprofile",{"_index":971,"title":{},"body":{"classes/UserEntity.html":{},"injectables/UserProfileService.html":{}}}],["userprofileentity",{"_index":973,"title":{"classes/UserProfileEntity.html":{}},"body":{"classes/UserEntity.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["userprofilemodule",{"_index":979,"title":{"modules/UserProfileModule.html":{}},"body":{"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["userprofileorderbyinput",{"_index":986,"title":{"classes/UserProfileOrderByInput.html":{}},"body":{"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{},"coverage.html":{}}}],["userprofilerelationfilter",{"_index":1019,"title":{"classes/UserProfileRelationFilter.html":{}},"body":{"classes/UserProfileRelationFilter.html":{},"classes/UserWhereInput.html":{},"coverage.html":{}}}],["userprofileresolver",{"_index":1008,"title":{"classes/UserProfileResolver.html":{}},"body":{"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"coverage.html":{}}}],["userprofileservice",{"_index":1006,"title":{"injectables/UserProfileService.html":{}},"body":{"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"coverage.html":{},"overview.html":{}}}],["userprofileupdateinput",{"_index":1030,"title":{"classes/UserProfileUpdateInput.html":{}},"body":{"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"coverage.html":{}}}],["userprofilewhereinput",{"_index":1021,"title":{"classes/UserProfileWhereInput.html":{}},"body":{"classes/UserProfileRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"coverage.html":{}}}],["userrelationfilter",{"_index":617,"title":{"classes/UserRelationFilter.html":{}},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"coverage.html":{}}}],["userresolver",{"_index":983,"title":{"classes/UserResolver.html":{}},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["users",{"_index":1106,"title":{},"body":{"classes/UserResolver.html":{}}}],["usersecuritycomparetype",{"_index":249,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["usersecuritycomparetype.password",{"_index":1125,"title":{},"body":{"injectables/UserService.html":{}}}],["usersecuritycomparetype.sms_code",{"_index":265,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":292,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthorizationTokenService.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userupdateinput",{"_index":951,"title":{"classes/UserUpdateInput.html":{}},"body":{"classes/UpdateViewerArgs.html":{},"classes/UserUpdateInput.html":{},"coverage.html":{}}}],["userwhereinput",{"_index":1052,"title":{"classes/UserWhereInput.html":{}},"body":{"classes/UserRelationFilter.html":{},"classes/UserWhereInput.html":{},"coverage.html":{}}}],["userwhereuniqueinput",{"_index":378,"title":{"classes/UserWhereUniqueInput.html":{}},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/UserResolver.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{}}}],["validate",{"_index":76,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["validity",{"_index":305,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":328,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/MomentFindFirstArgs.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value?.type",{"_index":474,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1356,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veriables",{"_index":698,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["verification",{"_index":1110,"title":{},"body":{"classes/UserResolver.html":{}}}],["verified",{"_index":175,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["version",{"_index":866,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["video",{"_index":453,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["viewer",{"_index":202,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/SecuritySmsResolver.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{}}}],["viewer'})@authorizationwith",{"_index":1068,"title":{},"body":{"classes/UserResolver.html":{}}}],["viewer(@context",{"_index":1097,"title":{},"body":{"classes/UserResolver.html":{}}}],["viewer(context",{"_index":1074,"title":{},"body":{"classes/UserResolver.html":{}}}],["viewer.args",{"_index":1083,"title":{},"body":{"classes/UserResolver.html":{}}}],["viewer.args.ts",{"_index":949,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"coverage.html":{}}}],["viewer.args.ts:20",{"_index":952,"title":{},"body":{"classes/UpdateViewerArgs.html":{}}}],["viewer.args.ts:29",{"_index":953,"title":{},"body":{"classes/UpdateViewerArgs.html":{}}}],["warranties",{"_index":1306,"title":{},"body":{"license.html":{}}}],["wav",{"_index":825,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["way",{"_index":1341,"title":{},"body":{"license.html":{}}}],["where.input",{"_index":544,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentListRelationFilter.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserRelationFilter.html":{}}}],["where.input.ts",{"_index":609,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{},"coverage.html":{}}}],["where.input.ts:10",{"_index":610,"title":{},"body":{"classes/MomentWhereInput.html":{}}}],["where.input.ts:13",{"_index":616,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["where.input.ts:16",{"_index":615,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["where.input.ts:19",{"_index":1051,"title":{},"body":{"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["where.input.ts:22",{"_index":614,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["where.input.ts:25",{"_index":620,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{}}}],["where.input.ts:28",{"_index":612,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["where.input.ts:31",{"_index":1131,"title":{},"body":{"classes/UserWhereInput.html":{}}}],["where.input.ts:34",{"_index":613,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{}}}],["where.input.ts:37",{"_index":1050,"title":{},"body":{"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["where.input.ts:40",{"_index":619,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{}}}],["where.input.ts:43",{"_index":1049,"title":{},"body":{"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["where.input.ts:46",{"_index":618,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{}}}],["where.input.ts:49",{"_index":1134,"title":{},"body":{"classes/UserWhereInput.html":{}}}],["where.input.ts:55",{"_index":1132,"title":{},"body":{"classes/UserWhereInput.html":{}}}],["where.phone",{"_index":266,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["whether",{"_index":1105,"title":{},"body":{"classes/UserResolver.html":{},"license.html":{}}}],["without",{"_index":94,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["write",{"_index":811,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"index.html":{}}}],["written",{"_index":1261,"title":{},"body":{"index.html":{},"license.html":{}}}],["yes",{"_index":414,"title":{},"body":{"classes/ExecutionContext.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zero",{"_index":588,"title":{},"body":{"classes/MomentResolver.html":{}}}],["zoom",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthorizationTokenModule\n\nAuthorizationTokenModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorizationTokenModule->AppModule\n\n\n\n\n\nMomentModule\n\nMomentModule\n\nAppModule -->\n\nMomentModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSecurityModule\n\nSecurityModule\n\nAppModule -->\n\nSecurityModule->AppModule\n\n\n\n\n\nTencentCloudModule\n\nTencentCloudModule\n\nAppModule -->\n\nTencentCloudModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Root app module.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthorizationTokenModule\n                        \n                        \n                            MomentModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SecurityModule\n                        \n                        \n                            TencentCloudModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from './prisma';\nimport { SecurityModule } from './security/security.module';\nimport { AuthorizationTokenModule } from './authorization-token/authorization-token.module';\nimport { UserModule } from './user/user.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AuthorizationGuard } from './authorization.guard';\nimport { TencentCloudModule } from './tencent-cloud';\nimport { MomentModule } from './moment/moment.module';\nimport { GraphQLModule } from './graphql';\n\n/**\n * Root app module.\n */\n@Module({\n  imports: [\n    PrismaModule,\n    GraphQLModule,\n    AuthorizationTokenModule,\n    UserModule,\n    SecurityModule,\n    TencentCloudModule,\n    MomentModule,\n  ],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: AuthorizationGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthDecoratorOptions.html":{"url":"interfaces/AuthDecoratorOptions.html","title":"interface - AuthDecoratorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthDecoratorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization.decorator.ts\n        \n\n            \n                Description\n            \n            \n                Auth Decorator Options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        hasAuthorization\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasAuthorization\n                                    \n                                \n                                \n                                    \n                                        hasAuthorization:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Has authorization token\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         HasTokenExpiredType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HasTokenExpiredType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Has authorization token type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { applyDecorators, SetMetadata, UseGuards } from '@nestjs/common';\nimport {\n  AUTH_METADATA_HAS_AUTHORIZATION,\n  AUTH_METADATA_HAS_AUTHORIZATION_TYPE,\n} from './authorization-token/constants';\nimport { HasTokenExpiredType } from './authorization-token/enums';\nimport { AuthorizationGuard } from './authorization.guard';\n\n/**\n * Auth Decorator Options.\n */\nexport interface AuthDecoratorOptions {\n  /**\n   * Has authorization token\n   */\n  hasAuthorization?: boolean;\n\n  /**\n   * Has authorization token type.\n   */\n  type?: HasTokenExpiredType;\n}\n\n/**\n * Need validate HTTP endpoint `Authorization` token decorator.\n * @param param validate HTTP endpoit `Authorization` token options.\n * @param param.hasAuthorization Has need validate\n * @param param.type validate token type.\n */\nexport function Authorization(options?: AuthDecoratorOptions) {\n  return applyDecorators(\n    SetMetadata(AUTH_METADATA_HAS_AUTHORIZATION, options?.hasAuthorization),\n    SetMetadata(\n      AUTH_METADATA_HAS_AUTHORIZATION_TYPE,\n      options?.type || HasTokenExpiredType.AUTH,\n    ),\n    UseGuards(AuthorizationGuard),\n  );\n}\n\n/**\n * Http auth validate token.\n */\nexport const AuthorizationWith = () =>\n  Authorization({\n    hasAuthorization: true,\n    type: HasTokenExpiredType.AUTH,\n  });\n\n/**\n * Http auth, without validate token.\n */\nexport const AuthorizationWithout = () =>\n  Authorization({\n    hasAuthorization: false,\n    type: HasTokenExpiredType.AUTH,\n  });\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthorizationGuard.html":{"url":"guards/AuthorizationGuard.html","title":"guard - AuthorizationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthorizationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/authorization.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Authorization guard.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                canActivelyTokenHandler\n                            \n                            \n                                getHasAuthorization\n                            \n                            \n                                getHasAuthorizationType\n                            \n                            \n                                    Async\n                                initializeContext\n                            \n                            \n                                resolveContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, authorizationTokenService: AuthorizationTokenService, prismaClient: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/authorization.guard.ts:19\n                            \n                        \n\n                \n                    \n                            Create Authorization guard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                NestJS core reflector.\n\n                                                        \n                                                \n                                                \n                                                        authorizationTokenService\n                                                  \n                                                        \n                                                                        AuthorizationTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Authorization token service.\n\n                                                        \n                                                \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma Client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:101\n                \n            \n\n\n            \n                \n                    Can activate guard.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NestJS execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivelyTokenHandler\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivelyTokenHandler(context: ExecutionContext, type: HasTokenExpiredType)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:71\n                \n            \n\n\n            \n                \n                    Can activel token handler.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NestJS execution context\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                HasTokenExpiredType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token validate type.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHasAuthorization\n                        \n                        \n                    \n                \n            \n            \n                \ngetHasAuthorization(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:48\n                \n            \n\n\n            \n                \n                    Get token has need validate.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NextJS execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHasAuthorizationType\n                        \n                        \n                    \n                \n            \n            \n                \ngetHasAuthorizationType(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:59\n                \n            \n\n\n            \n                \n                    Get token validate type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NestJS execution context\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            initializeContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeContext(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:88\n                \n            \n\n\n            \n                \n                    Initialzd Socfony execution context.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NestJS execution context\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveContext\n                        \n                        \n                    \n                \n            \n            \n                \nresolveContext(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:36\n                \n            \n\n\n            \n                \n                    Resolver context.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NestJS execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IContext\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { GqlContextType, GqlExecutionContext } from '@nestjs/graphql';\nimport { PrismaClient } from '@prisma/client';\nimport { Request } from 'express';\nimport { AuthorizationTokenService } from './authorization-token/authorization-token.service';\nimport {\n  AUTH_METADATA_HAS_AUTHORIZATION,\n  AUTH_METADATA_HAS_AUTHORIZATION_TYPE,\n} from './authorization-token/constants';\nimport { HasTokenExpiredType } from './authorization-token/enums';\nimport { UNAUTHORIZED } from './constants';\nimport { ExecutionContext as IContext } from './execution-context';\n\n/**\n * Authorization guard.\n */\n@Injectable()\nexport class AuthorizationGuard implements CanActivate {\n  /**\n   * Create Authorization guard.\n   * @param reflector NestJS core reflector.\n   * @param authorizationTokenService Authorization token service.\n   * @param prismaClient Prisma Client.\n   */\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly authorizationTokenService: AuthorizationTokenService,\n    private readonly prismaClient: PrismaClient,\n  ) {}\n\n  /**\n   * Resolver context.\n   * @param context NestJS execution context.\n   */\n  resolveContext(context: ExecutionContext): IContext {\n    if (context.getType() === 'graphql') {\n      return GqlExecutionContext.create(context).getContext();\n    }\n\n    return context.switchToHttp().getRequest().context;\n  }\n\n  /**\n   * Get token has need validate.\n   * @param context NextJS execution context.\n   */\n  getHasAuthorization(context: ExecutionContext) {\n    return this.reflector.get(\n      AUTH_METADATA_HAS_AUTHORIZATION,\n      context.getHandler(),\n    );\n  }\n\n  /**\n   * Get token validate type.\n   * @param context NestJS execution context\n   */\n  getHasAuthorizationType(context: ExecutionContext) {\n    return this.reflector.get(\n      AUTH_METADATA_HAS_AUTHORIZATION_TYPE,\n      context.getHandler(),\n    );\n  }\n\n  /**\n   * Can activel token handler.\n   * @param context NestJS execution context\n   * @param type Token validate type.\n   */\n  canActivelyTokenHandler(\n    context: ExecutionContext,\n    type: HasTokenExpiredType,\n  ): boolean {\n    const { authorizationToken, user } = this.resolveContext(context);\n    const has = !this.authorizationTokenService.hasTokenExpired(\n      authorizationToken,\n      type,\n    );\n\n    return user && has;\n  }\n\n  /**\n   * Initialzd Socfony execution context.\n   * @param context NestJS execution context\n   */\n  async initializeContext(context: ExecutionContext) {\n    if (context.getType() === 'http') {\n      return await IContext.create(\n        this.prismaClient,\n        context.switchToHttp().getRequest(),\n      );\n    }\n  }\n\n  /**\n   * Can activate guard.\n   * @param context NestJS execution context.\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    await this.initializeContext(context);\n\n    // If Don't validate or verified\n    if (!this.getHasAuthorization(context)) return true;\n\n    // get `Authorization` token validate type\n    const type = this.getHasAuthorizationType(context);\n\n    if (\n      !this.canActivelyTokenHandler(context, type || HasTokenExpiredType.AUTH)\n    ) {\n      throw new Error(UNAUTHORIZED);\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthorizationTokenEntity.html":{"url":"classes/AuthorizationTokenEntity.html","title":"class - AuthorizationTokenEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthorizationTokenEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/entities/authorization-token.entity.ts\n        \n\n            \n                Description\n            \n            \n                HTTP endpoint authorization entity.\n\n            \n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expiredAt\n                            \n                            \n                                refreshExpiredAt\n                            \n                            \n                                token\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiredAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Token expired date'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:47\n                            \n                        \n\n                \n                    \n                        Token expired date.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshExpiredAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Token on refresh expired date'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:55\n                            \n                        \n\n                \n                    \n                        Token on refresh expired date.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User API endpoit authorization token.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:39\n                            \n                        \n\n                \n                    \n                        User API endpoit authorization token.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Logged Viewer entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:31\n                            \n                        \n\n                \n                    \n                        Logged User\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Login user ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:23\n                            \n                        \n\n                \n                    \n                        Logged user id.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ID, ObjectType } from '@nestjs/graphql';\nimport { Prisma, User } from '@prisma/client';\nimport { UserEntity } from 'src/user/entities/user.entity';\n/**\n * HTTP endpoint authorization entity.\n */\n@ObjectType({\n  description: 'HTTP endpoint authorization entity.',\n})\nexport class AuthorizationTokenEntity\n  implements\n    Prisma.AuthorizationTokenGetPayload {\n  /**\n   * Logged user id.\n   */\n  @Field((type) => ID, {\n    description: 'Login user ID',\n  })\n  userId: string;\n\n  /**\n   * Logged User\n   */\n  @Field((type) => UserEntity, {\n    description: 'Logged Viewer entity',\n  })\n  user: User;\n\n  /**\n   * User API endpoit authorization token.\n   */\n  @Field((type) => String, {\n    description: 'User API endpoit authorization token.',\n  })\n  token: string;\n\n  /**\n   * Token expired date.\n   */\n  @Field((type) => Date, {\n    description: 'Token expired date',\n  })\n  expiredAt: Date;\n\n  /**\n   * Token on refresh expired date.\n   */\n  @Field((type) => Date, {\n    description: 'Token on refresh expired date',\n  })\n  refreshExpiredAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthorizationTokenEntityResolver.html":{"url":"classes/AuthorizationTokenEntityResolver.html","title":"class - AuthorizationTokenEntityResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthorizationTokenEntityResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/authorization-token.resolver.ts\n        \n\n            \n                Description\n            \n            \n                AuthorizationTokenEntity resolver.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorizationToken\n                            \n                            \n                                    Async\n                                createAuthorizationToken\n                            \n                            \n                                refreshAuthorizationToken\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authorizationTokenService: AuthorizationTokenService, prisma: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/authorization-token/authorization-token.resolver.ts:29\n                            \n                        \n\n                \n                    \n                            Create Authorization resolver.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authorizationTokenService\n                                                  \n                                                        \n                                                                        AuthorizationTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Authorization token service.\n\n                                                        \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \nauthorizationToken(context: ExecutionContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {description: 'Query HTTP endpoint AuthorizationTokenEntity'})@Authorization({hasAuthorization: true, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/authorization-token/authorization-token.resolver.ts:72\n                \n            \n\n\n            \n                \n                    Query HTTP endpoint AuthorizationTokenEntity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        App runner execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAuthorizationToken(args: CreateAuthorizationTokenArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create AuthorizationTokenEntity'})\n                \n            \n\n            \n                \n                    Defined in src/authorization-token/authorization-token.resolver.ts:83\n                \n            \n\n\n            \n                \n                    Create AuthorizationTokenEntity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                CreateAuthorizationTokenArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Create AuthorizationTokenEntity args.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshAuthorizationToken(context: ExecutionContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Refresh HTTP endpoint authorization token entity.'})@Authorization({hasAuthorization: true, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/authorization-token/authorization-token.resolver.ts:127\n                \n            \n\n\n            \n                \n                    Refresh HTTP endpoint authorization token entity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            user\n                        \n                        \n                    \n                \n            \n            \n                \nuser(token: Prisma.AuthorizationTokenGetPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/authorization-token/authorization-token.resolver.ts:45\n                \n            \n\n\n            \n                \n                    Resolve AuthorizationTokenEntity user field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                Prisma.AuthorizationTokenGetPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HTTP endpoint AuthorizationToken\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Args,\n  Mutation,\n  Parent,\n  Query,\n  ResolveField,\n  Resolver,\n} from '@nestjs/graphql';\nimport { Prisma, PrismaClient } from '@prisma/client';\nimport { Authorization } from 'src/authorization.decorator';\nimport {\n  AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE,\n  USER_NOT_FOUND,\n} from 'src/constants';\nimport { Context } from 'src/context.decorator';\nimport { ExecutionContext } from 'src/execution-context';\nimport { IDHelper } from 'src/helper';\nimport { UserEntity } from 'src/user/entities/user.entity';\nimport { UserSecurityCompareType } from 'src/user/enums';\nimport { AuthorizationTokenService } from './authorization-token.service';\nimport { CreateAuthorizationTokenArgs } from './dto/create-authorization-token.args';\nimport { AuthorizationTokenEntity } from './entities/authorization-token.entity';\nimport { HasTokenExpiredType } from './enums';\n\n/**\n * AuthorizationTokenEntity resolver.\n */\n@Resolver(() => AuthorizationTokenEntity)\nexport class AuthorizationTokenEntityResolver {\n  /**\n   * Create Authorization resolver.\n   * @param authorizationTokenService Authorization token service.\n   * @param prisma Prisma client.\n   */\n  constructor(\n    private readonly authorizationTokenService: AuthorizationTokenService,\n    private readonly prisma: PrismaClient,\n  ) {}\n\n  /**\n   * Resolve AuthorizationTokenEntity user field.\n   * @param token HTTP endpoint AuthorizationToken\n   */\n  @ResolveField(() => UserEntity)\n  user(\n    @Parent()\n    token: Prisma.AuthorizationTokenGetPayload,\n  ) {\n    const { user } = token;\n    if (user) {\n      return user;\n    }\n\n    return this.prisma.user.findUnique({\n      where: { id: token.userId },\n    });\n  }\n\n  /**\n   * Query HTTP endpoint AuthorizationTokenEntity\n   * @param context App runner execution context.\n   */\n  @Query(() => AuthorizationTokenEntity, {\n    description: 'Query HTTP endpoint AuthorizationTokenEntity',\n  })\n  @Authorization({\n    hasAuthorization: true,\n    type: HasTokenExpiredType.AUTH,\n  })\n  authorizationToken(@Context() context: ExecutionContext) {\n    return context.authorizationToken;\n  }\n\n  /**\n   * Create AuthorizationTokenEntity\n   * @param args Create `AuthorizationTokenEntity` args.\n   */\n  @Mutation(() => AuthorizationTokenEntity, {\n    description: 'Create AuthorizationTokenEntity',\n  })\n  async createAuthorizationToken(\n    @Args({\n      type: () => CreateAuthorizationTokenArgs,\n    })\n    args: CreateAuthorizationTokenArgs,\n  ) {\n    const { type, user: where, security } = args;\n    if (Object.keys(where).length > 1) {\n      throw new Error(AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE);\n    }\n\n    let user = await this.prisma.user.findUnique({\n      where,\n      rejectOnNotFound: false,\n    });\n    if (type === UserSecurityCompareType.SMS_CODE && !user && where.phone) {\n      user = await this.prisma.user.create({\n        data: {\n          id: IDHelper.id(64),\n          phone: where.phone,\n        },\n      });\n    } else if (!user) {\n      throw new Error(USER_NOT_FOUND);\n    }\n\n    return this.authorizationTokenService.createTokenWithSecurity(\n      user,\n      type,\n      security,\n    );\n  }\n\n  /**\n   * Refresh HTTP endpoint authorization token entity.\n   * @param client token query Prisma client.\n   */\n  @Mutation(() => AuthorizationTokenEntity, {\n    description: 'Refresh HTTP endpoint authorization token entity.',\n  })\n  @Authorization({\n    hasAuthorization: true,\n    type: HasTokenExpiredType.REFRESH,\n  })\n  refreshAuthorizationToken(@Context() context: ExecutionContext) {\n    return this.authorizationTokenService.refreshAuthorizationToken(\n      context.authorizationToken,\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationTokenModule.html":{"url":"modules/AuthorizationTokenModule.html","title":"module - AuthorizationTokenModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationTokenModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorizationTokenModule\n\n\n\ncluster_AuthorizationTokenModule_imports\n\n\n\ncluster_AuthorizationTokenModule_providers\n\n\n\ncluster_AuthorizationTokenModule_exports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthorizationTokenModule\n\nAuthorizationTokenModule\n\nAuthorizationTokenModule -->\n\nPrismaModule->AuthorizationTokenModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthorizationTokenModule -->\n\nUserModule->AuthorizationTokenModule\n\n\n\n\n\nAuthorizationTokenService \n\nAuthorizationTokenService \n\nAuthorizationTokenService  -->\n\nAuthorizationTokenModule->AuthorizationTokenService \n\n\n\n\n\nAuthorizationTokenService\n\nAuthorizationTokenService\n\nAuthorizationTokenModule -->\n\nAuthorizationTokenService->AuthorizationTokenModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/authorization-token/authorization-token.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Authorization token module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationTokenService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationTokenService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { UserModule } from 'src/user/user.module';\nimport { AuthorizationTokenEntityResolver } from './authorization-token.resolver';\nimport { AuthorizationTokenService } from './authorization-token.service';\n\n/**\n * Authorization token module.\n */\n@Global()\n@Module({\n  imports: [PrismaModule, UserModule],\n  providers: [AuthorizationTokenService, AuthorizationTokenEntityResolver],\n  exports: [AuthorizationTokenService],\n})\nexport class AuthorizationTokenModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationTokenService.html":{"url":"injectables/AuthorizationTokenService.html","title":"injectable - AuthorizationTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/authorization-token.service.ts\n        \n\n            \n                Description\n            \n            \n                Authorization token service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTokenWithSecurity\n                            \n                            \n                                    Async\n                                createUserAuthorizationToken\n                            \n                            \n                                    Async\n                                getTokenExpiredIn\n                            \n                            \n                                hasTokenExpired\n                            \n                            \n                                    Async\n                                refreshAuthorizationToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaClient, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/authorization-token/authorization-token.service.ts:25\n                            \n                        \n\n                \n                    \n                            Create Authotization token service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTokenWithSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTokenWithSecurity(user: User, type: UserSecurityCompareType, security: string)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:121\n                \n            \n\n\n            \n                \n                    Create token with security.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Creathe token with user.\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                UserSecurityCompareType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        creat compare security type.\n\n                                    \n                                \n                                \n                                    security\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        security object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUserAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserAuthorizationToken(user: User | string)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:86\n                \n            \n\n\n            \n                \n                    Create authorization token object for user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Create authoprization token object user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTokenExpiredIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokenExpiredIn()\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:39\n                \n            \n\n\n            \n                \n                    Get token expired in validity period.\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasTokenExpired\n                        \n                        \n                    \n                \n            \n            \n                \nhasTokenExpired(token: AuthorizationToken, type: HasTokenExpiredType)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:69\n                \n            \n\n\n            \n                \n                    Has authorization token expired.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                AuthorizationToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    type\n                                    \n                                                HasTokenExpiredType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Validate type.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            refreshAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshAuthorizationToken(authorizationToken: AuthorizationToken)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:145\n                \n            \n\n\n            \n                \n                    Refresh authorization token object to database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    authorizationToken\n                                    \n                                                AuthorizationToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Await refresh authorization token object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthorizationToken, PrismaClient, User } from '@prisma/client';\nimport * as dayjs from 'dayjs';\nimport {\n  AUTHORIZATION_TOKEN_NOT_FOUND,\n  SECURITY_COMPARE_FAILED,\n} from 'src/constants';\nimport { IDHelper } from 'src/helper';\nimport { UserService } from 'src/user/user.service';\nimport { UserSecurityCompareType } from 'src/user/enums';\nimport {\n  AUTH_TOKEN_DEFAULT_EXPIRED_IN,\n  AUTH_TOKEN_DEFAULT_EXPIRED_UNIT,\n  AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_IN,\n  AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_UNIT,\n  AUTH_TOKEN_VVALIDITY_PERIOD_KEY,\n} from './constants';\nimport { HasTokenExpiredType } from './enums';\nimport { AuthorizationTokenValidityPeriod } from './types';\n\n/**\n * Authorization token service.\n */\n@Injectable()\nexport class AuthorizationTokenService {\n  /**\n   * Create Authotization token service.\n   * @param prisma Prisma client.\n   * @param userService User service.\n   */\n  constructor(\n    private readonly prisma: PrismaClient,\n    private readonly userService: UserService,\n  ) {}\n\n  /**\n   * Get token expired in validity period.\n   */\n  async getTokenExpiredIn(): Promise {\n    const setting = await this.prisma.setting.findUnique({\n      where: {\n        namespace_name: {\n          namespace: 'system',\n          name: AUTH_TOKEN_VVALIDITY_PERIOD_KEY,\n        },\n      },\n      rejectOnNotFound: false,\n    });\n    const { value = {} } = setting || {};\n    const { expiredIn = {}, refreshExpiredIn = {} } = value as any;\n\n    return {\n      expiredIn: {\n        value: expiredIn.value || AUTH_TOKEN_DEFAULT_EXPIRED_IN,\n        unit: expiredIn.unit || AUTH_TOKEN_DEFAULT_EXPIRED_UNIT,\n      },\n      refreshExpiredIn: {\n        value: refreshExpiredIn.value || AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_IN,\n        unit: refreshExpiredIn.unit || AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_UNIT,\n      },\n    };\n  }\n\n  /**\n   * Has authorization token expired.\n   * @param client `AuthotizationToken` query Prisma client.\n   * @param type Validate type.\n   */\n  hasTokenExpired(\n    token: AuthorizationToken,\n    type: HasTokenExpiredType,\n  ): boolean {\n    if (!token) return true;\n    const expiredAt =\n      type === HasTokenExpiredType.AUTH\n        ? token.expiredAt\n        : token.refreshExpiredAt;\n\n    return !expiredAt || expiredAt.getTime()  {\n    const setting = await this.getTokenExpiredIn();\n    const [token] = await this.prisma.$transaction([\n      this.prisma.authorizationToken.create({\n        data: {\n          userId: typeof user === 'string' ? user : user.id,\n          token: IDHelper.id(128),\n          expiredAt: dayjs()\n            .add(setting.expiredIn.value, setting.expiredIn.unit)\n            .toDate(),\n          refreshExpiredAt: dayjs()\n            .add(setting.refreshExpiredIn.value, setting.refreshExpiredIn.unit)\n            .toDate(),\n        },\n      }),\n      this.prisma.authorizationToken.deleteMany({\n        where: {\n          refreshExpiredAt: {\n            lte: dayjs().add(10, 'minutes').toDate(),\n          },\n        },\n      }),\n    ]);\n\n    return token;\n  }\n\n  /**\n   * Create token with security.\n   * @param user Creathe token with user.\n   * @param type creat compare security type.\n   * @param security security object.\n   */\n  async createTokenWithSecurity(\n    user: User,\n    type: UserSecurityCompareType,\n    security: string,\n  ) {\n    const compared = await this.userService.compareSecurity(\n      user,\n      type,\n      security,\n    );\n    if (compared) {\n      if (compared instanceof Function) {\n        compared();\n      }\n      return this.createUserAuthorizationToken(user);\n    }\n\n    throw new Error(SECURITY_COMPARE_FAILED);\n  }\n\n  /**\n   * Refresh authorization token object to database.\n   * @param authorizationToken Await refresh authorization token object.\n   */\n  async refreshAuthorizationToken(\n    authorizationToken: AuthorizationToken,\n  ): Promise {\n    const setting = await this.getTokenExpiredIn();\n    // If authorization token not found, throw `not found` error.\n    if (!authorizationToken) {\n      throw new Error(AUTHORIZATION_TOKEN_NOT_FOUND);\n\n      // If token is expired, update to new token.\n    } else if (authorizationToken.expiredAt.getTime()  fiveMinutesDate.getTime()) {\n      await this.prisma.authorizationToken.update({\n        where: { token: authorizationToken.token },\n        data: {\n          expiredAt: fiveMinutesDate,\n          refreshExpiredAt: new Date(),\n        },\n      });\n    }\n\n    return this.createUserAuthorizationToken(authorizationToken.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthorizationTokenValidityPeriod.html":{"url":"interfaces/AuthorizationTokenValidityPeriod.html","title":"interface - AuthorizationTokenValidityPeriod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthorizationTokenValidityPeriod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/types.ts\n        \n\n            \n                Description\n            \n            \n                认证Token有效期\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expiredIn\n                                \n                                \n                                        refreshExpiredIn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expiredIn\n                                    \n                                \n                                \n                                    \n                                        expiredIn:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    token 生命有效期\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiredIn\n                                    \n                                \n                                \n                                    \n                                        refreshExpiredIn:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Token 用作刷新生命周期\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { UnitType } from 'dayjs';\n\n/**\n * 认证Token有效期\n */\nexport interface AuthorizationTokenValidityPeriod {\n  /**\n   * token 生命有效期\n   */\n  expiredIn: {\n    value: number;\n    unit: UnitType;\n  };\n\n  /**\n   * Token 用作刷新生命周期\n   */\n  refreshExpiredIn: {\n    value: number;\n    unit: UnitType;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthorizationTokenArgs.html":{"url":"classes/CreateAuthorizationTokenArgs.html","title":"class - CreateAuthorizationTokenArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthorizationTokenArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/dto/create-authorization-token.args.ts\n        \n\n            \n                Description\n            \n            \n                Create authorization token args\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                security\n                            \n                            \n                                type\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            security\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Create AuthorizationToken security value'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/dto/create-authorization-token.args.ts:32\n                            \n                        \n\n                \n                    \n                        Create AuthorizationToken security value\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserSecurityCompareType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Create AuthorizationToken security type'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/dto/create-authorization-token.args.ts:24\n                            \n                        \n\n                \n                    \n                        Create AuthorizationToken security type\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserWhereUniqueInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User find where unique input'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/dto/create-authorization-token.args.ts:16\n                            \n                        \n\n                \n                    \n                        User find where unique input\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field } from '@nestjs/graphql';\nimport { UserWhereUniqueInput } from 'src/user/dto';\nimport { UserSecurityCompareType } from 'src/user/enums';\n\n/**\n * Create authorization token args\n */\n@ArgsType()\nexport class CreateAuthorizationTokenArgs {\n  /**\n   * User find where unique input\n   */\n  @Field(() => UserWhereUniqueInput, {\n    description: 'User find where unique input',\n  })\n  user: UserWhereUniqueInput;\n\n  /**\n   * Create AuthorizationToken security type\n   */\n  @Field(() => UserSecurityCompareType, {\n    description: 'Create AuthorizationToken security type',\n  })\n  type: UserSecurityCompareType;\n\n  /**\n   * Create AuthorizationToken security value\n   */\n  @Field(() => String, {\n    description: 'Create AuthorizationToken security value',\n  })\n  security: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateTimeFilter.html":{"url":"classes/DateTimeFilter.html","title":"class - DateTimeFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateTimeFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql/filters/date-time.filter.ts\n        \n\n            \n                Description\n            \n            \n                Date time filter\n\n            \n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                equals\n                            \n                            \n                                    Optional\n                                gt\n                            \n                            \n                                    Optional\n                                gte\n                            \n                            \n                                    Optional\n                                in\n                            \n                            \n                                    Optional\n                                lt\n                            \n                            \n                                    Optional\n                                lte\n                            \n                            \n                                    Optional\n                                not\n                            \n                            \n                                    Optional\n                                notIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            equals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Date equals', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/date-time.filter.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            gt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Date gt', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/date-time.filter.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            gte\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Date gte', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/date-time.filter.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Date in', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/date-time.filter.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Date lt', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/date-time.filter.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lte\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Date lte', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/date-time.filter.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            not\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DateTimeFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Date not', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/date-time.filter.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            notIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Date not in', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/date-time.filter.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, GraphQLISODateTime, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\n\n/**\n * Date time filter\n */\n@InputType({\n  description: 'Date time filter',\n})\nexport class DateTimeFilter implements Prisma.DateTimeFilter {\n  @Field(() => GraphQLISODateTime, {\n    description: 'Date equals',\n    nullable: true,\n  })\n  equals?: Date;\n\n  @Field(() => [GraphQLISODateTime], { description: 'Date in', nullable: true })\n  in?: Date[];\n\n  @Field(() => [GraphQLISODateTime], {\n    description: 'Date not in',\n    nullable: true,\n  })\n  notIn?: Date[];\n\n  @Field(() => GraphQLISODateTime, { description: 'Date lt', nullable: true })\n  lt?: Date;\n\n  @Field(() => GraphQLISODateTime, { description: 'Date lte', nullable: true })\n  lte?: Date;\n\n  @Field(() => GraphQLISODateTime, { description: 'Date gt', nullable: true })\n  gt?: Date;\n\n  @Field(() => GraphQLISODateTime, { description: 'Date gte', nullable: true })\n  gte?: Date;\n\n  @Field(() => DateTimeFilter, { description: 'Date not', nullable: true })\n  not?: DateTimeFilter;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExecutionContext.html":{"url":"classes/ExecutionContext.html","title":"class - ExecutionContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExecutionContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/execution-context.ts\n        \n\n            \n                Description\n            \n            \n                Socfony execution context.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                authorizationToken\n                            \n                            \n                                    Public\n                                request\n                            \n                            \n                                    Public\n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                create\n                            \n                            \n                                    Private\n                                    Static\n                                getAuthorizationToken\n                            \n                            \n                                    Private\n                                    Static\n                                getHttpAuthorization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor(request: Request, authorizationToken?: AuthorizationToken, user?: User)\n                    \n                \n                        \n                            \n                                Defined in src/execution-context.ts:7\n                            \n                        \n\n                \n                    \n                            Create a execution context.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Express request.\n\n                                                        \n                                                \n                                                \n                                                        authorizationToken\n                                                  \n                                                        \n                                                                        AuthorizationToken\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Authorization token\n\n                                                        \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    User\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                User.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            authorizationToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthorizationToken\n\n                        \n                    \n                        \n                            \n                                    Defined in src/execution-context.ts:16\n                            \n                        \n\n                \n                    \n                        Authorization token\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Request\n\n                        \n                    \n                        \n                            \n                                    Defined in src/execution-context.ts:15\n                            \n                        \n\n                \n                    \n                        Express request.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/execution-context.ts:17\n                            \n                        \n\n                \n                    \n                        User.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(prismaClient: PrismaClient, request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/execution-context.ts:24\n                \n            \n\n\n            \n                \n                    Create kernel context.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prismaClient\n                                    \n                                            PrismaClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Express request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthorizationToken(prismaClient: PrismaClient, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/execution-context.ts:73\n                \n            \n\n\n            \n                \n                    Get AuthorizationToken\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prismaClient\n                                    \n                                            PrismaClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token string.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getHttpAuthorization\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHttpAuthorization(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/execution-context.ts:54\n                \n            \n\n\n            \n                \n                    Get HTTP endpoint Authorization header value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Express request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request } from 'express';\nimport { AuthorizationToken, Prisma, PrismaClient, User } from '@prisma/client';\n\n/**\n * Socfony execution context.\n */\nexport class ExecutionContext {\n  /**\n   * Create a execution context.\n   * @param request Express request.\n   * @param authorizationToken Authorization token\n   * @param user User.\n   */\n  private constructor(\n    public request: Request,\n    public authorizationToken?: AuthorizationToken,\n    public user?: User,\n  ) {}\n\n  /**\n   * Create kernel context.\n   * @param request Express request.\n   */\n  static async create(\n    prismaClient: PrismaClient,\n    request: Request,\n  ): Promise {\n    const token = this.getHttpAuthorization(request);\n    if (\n      request.context &&\n      request.context.authorizationToken?.token === token\n    ) {\n      return request.context;\n    }\n\n    const authorizationToken = await this.getAuthorizationToken(\n      prismaClient,\n      token,\n    );\n    const context = new ExecutionContext(\n      request,\n      authorizationToken,\n      authorizationToken?.user,\n    );\n    context.request.context = request.context = context;\n\n    return context;\n  }\n\n  /**\n   * Get HTTP endpoint `Authorization` header value.\n   * @param request Express request.\n   */\n  private static getHttpAuthorization(request: Request): string {\n    const key = 'Authorization';\n    if (request.header instanceof Function) {\n      return request.header(key);\n    }\n\n    const headers = request.headers;\n    let token = headers[key.toLowerCase()];\n    if (!token || !token.length) {\n      token = headers[key];\n    }\n\n    return Array.isArray(token) ? token.pop() : token;\n  }\n\n  /**\n   * Get `AuthorizationToken`\n   * @param token Token string.\n   */\n  private static getAuthorizationToken(\n    prismaClient: PrismaClient,\n    token: string,\n  ): Promise> {\n    if (token)\n      return prismaClient.authorizationToken.findUnique({\n        where: { token: token },\n        include: { user: true },\n        rejectOnNotFound: false,\n      });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentAudioMedia.html":{"url":"classes/MomentAudioMedia.html","title":"class - MomentAudioMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentAudioMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/entities/media.entity.ts\n        \n\n            \n                Description\n            \n            \n                Audio media.\n\n            \n\n            \n                Extends\n            \n            \n                        MomentMediaCommon\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audio\n                            \n                            \n                                    Optional\n                                cover\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            audio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Audio path'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/media.entity.ts:78\n                            \n                        \n\n                \n                    \n                        Media video path.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Audio cover', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/media.entity.ts:72\n                            \n                        \n\n                \n                    \n                        Media cover path.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentMediaType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Media type.'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         MomentMediaCommon\n\n                                \n                            \n                        \n                            \n                                    Defined in         MomentMediaCommon:36\n\n                            \n                        \n\n                \n                    \n                        Media type.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  createUnionType,\n  Field,\n  InterfaceType,\n  ObjectType,\n  registerEnumType,\n} from '@nestjs/graphql';\nimport { MEDIA_TYPE_DONT_SUPPORTED } from 'src/constants';\n\n/**\n * Media type.\n */\nexport enum MomentMediaType {\n  VIDEO,\n  IMAGE,\n  AUDIO,\n}\nregisterEnumType(MomentMediaType, {\n  name: 'MomentMediaType',\n  description: 'Media type.',\n});\n\n/**\n * Media common.\n */\n@InterfaceType({\n  description: 'Media common',\n})\nexport class MomentMediaCommon {\n  /**\n   * Media type.\n   */\n  @Field(() => MomentMediaType, {\n    description: 'Media type.',\n  })\n  type: MomentMediaType;\n}\n\n/**\n * Video media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Video media',\n})\nexport class MomentVideoMedia extends MomentMediaCommon {\n  /**\n   * Media cover path.\n   */\n  @Field(() => String, { description: 'Video cover' })\n  cover: string;\n\n  /**\n   * Media video path.\n   */\n  @Field(() => String, { description: 'Video path' })\n  video: string;\n}\n\n/**\n * Audio media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Audio media.',\n})\nexport class MomentAudioMedia extends MomentMediaCommon {\n  /**\n   * Media cover path.\n   */\n  @Field(() => String, { description: 'Audio cover', nullable: true })\n  cover?: string;\n\n  /**\n   * Media video path.\n   */\n  @Field(() => String, { description: 'Audio path' })\n  audio: string;\n}\n\n/**\n * Image media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Image media.',\n})\nexport class MomentImageMedia extends MomentMediaCommon {\n  @Field(() => [String], { description: 'Images' })\n  images: string[];\n}\n\n/**\n * Moment media union type.\n */\nexport const MomentMedia = createUnionType({\n  name: 'MomentMedia',\n  types: () => [MomentAudioMedia, MomentImageMedia, MomentVideoMedia],\n  description: 'Moment media.',\n  resolveType(value: MomentMediaCommon) {\n    switch (value?.type) {\n      case MomentMediaType.AUDIO:\n        return MomentAudioMedia;\n      case MomentMediaType.IMAGE:\n        return MomentImageMedia;\n      case MomentMediaType.VIDEO:\n        return MomentVideoMedia;\n      default:\n        throw new Error(MEDIA_TYPE_DONT_SUPPORTED);\n    }\n  },\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentEntity.html":{"url":"classes/MomentEntity.html","title":"class - MomentEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/entities/moment.entity.ts\n        \n\n            \n                Description\n            \n            \n                Moment entity.\n\n            \n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                media\n                            \n                            \n                                owner\n                            \n                            \n                                ownerId\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Moment content'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/moment.entity.ts:35\n                            \n                        \n\n                \n                    \n                        Moment text content\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Moment created at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/moment.entity.ts:47\n                            \n                        \n\n                \n                    \n                        Moment created at\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Moment deleted at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/moment.entity.ts:53\n                            \n                        \n\n                \n                    \n                        Moment deleted at\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'The moment ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/moment.entity.ts:23\n                            \n                        \n\n                \n                    \n                        Moment ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            media\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.JsonValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Moment media'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/moment.entity.ts:41\n                            \n                        \n\n                \n                    \n                        Moment media\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'The moment owner'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/moment.entity.ts:65\n                            \n                        \n\n                \n                    \n                        Moment owner\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ownerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Moment owner ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/moment.entity.ts:59\n                            \n                        \n\n                \n                    \n                        Moment owner ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Moment title', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/moment.entity.ts:29\n                            \n                        \n\n                \n                    \n                        Moment title\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, GraphQLISODateTime, ID, ObjectType } from '@nestjs/graphql';\nimport { Prisma, User } from '@prisma/client';\nimport { UserEntity } from 'src/user/entities/user.entity';\nimport { MomentMedia } from './media.entity';\n\n/**\n * Moment entity.\n */\n@ObjectType({\n  description: 'Moment entity',\n})\nexport class MomentEntity\n  implements\n    Prisma.MomentGetPayload {\n  /**\n   * Moment ID\n   */\n  @Field(() => ID, { description: 'The moment ID' })\n  id: string;\n\n  /**\n   * Moment title\n   */\n  @Field(() => String, { description: 'Moment title', nullable: true })\n  title: string;\n\n  /**\n   * Moment text content\n   */\n  @Field(() => String, { description: 'Moment content' })\n  content: string;\n\n  /**\n   * Moment media\n   */\n  @Field(() => MomentMedia, { nullable: true, description: 'Moment media' })\n  media: Prisma.JsonValue;\n\n  /**\n   * Moment created at\n   */\n  @Field(() => GraphQLISODateTime, { description: 'Moment created at' })\n  createdAt: Date;\n\n  /**\n   * Moment deleted at\n   */\n  @Field(() => GraphQLISODateTime, { description: 'Moment deleted at' })\n  deletedAt: Date;\n\n  /**\n   * Moment owner ID\n   */\n  @Field(() => ID, { description: 'Moment owner ID' })\n  ownerId: string;\n\n  /**\n   * Moment owner\n   */\n  @Field(() => UserEntity, { description: 'The moment owner' })\n  owner: User;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentFindFirstArgs.html":{"url":"classes/MomentFindFirstArgs.html","title":"class - MomentFindFirstArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentFindFirstArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/dto/moment-find-first.args.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rejectOnNotFound\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rejectOnNotFound\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-find-first.args.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, OmitType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { MomentFindManyArgs } from './moment-find-many.args';\n\n@ArgsType()\nexport class MomentFindFirstArgs\n  extends OmitType(MomentFindManyArgs, ['skip', 'take'] as const, ArgsType)\n  implements Omit {\n  rejectOnNotFound: false = false;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentFindManyArgs.html":{"url":"classes/MomentFindManyArgs.html","title":"class - MomentFindManyArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentFindManyArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/dto/moment-find-many.args.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Pick\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                cursor\n                            \n                            \n                                    Optional\n                                distinct\n                            \n                            \n                                    Optional\n                                orderBy\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                    Optional\n                                take\n                            \n                            \n                                    Optional\n                                where\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cursor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentWhereUniqueInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Sets the position for listing Moments'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-find-many.args.ts:38\n                            \n                        \n\n                \n                    \n                        Sets the position for listing Moments.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            distinct\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.MomentScalarFieldEnum[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Sets the query distinct'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-find-many.args.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            orderBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentOrderByInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Determine the order of Moments to fetch.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-find-many.args.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Skip the first `n` Moments.', defaultValue: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-find-many.args.ts:58\n                            \n                        \n\n                \n                    \n                        Skip the first n Moments.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            take\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Take `±n` Moments from the position of the cursor.', defaultValue: 15})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-find-many.args.ts:48\n                            \n                        \n\n                \n                    \n                        Take ±n Moments from the position of the cursor.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            where\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentWhereInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Filter, which Moments to fetch.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-find-many.args.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field, Int, registerEnumType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { MomentOrderByInput } from './moment-order-by.input';\nimport { MomentWhereUniqueInput } from './moment-where-unique.input';\nimport { MomentWhereInput } from './moment-where.input';\n\nregisterEnumType(Prisma.MomentScalarFieldEnum, {\n  name: 'MomentScalarFieldEnum',\n  description: 'Moment scalar field enum.',\n});\n\n@ArgsType()\nexport class MomentFindManyArgs\n  implements\n    Pick {\n  @Field(() => MomentWhereInput, {\n    nullable: true,\n    description: 'Filter, which Moments to fetch.',\n  })\n  where?: MomentWhereInput;\n\n  @Field(() => [MomentOrderByInput], {\n    nullable: true,\n    description: 'Determine the order of Moments to fetch.',\n  })\n  orderBy?: MomentOrderByInput[];\n\n  /**\n   * Sets the position for listing Moments.\n   **/\n  @Field(() => MomentWhereUniqueInput, {\n    nullable: true,\n    description: 'Sets the position for listing Moments',\n  })\n  cursor?: MomentWhereUniqueInput;\n\n  /**\n   * Take `±n` Moments from the position of the cursor.\n   **/\n  @Field(() => Int, {\n    nullable: true,\n    description: 'Take `±n` Moments from the position of the cursor.',\n    defaultValue: 15,\n  })\n  take?: number;\n\n  /**\n   * Skip the first `n` Moments.\n   **/\n  @Field(() => Int, {\n    nullable: true,\n    description: 'Skip the first `n` Moments.',\n    defaultValue: 0,\n  })\n  skip?: number;\n\n  @Field(() => [Prisma.MomentScalarFieldEnum], {\n    nullable: true,\n    description: 'Sets the query distinct',\n  })\n  distinct?: Prisma.MomentScalarFieldEnum[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentImageMedia.html":{"url":"classes/MomentImageMedia.html","title":"class - MomentImageMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentImageMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/entities/media.entity.ts\n        \n\n            \n                Description\n            \n            \n                Image media.\n\n            \n\n            \n                Extends\n            \n            \n                        MomentMediaCommon\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                images\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            images\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Images'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/media.entity.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentMediaType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Media type.'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         MomentMediaCommon\n\n                                \n                            \n                        \n                            \n                                    Defined in         MomentMediaCommon:36\n\n                            \n                        \n\n                \n                    \n                        Media type.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  createUnionType,\n  Field,\n  InterfaceType,\n  ObjectType,\n  registerEnumType,\n} from '@nestjs/graphql';\nimport { MEDIA_TYPE_DONT_SUPPORTED } from 'src/constants';\n\n/**\n * Media type.\n */\nexport enum MomentMediaType {\n  VIDEO,\n  IMAGE,\n  AUDIO,\n}\nregisterEnumType(MomentMediaType, {\n  name: 'MomentMediaType',\n  description: 'Media type.',\n});\n\n/**\n * Media common.\n */\n@InterfaceType({\n  description: 'Media common',\n})\nexport class MomentMediaCommon {\n  /**\n   * Media type.\n   */\n  @Field(() => MomentMediaType, {\n    description: 'Media type.',\n  })\n  type: MomentMediaType;\n}\n\n/**\n * Video media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Video media',\n})\nexport class MomentVideoMedia extends MomentMediaCommon {\n  /**\n   * Media cover path.\n   */\n  @Field(() => String, { description: 'Video cover' })\n  cover: string;\n\n  /**\n   * Media video path.\n   */\n  @Field(() => String, { description: 'Video path' })\n  video: string;\n}\n\n/**\n * Audio media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Audio media.',\n})\nexport class MomentAudioMedia extends MomentMediaCommon {\n  /**\n   * Media cover path.\n   */\n  @Field(() => String, { description: 'Audio cover', nullable: true })\n  cover?: string;\n\n  /**\n   * Media video path.\n   */\n  @Field(() => String, { description: 'Audio path' })\n  audio: string;\n}\n\n/**\n * Image media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Image media.',\n})\nexport class MomentImageMedia extends MomentMediaCommon {\n  @Field(() => [String], { description: 'Images' })\n  images: string[];\n}\n\n/**\n * Moment media union type.\n */\nexport const MomentMedia = createUnionType({\n  name: 'MomentMedia',\n  types: () => [MomentAudioMedia, MomentImageMedia, MomentVideoMedia],\n  description: 'Moment media.',\n  resolveType(value: MomentMediaCommon) {\n    switch (value?.type) {\n      case MomentMediaType.AUDIO:\n        return MomentAudioMedia;\n      case MomentMediaType.IMAGE:\n        return MomentImageMedia;\n      case MomentMediaType.VIDEO:\n        return MomentVideoMedia;\n      default:\n        throw new Error(MEDIA_TYPE_DONT_SUPPORTED);\n    }\n  },\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentListRelationFilter.html":{"url":"classes/MomentListRelationFilter.html","title":"class - MomentListRelationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentListRelationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/dto/moment-list-relation.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                every\n                            \n                            \n                                    Optional\n                                none\n                            \n                            \n                                    Optional\n                                some\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            every\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentWhereInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Moment list relation filter every where input.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-list-relation.filter.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            none\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentWhereInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Moment list relation filter none where input.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-list-relation.filter.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            some\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentWhereInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Moment list relation filter some where input.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-list-relation.filter.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { MomentWhereInput } from './moment-where.input';\n\n@InputType({ description: 'Moment list relation filter' })\nexport class MomentListRelationFilter\n  implements Prisma.MomentListRelationFilter {\n  @Field(() => MomentWhereInput, {\n    nullable: true,\n    description: 'Moment list relation filter every where input.',\n  })\n  every?: MomentWhereInput;\n\n  @Field(() => MomentWhereInput, {\n    nullable: true,\n    description: 'Moment list relation filter some where input.',\n  })\n  some?: MomentWhereInput;\n\n  @Field(() => MomentWhereInput, {\n    nullable: true,\n    description: 'Moment list relation filter none where input.',\n  })\n  none?: MomentWhereInput;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentMediaCommon.html":{"url":"classes/MomentMediaCommon.html","title":"class - MomentMediaCommon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentMediaCommon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/entities/media.entity.ts\n        \n\n            \n                Description\n            \n            \n                Media common.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentMediaType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Media type.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/media.entity.ts:36\n                            \n                        \n\n                \n                    \n                        Media type.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  createUnionType,\n  Field,\n  InterfaceType,\n  ObjectType,\n  registerEnumType,\n} from '@nestjs/graphql';\nimport { MEDIA_TYPE_DONT_SUPPORTED } from 'src/constants';\n\n/**\n * Media type.\n */\nexport enum MomentMediaType {\n  VIDEO,\n  IMAGE,\n  AUDIO,\n}\nregisterEnumType(MomentMediaType, {\n  name: 'MomentMediaType',\n  description: 'Media type.',\n});\n\n/**\n * Media common.\n */\n@InterfaceType({\n  description: 'Media common',\n})\nexport class MomentMediaCommon {\n  /**\n   * Media type.\n   */\n  @Field(() => MomentMediaType, {\n    description: 'Media type.',\n  })\n  type: MomentMediaType;\n}\n\n/**\n * Video media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Video media',\n})\nexport class MomentVideoMedia extends MomentMediaCommon {\n  /**\n   * Media cover path.\n   */\n  @Field(() => String, { description: 'Video cover' })\n  cover: string;\n\n  /**\n   * Media video path.\n   */\n  @Field(() => String, { description: 'Video path' })\n  video: string;\n}\n\n/**\n * Audio media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Audio media.',\n})\nexport class MomentAudioMedia extends MomentMediaCommon {\n  /**\n   * Media cover path.\n   */\n  @Field(() => String, { description: 'Audio cover', nullable: true })\n  cover?: string;\n\n  /**\n   * Media video path.\n   */\n  @Field(() => String, { description: 'Audio path' })\n  audio: string;\n}\n\n/**\n * Image media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Image media.',\n})\nexport class MomentImageMedia extends MomentMediaCommon {\n  @Field(() => [String], { description: 'Images' })\n  images: string[];\n}\n\n/**\n * Moment media union type.\n */\nexport const MomentMedia = createUnionType({\n  name: 'MomentMedia',\n  types: () => [MomentAudioMedia, MomentImageMedia, MomentVideoMedia],\n  description: 'Moment media.',\n  resolveType(value: MomentMediaCommon) {\n    switch (value?.type) {\n      case MomentMediaType.AUDIO:\n        return MomentAudioMedia;\n      case MomentMediaType.IMAGE:\n        return MomentImageMedia;\n      case MomentMediaType.VIDEO:\n        return MomentVideoMedia;\n      default:\n        throw new Error(MEDIA_TYPE_DONT_SUPPORTED);\n    }\n  },\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MomentModule.html":{"url":"modules/MomentModule.html","title":"module - MomentModule","body":"\n                   \n\n\n\n\n    Modules\n    MomentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MomentModule\n\n\n\ncluster_MomentModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nMomentModule\n\nMomentModule\n\nMomentModule -->\n\nPrismaModule->MomentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/moment/moment.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { MomentResolver } from './moment.resolver';\n\n@Module({\n  imports: [PrismaModule],\n  providers: [MomentResolver],\n})\nexport class MomentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentOrderByInput.html":{"url":"classes/MomentOrderByInput.html","title":"class - MomentOrderByInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentOrderByInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/dto/moment-order-by.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                content\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                media\n                            \n                            \n                                    Optional\n                                owner\n                            \n                            \n                                    Optional\n                                ownerId\n                            \n                            \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-order-by.input.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-order-by.input.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-order-by.input.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-order-by.input.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            media\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-order-by.input.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserOrderByInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-order-by.input.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ownerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-order-by.input.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-order-by.input.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { UserOrderByInput } from 'src/user/dto/user-order-by.input';\n\n@InputType({ description: 'Moment order by input' })\nexport class MomentOrderByInput implements Prisma.MomentOrderByInput {\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  id?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  title?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  content?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  media?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  createdAt?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  deletedAt?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  ownerId?: Prisma.SortOrder;\n\n  @Field(() => UserOrderByInput, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  owner?: UserOrderByInput;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentResolver.html":{"url":"classes/MomentResolver.html","title":"class - MomentResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/moment.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                momentFindFirst\n                            \n                            \n                                momentFindMany\n                            \n                            \n                                momentFindUnique\n                            \n                            \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaClient: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/moment/moment.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            momentFindFirst\n                        \n                        \n                    \n                \n            \n            \n                \nmomentFindFirst(args: MomentFindFirstArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true, description: 'Find the first Moment that matches the filter.'})\n                \n            \n\n            \n                \n                    Defined in src/moment/moment.resolver.ts:56\n                \n            \n\n\n            \n                \n                    Find the first Moment that matches the filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                MomentFindFirstArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Find moment args\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            momentFindMany\n                        \n                        \n                    \n                \n            \n            \n                \nmomentFindMany(args: MomentFindManyArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {description: 'Find zero or more Moments that matches the filter'})\n                \n            \n\n            \n                \n                    Defined in src/moment/moment.resolver.ts:42\n                \n            \n\n\n            \n                \n                    Find zero or more Moments that matches the filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                MomentFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Find moments args\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            momentFindUnique\n                        \n                        \n                    \n                \n            \n            \n                \nmomentFindUnique(where: MomentWhereUniqueInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {description: 'Find zero or one Moment that matches the filter'})\n                \n            \n\n            \n                \n                    Defined in src/moment/moment.resolver.ts:21\n                \n            \n\n\n            \n                \n                    Find zero or one Moment that matches the filter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                                MomentWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Find unique where\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            owner\n                        \n                        \n                    \n                \n            \n            \n                \nowner(parent: Moment)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/moment/moment.resolver.ts:67\n                \n            \n\n\n            \n                \n                    Resolve owner field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                            Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent moment object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Query, ResolveField, Resolver } from '@nestjs/graphql';\nimport { Moment, PrismaClient } from '@prisma/client';\nimport { MOMENT_NOT_FOUND, USER_NOT_FOUND } from 'src/constants';\nimport { UserEntity } from 'src/user/entities/user.entity';\nimport { MomentFindFirstArgs } from './dto/moment-find-first.args';\nimport { MomentFindManyArgs } from './dto/moment-find-many.args';\nimport { MomentWhereUniqueInput } from './dto/moment-where-unique.input';\nimport { MomentEntity } from './entities/moment.entity';\n\n@Resolver(() => MomentEntity)\nexport class MomentResolver {\n  constructor(private readonly prismaClient: PrismaClient) {}\n\n  /**\n   * Find zero or one Moment that matches the filter\n   * @param where Find unique where\n   */\n  @Query(() => MomentEntity, {\n    description: 'Find zero or one Moment that matches the filter',\n  })\n  momentFindUnique(\n    @Args({\n      name: 'where',\n      type: () => MomentWhereUniqueInput,\n      description: 'Find unique where',\n    })\n    where: MomentWhereUniqueInput,\n  ) {\n    return this.prismaClient.moment.findUnique({\n      where,\n      rejectOnNotFound: () => new Error(MOMENT_NOT_FOUND),\n    });\n  }\n\n  /**\n   * Find zero or more Moments that matches the filter.\n   * @param args Find moments args\n   */\n  @Query(() => [MomentEntity], {\n    description: 'Find zero or more Moments that matches the filter',\n  })\n  momentFindMany(\n    @Args({ type: () => MomentFindManyArgs }) args: MomentFindManyArgs,\n  ) {\n    return this.prismaClient.moment.findMany(args);\n  }\n\n  /**\n   * Find the first Moment that matches the filter.\n   * @param args Find moment args\n   */\n  @Query(() => MomentEntity, {\n    nullable: true,\n    description: 'Find the first Moment that matches the filter.',\n  })\n  momentFindFirst(\n    @Args({ type: () => MomentFindFirstArgs }) args: MomentFindFirstArgs,\n  ) {\n    return this.prismaClient.moment.findFirst(args);\n  }\n\n  /**\n   * Resolve owner field.\n   * @param parent Parent moment object\n   */\n  @ResolveField(() => UserEntity)\n  owner(parent: Moment) {\n    return this.prismaClient.user.findUnique({\n      where: { id: parent.ownerId },\n      rejectOnNotFound: () => new Error(USER_NOT_FOUND),\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentVideoMedia.html":{"url":"classes/MomentVideoMedia.html","title":"class - MomentVideoMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentVideoMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/entities/media.entity.ts\n        \n\n            \n                Description\n            \n            \n                Video media.\n\n            \n\n            \n                Extends\n            \n            \n                        MomentMediaCommon\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cover\n                            \n                            \n                                video\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Video cover'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/media.entity.ts:51\n                            \n                        \n\n                \n                    \n                        Media cover path.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            video\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Video path'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/media.entity.ts:57\n                            \n                        \n\n                \n                    \n                        Media video path.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentMediaType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Media type.'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         MomentMediaCommon\n\n                                \n                            \n                        \n                            \n                                    Defined in         MomentMediaCommon:36\n\n                            \n                        \n\n                \n                    \n                        Media type.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  createUnionType,\n  Field,\n  InterfaceType,\n  ObjectType,\n  registerEnumType,\n} from '@nestjs/graphql';\nimport { MEDIA_TYPE_DONT_SUPPORTED } from 'src/constants';\n\n/**\n * Media type.\n */\nexport enum MomentMediaType {\n  VIDEO,\n  IMAGE,\n  AUDIO,\n}\nregisterEnumType(MomentMediaType, {\n  name: 'MomentMediaType',\n  description: 'Media type.',\n});\n\n/**\n * Media common.\n */\n@InterfaceType({\n  description: 'Media common',\n})\nexport class MomentMediaCommon {\n  /**\n   * Media type.\n   */\n  @Field(() => MomentMediaType, {\n    description: 'Media type.',\n  })\n  type: MomentMediaType;\n}\n\n/**\n * Video media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Video media',\n})\nexport class MomentVideoMedia extends MomentMediaCommon {\n  /**\n   * Media cover path.\n   */\n  @Field(() => String, { description: 'Video cover' })\n  cover: string;\n\n  /**\n   * Media video path.\n   */\n  @Field(() => String, { description: 'Video path' })\n  video: string;\n}\n\n/**\n * Audio media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Audio media.',\n})\nexport class MomentAudioMedia extends MomentMediaCommon {\n  /**\n   * Media cover path.\n   */\n  @Field(() => String, { description: 'Audio cover', nullable: true })\n  cover?: string;\n\n  /**\n   * Media video path.\n   */\n  @Field(() => String, { description: 'Audio path' })\n  audio: string;\n}\n\n/**\n * Image media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Image media.',\n})\nexport class MomentImageMedia extends MomentMediaCommon {\n  @Field(() => [String], { description: 'Images' })\n  images: string[];\n}\n\n/**\n * Moment media union type.\n */\nexport const MomentMedia = createUnionType({\n  name: 'MomentMedia',\n  types: () => [MomentAudioMedia, MomentImageMedia, MomentVideoMedia],\n  description: 'Moment media.',\n  resolveType(value: MomentMediaCommon) {\n    switch (value?.type) {\n      case MomentMediaType.AUDIO:\n        return MomentAudioMedia;\n      case MomentMediaType.IMAGE:\n        return MomentImageMedia;\n      case MomentMediaType.VIDEO:\n        return MomentVideoMedia;\n      default:\n        throw new Error(MEDIA_TYPE_DONT_SUPPORTED);\n    }\n  },\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentWhereInput.html":{"url":"classes/MomentWhereInput.html","title":"class - MomentWhereInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentWhereInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/dto/moment-where.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                AND\n                            \n                            \n                                    Optional\n                                content\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                NOT\n                            \n                            \n                                    Optional\n                                OR\n                            \n                            \n                                    Optional\n                                owner\n                            \n                            \n                                    Optional\n                                ownerId\n                            \n                            \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            AND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'AND where', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'content filter', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DateTimeFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'created at date time filter', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'ID string filter', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            NOT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'NOT where', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            OR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'OR where', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRelationFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'owner filter', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ownerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter | string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'owner ID string filter', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'title filter', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { DateTimeFilter, StringFilter } from 'src/graphql';\nimport { UserRelationFilter } from 'src/user/dto/user-relation.filter';\n\n@InputType()\nexport class MomentWhereInput\n  implements Omit {\n  @Field(() => [MomentWhereInput], { description: 'AND where', nullable: true })\n  AND?: MomentWhereInput[];\n\n  @Field(() => [MomentWhereInput], { description: 'OR where', nullable: true })\n  OR?: MomentWhereInput[];\n\n  @Field(() => [MomentWhereInput], { description: 'NOT where', nullable: true })\n  NOT?: MomentWhereInput[];\n\n  @Field(() => StringFilter, {\n    description: 'ID string filter',\n    nullable: true,\n  })\n  id?: StringFilter;\n\n  @Field(() => StringFilter, { description: 'title filter', nullable: true })\n  title?: StringFilter;\n\n  @Field(() => StringFilter, { description: 'content filter', nullable: true })\n  content?: StringFilter;\n\n  @Field(() => StringFilter, {\n    description: 'created at date time filter',\n    nullable: true,\n  })\n  createdAt?: DateTimeFilter;\n\n  @Field(() => StringFilter, {\n    description: 'owner ID string filter',\n    nullable: true,\n  })\n  ownerId?: StringFilter | string;\n\n  @Field(() => UserRelationFilter, {\n    description: 'owner filter',\n    nullable: true,\n  })\n  owner?: UserRelationFilter;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentWhereUniqueInput.html":{"url":"classes/MomentWhereUniqueInput.html","title":"class - MomentWhereUniqueInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentWhereUniqueInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/dto/moment-where-unique.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, PartialType, PickType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { MomentEntity } from '../entities/moment.entity';\n\n@InputType({ description: 'Moment Where Unique input' })\nexport class MomentWhereUniqueInput\n  extends PartialType(PickType(MomentEntity, ['id'] as const), InputType)\n  implements Prisma.MomentWhereUniqueInput {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Prisma module.\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {\n  ClassProvider,\n  Global,\n  Logger,\n  Module,\n  OnModuleDestroy,\n  OnModuleInit,\n} from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\nimport { PrismaLoggerMiddleware } from './middleware';\n\n/**\n * Prisma class provider\n */\nconst client: ClassProvider = {\n  provide: PrismaClient,\n  useClass: class\n    extends PrismaClient\n    implements OnModuleInit, OnModuleDestroy {\n    private readonly logger = new Logger('Prisma');\n\n    /**\n     * Prisma client constructor\n     */\n    constructor() {\n      super({\n        datasources: {\n          database: { url: process.env.DATABASE_URL },\n        },\n      });\n    }\n\n    /**\n     * NestJS module init hook callback.\n     */\n    async onModuleInit() {\n      // Prisma connect database.\n      await this.$connect();\n\n      // Set Prisma client global logger middleware.\n      this.$use(PrismaLoggerMiddleware(this.logger));\n    }\n\n    /**\n     * NestJS module destory hook callback.\n     */\n    async onModuleDestroy() {\n      // Prisma disconnect database.\n      await this.$disconnect();\n    }\n  },\n};\n\n/**\n * Prisma module.\n */\n@Global()\n@Module({\n  providers: [client],\n  exports: [client],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SecurityModule.html":{"url":"modules/SecurityModule.html","title":"module - SecurityModule","body":"\n                   \n\n\n\n\n    Modules\n    SecurityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SecurityModule\n\n\n\ncluster_SecurityModule_providers\n\n\n\ncluster_SecurityModule_exports\n\n\n\ncluster_SecurityModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSecurityModule\n\nSecurityModule\n\nSecurityModule -->\n\nPrismaModule->SecurityModule\n\n\n\n\n\nTencentCloudModule\n\nTencentCloudModule\n\nSecurityModule -->\n\nTencentCloudModule->SecurityModule\n\n\n\n\n\nSecuritySmsService \n\nSecuritySmsService \n\nSecuritySmsService  -->\n\nSecurityModule->SecuritySmsService \n\n\n\n\n\nSecuritySmsService\n\nSecuritySmsService\n\nSecurityModule -->\n\nSecuritySmsService->SecurityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/security/security.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Security module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SecuritySmsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            TencentCloudModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SecuritySmsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { TencentCloudModule } from 'src/tencent-cloud';\nimport { SecuritySmsResolver } from './security-sms.resolver';\nimport { SecuritySmsService } from './security-sms.service';\n\n/**\n * Security module.\n */\n@Module({\n  imports: [TencentCloudModule, PrismaModule],\n  providers: [SecuritySmsService, SecuritySmsResolver],\n  exports: [SecuritySmsService],\n})\nexport class SecurityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecuritySmsResolver.html":{"url":"classes/SecuritySmsResolver.html","title":"class - SecuritySmsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecuritySmsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/security/security-sms.resolver.ts\n        \n\n            \n                Description\n            \n            \n                Security SMS resolver.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSecurity\n                            \n                            \n                                    Async\n                                createViewerSecurity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(securitySmsService: SecuritySmsService)\n                    \n                \n                        \n                            \n                                Defined in src/security/security-sms.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            Create the resolver.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        securitySmsService\n                                                  \n                                                        \n                                                                        SecuritySmsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Secyrity SMS service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSecurity(phone: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create a security SMS code for phone number'})\n                \n            \n\n            \n                \n                    Defined in src/security/security-sms.resolver.ts:27\n                \n            \n\n\n            \n                \n                    Create a security SMS code for phone number.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Need create Security SMS code phone number.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createViewerSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createViewerSecurity(context: ExecutionContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create the viewer security SMS code'})@Authorization({hasAuthorization: true, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/security/security-sms.resolver.ts:47\n                \n            \n\n\n            \n                \n                    Create the viewer security SMS code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Socfony app execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, GraphQLISODateTime, Mutation, Resolver } from '@nestjs/graphql';\nimport { HasTokenExpiredType } from 'src/authorization-token/enums';\nimport { Authorization } from 'src/authorization.decorator';\nimport { USER_NOT_SET_PHONE } from 'src/constants';\nimport { Context } from 'src/context.decorator';\nimport { ExecutionContext } from 'src/execution-context';\nimport { SecuritySmsService } from './security-sms.service';\n\n/**\n * Security SMS resolver.\n */\n@Resolver()\nexport class SecuritySmsResolver {\n  /**\n   * Create the resolver.\n   * @param securitySmsService Secyrity SMS service.\n   */\n  constructor(private readonly securitySmsService: SecuritySmsService) {}\n\n  /**\n   * Create a security SMS code for phone number.\n   * @param phone Need create Security SMS code phone number.\n   */\n  @Mutation(() => GraphQLISODateTime, {\n    description: 'Create a security SMS code for phone number',\n  })\n  async createSecurity(\n    @Args({\n      name: 'phone',\n      description: 'Need send code phone number',\n      type: () => String,\n    })\n    phone: string,\n  ) {\n    const { expiredAt } = await this.securitySmsService.send(phone);\n    return expiredAt;\n  }\n\n  /**\n   * Create the viewer security SMS code.\n   * @param context Socfony app execution context.\n   */\n  @Mutation(() => GraphQLISODateTime, {\n    description: 'Create the viewer security SMS code',\n  })\n  @Authorization({ hasAuthorization: true, type: HasTokenExpiredType.AUTH })\n  async createViewerSecurity(@Context() context: ExecutionContext) {\n    const { phone } = context.user || {};\n    if (!phone) {\n      throw new Error(USER_NOT_SET_PHONE);\n    }\n\n    return await this.createSecurity(phone);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SecuritySmsService.html":{"url":"injectables/SecuritySmsService.html","title":"injectable - SecuritySmsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SecuritySmsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/security/security-sms.service.ts\n        \n\n            \n                Description\n            \n            \n                Security SMS service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compareCode\n                            \n                            \n                                getOptions\n                            \n                            \n                                    Async\n                                send\n                            \n                            \n                                    Async\n                                updateCodeToUsed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tencentCloudSmsService: TencentCloudSmsService, prisma: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/security/security-sms.service.ts:11\n                            \n                        \n\n                \n                    \n                            Create the service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tencentCloudSmsService\n                                                  \n                                                        \n                                                                        TencentCloudSmsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Tencent Cloud SMS service.\n\n                                                        \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            compareCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    compareCode(phone: string, code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/security/security-sms.service.ts:85\n                \n            \n\n\n            \n                \n                    Compase phone security code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        phone number.\n\n                                    \n                                \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sent phone security SMS code.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions(hasChina: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/security/security-sms.service.ts:26\n                \n            \n\n\n            \n                \n                    Get SMS options.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hasChina\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Has china.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { expiredIn: any; templateID: any; veriables: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(phone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/security/security-sms.service.ts:49\n                \n            \n\n\n            \n                \n                    Send a SMS code to phone.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Send phone number.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateCodeToUsed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCodeToUsed(security: SecuritySmsCode)\n                \n            \n\n\n            \n                \n                    Defined in src/security/security-sms.service.ts:113\n                \n            \n\n\n            \n                \n                    Update security to used.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    security\n                                    \n                                            SecuritySmsCode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Security code.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaClient, SecuritySmsCode } from '@prisma/client';\nimport * as dayjs from 'dayjs';\nimport { IDHelper } from 'src/helper';\nimport { TencentCloudSmsService } from 'src/tencent-cloud/sms';\n\n/**\n * Security SMS service.\n */\n@Injectable()\nexport class SecuritySmsService {\n  /**\n   * Create the service.\n   * @param tencentCloudSmsService Tencent Cloud SMS service.\n   * @param prisma Prisma client.\n   */\n  constructor(\n    private readonly tencentCloudSmsService: TencentCloudSmsService,\n    private readonly prisma: PrismaClient,\n  ) {}\n\n  /**\n   * Get SMS options.\n   * @param hasChina Has china.\n   */\n  getOptions(hasChina: boolean) {\n    const expiredIn = Number.parseInt(\n      process.env.TENCENT_CLOUD_SMS_EXPIRED_IN || '300',\n    );\n    if (hasChina) {\n      return {\n        expiredIn,\n        templateID: process.env.TENCENT_CLOUD_SMS_CHINA_TEMPLATE_ID,\n        veriables: process.env.TENCENT_CLOUD_SMS_CHINA_VERIABLES,\n      };\n    }\n\n    return {\n      expiredIn,\n      templateID: process.env.TENCENT_CLOUD_SMS_OTHER_TEMPLATE_ID,\n      veriables: process.env.TENCENT_CLOUD_SMS_OTHER_VERIABLES,\n    };\n  }\n\n  /**\n   * Send a SMS code to phone.\n   * @param phone Send phone number.\n   */\n  async send(phone: string) {\n    const hasChina = phone.startsWith('+86');\n    const options = this.getOptions(hasChina);\n    const code = IDHelper.numeral(6);\n    const expiredAt = dayjs().add(options.expiredIn, 'seconds').toDate();\n    const paramsSet = options.veriables\n      .split(',')\n      .map((item) =>\n        item\n          .replace('#code#', code)\n          .replace('#expired#', (options.expiredIn / 60).toString()),\n      );\n\n    const security = await this.prisma.securitySmsCode.create({\n      data: {\n        id: IDHelper.id(64),\n        phone,\n        code,\n        expiredAt,\n      },\n    });\n\n    this.tencentCloudSmsService.send({\n      PhoneNumberSet: [phone],\n      TemplateID: options.templateID,\n      TemplateParamSet: paramsSet,\n    });\n\n    return security;\n  }\n\n  /**\n   * Compase phone security code.\n   * @param phone phone number.\n   * @param code The sent phone security SMS code.\n   */\n  async compareCode(\n    phone: string,\n    code: string,\n  ): Promise {\n    if (!phone || !code) {\n      return false;\n    }\n\n    const security = await this.prisma.securitySmsCode.findFirst({\n      where: { phone, code },\n      orderBy: { createdAt: 'desc' },\n      rejectOnNotFound: false,\n    });\n    if (\n      security &&\n      !security.usedAt &&\n      security.expiredAt.getTime() > Date.now()\n    ) {\n      return security;\n    }\n\n    return false;\n  }\n\n  /**\n   * Update security to used.\n   * @param security Security code.\n   */\n  async updateCodeToUsed(security: SecuritySmsCode) {\n    return await this.prisma.securitySmsCode.update({\n      where: { id: security.id },\n      data: { usedAt: new Date() },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SocfonyConfig.html":{"url":"interfaces/SocfonyConfig.html","title":"interface - SocfonyConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SocfonyConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.config.ts\n        \n\n            \n                Description\n            \n            \n                Socfony app config.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endpoint\n                                \n                                \n                                        isProduction\n                                \n                                \n                                        port\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoint\n                                    \n                                \n                                \n                                    \n                                        endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GraphQL endpoint\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isProduction\n                                    \n                                \n                                \n                                    \n                                        isProduction:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is production.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    App runner port\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { config as dontEnvConfig } from 'dotenv';\n\n/**\n * Socfony app config.\n */\nexport interface SocfonyConfig {\n  /**\n   * Is production.\n   */\n  isProduction: boolean;\n\n  /**\n   * App runner port\n   */\n  port: string | number;\n\n  /**\n   * GraphQL endpoint\n   */\n  endpoint: string;\n}\n\n/**\n * Load Socfony ENV config file.\n * @param path ENV file path.\n */\nexport function loadConfig(path?: string) {\n  const logger = new Logger('Socfony');\n  const { error } = dontEnvConfig({ path });\n  if (error) {\n    logger.error(error.message);\n    process.exit(1);\n  }\n\n  logger.log(`Loaded \"${path || '.env'}\" dot env config file.`);\n}\n\n/**\n * Get app config.\n * @returns {@like SocfonyConfig}\n */\nexport function getConfig(): SocfonyConfig {\n  return {\n    isProduction: process.env.NODE_ENV === 'production',\n    port: process.env.CLIENT_SERVER_PORT || 3000,\n    endpoint: process.env.CLIENT_GRAPHQL_ENDPOINT || '/',\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StringFilter.html":{"url":"classes/StringFilter.html","title":"class - StringFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StringFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql/filters/string.filter.ts\n        \n\n            \n                Description\n            \n            \n                String filter\n\n            \n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                contains\n                            \n                            \n                                    Optional\n                                endsWith\n                            \n                            \n                                    Optional\n                                equals\n                            \n                            \n                                    Optional\n                                gt\n                            \n                            \n                                    Optional\n                                gte\n                            \n                            \n                                    Optional\n                                in\n                            \n                            \n                                    Optional\n                                lt\n                            \n                            \n                                    Optional\n                                lte\n                            \n                            \n                                    Optional\n                                mode\n                            \n                            \n                                    Optional\n                                not\n                            \n                            \n                                    Optional\n                                notIn\n                            \n                            \n                                    Optional\n                                startsWith\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            contains\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String contains'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            endsWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String end with'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            equals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String equals'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            gt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String gt'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            gte\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String gte'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String in'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String lt'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lte\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String lte'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.QueryMode\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'query mode'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            not\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'not'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            notIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String not in'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            startsWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String starts with'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, registerEnumType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\n\nregisterEnumType(Prisma.QueryMode, {\n  name: 'QueryMode',\n});\n\n/**\n * String filter\n */\n@InputType({\n  description: 'String filter',\n})\nexport class StringFilter implements Prisma.StringFilter {\n  @Field(() => String, { nullable: true, description: 'String equals' })\n  equals?: string;\n\n  @Field(() => [String], { nullable: true, description: 'String in' })\n  in?: string[];\n\n  @Field(() => [String], { nullable: true, description: 'String not in' })\n  notIn?: string[];\n\n  @Field(() => String, { nullable: true, description: 'String lt' })\n  lt?: string;\n\n  @Field(() => String, { nullable: true, description: 'String lte' })\n  lte?: string;\n\n  @Field(() => String, { nullable: true, description: 'String gt' })\n  gt?: string;\n\n  @Field(() => String, { nullable: true, description: 'String gte' })\n  gte?: string;\n\n  @Field(() => String, { nullable: true, description: 'String contains' })\n  contains?: string;\n\n  @Field(() => String, { nullable: true, description: 'String starts with' })\n  startsWith?: string;\n\n  @Field(() => String, { nullable: true, description: 'String end with' })\n  endsWith?: string;\n\n  @Field(() => Prisma.QueryMode, { nullable: true, description: 'query mode' })\n  mode?: Prisma.QueryMode;\n\n  @Field(() => StringFilter, { nullable: true, description: 'not' })\n  not?: StringFilter;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TencentCloudCosCredentials.html":{"url":"classes/TencentCloudCosCredentials.html","title":"class - TencentCloudCosCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TencentCloudCosCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/cos/entities/cos.entity.ts\n        \n\n            \n                Description\n            \n            \n                Tencent CLoud COS credential\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                bucket\n                            \n                            \n                                region\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authorization\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TencentCloudStsFederationToken\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud STS authorization token'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/cos/entities/cos.entity.ts:17\n                            \n                        \n\n                \n                    \n                        Tencent Cloud STS authorization token\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bucket\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud COS bucket'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/cos/entities/cos.entity.ts:25\n                            \n                        \n\n                \n                    \n                        Tencent Cloud COS bucket\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            region\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud COS bucket region'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/cos/entities/cos.entity.ts:33\n                            \n                        \n\n                \n                    \n                        Tencent Cloud COS bucket region\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { TencentCloudStsFederationToken } from '../../sts';\n\n/**\n * Tencent CLoud COS credential\n */\n@ObjectType({\n  description: 'Tencent CLoud COS credential',\n})\nexport class TencentCloudCosCredentials {\n  /**\n   * Tencent Cloud STS authorization token\n   */\n  @Field(() => TencentCloudStsFederationToken, {\n    description: 'Tencent Cloud STS authorization token',\n  })\n  authorization: TencentCloudStsFederationToken;\n\n  /**\n   * Tencent Cloud COS bucket\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud COS bucket',\n  })\n  bucket: string;\n\n  /**\n   * Tencent Cloud COS bucket region\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud COS bucket region',\n  })\n  region: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TencentCloudCosResolver.html":{"url":"classes/TencentCloudCosResolver.html","title":"class - TencentCloudCosResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TencentCloudCosResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/cos/cos.resolver.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Cloud COS credentials resolver.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                    Async\n                                createCosTemporaryReadCredential\n                            \n                            \n                                    Async\n                                createCosTemporaryWriteCredential\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cosService: TencentCloudCosService)\n                    \n                \n                        \n                            \n                                Defined in src/tencent-cloud/cos/cos.resolver.ts:43\n                            \n                        \n\n                \n                    \n                            Create the resolver.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cosService\n                                                  \n                                                        \n                                                                        TencentCloudCosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Tencent Cloud COS service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorization\n                        \n                        \n                    \n                \n            \n            \n                \nauthorization(undefined: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/tencent-cloud/cos/cos.resolver.ts:55\n                \n            \n\n\n            \n                \n                    Resolve Tencent Cloud STS federation token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createCosTemporaryReadCredential\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCosTemporaryReadCredential()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create Tencent Cloud COS read credential'})\n                \n            \n\n            \n                \n                    Defined in src/tencent-cloud/cos/cos.resolver.ts:72\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud COS read credential\n\n\n                    \n                        Returns :     Promise<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createCosTemporaryWriteCredential\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCosTemporaryWriteCredential(type: AllowUploadFileType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create Tencent Cloud COS write credential'})@AuthorizationWith()\n                \n            \n\n            \n                \n                    Defined in src/tencent-cloud/cos/cos.resolver.ts:90\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud COS write credential\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AllowUploadFileType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        AllowUploadFileType item.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Args,\n  Mutation,\n  Parent,\n  registerEnumType,\n  ResolveField,\n  Resolver,\n} from '@nestjs/graphql';\nimport { AuthorizationWith } from 'src/authorization.decorator';\nimport { IDHelper } from 'src/helper';\nimport { TencentCloudStsFederationToken } from '../sts';\nimport { TencentCloudCosCredentials } from './entities/cos.entity';\nimport { TencentCloudCosService } from './soc.service';\n\n/**\n * Allow upload File MIME-type.\n */\nexport enum AllowUploadFileType {\n  // Images\n  JPG = '.jpg',\n  PNG = '.png',\n  GIF = '.gif',\n  // Video\n  MP4 = '.mp4',\n  OGG = '.ogg',\n  // Audio\n  MP3 = '.mp3',\n  WAV = '.wav',\n}\n\n/**\n * Register `AllowUploadFileType` to GraphQL schema.\n */\nregisterEnumType(AllowUploadFileType, {\n  name: 'AllowUploadFileType',\n  description: 'Allow upload File MIME-type',\n});\n\n/**\n * Tencent Cloud COS credentials resolver.\n */\n@Resolver(() => TencentCloudCosCredentials)\nexport class TencentCloudCosResolver {\n  /**\n   * Create the resolver.\n   * @param cosService Tencent Cloud COS service.\n   */\n  constructor(private readonly cosService: TencentCloudCosService) {}\n\n  /**\n   * Resolve Tencent Cloud STS federation token.\n   * @param param SOcfony runner execution context.\n   */\n  @ResolveField(() => TencentCloudStsFederationToken)\n  authorization(\n    @Parent()\n    {\n      authorization,\n    }: {\n      authorization: () => Promise;\n    },\n  ) {\n    return authorization();\n  }\n\n  /**\n   * Create Tencent Cloud COS read credential\n   */\n  @Mutation(() => TencentCloudCosCredentials, {\n    description: 'Create Tencent Cloud COS read credential',\n  })\n  async createCosTemporaryReadCredential(): Promise & {\n      authorization: () => Promise;\n    }\n  > {\n    return Object.assign({}, this.cosService.options, {\n      authorization: () => this.cosService.createTemporaryReadCredential(),\n    });\n  }\n\n  /**\n   * Create Tencent Cloud COS write credential\n   * @param type `AllowUploadFileType` item.\n   */\n  @Mutation(() => TencentCloudCosCredentials, {\n    description: 'Create Tencent Cloud COS write credential',\n  })\n  @AuthorizationWith()\n  async createCosTemporaryWriteCredential(\n    @Args({\n      name: 'type',\n      type: () => AllowUploadFileType,\n      description: 'create resource type.',\n    })\n    type: AllowUploadFileType,\n  ): Promise & {\n      authorization: () => Promise;\n    }\n  > {\n    return Object.assign({}, this.cosService.options, {\n      authorization: () =>\n        this.cosService.createTemporaryWriteCredential(IDHelper.id(64) + type),\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TencentCloudCosService.html":{"url":"injectables/TencentCloudCosService.html","title":"injectable - TencentCloudCosService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TencentCloudCosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/cos/soc.service.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Cloud COS service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTemporaryReadCredential\n                            \n                            \n                                    Async\n                                createTemporaryWriteCredential\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                                \n                                    temporaryCredentialDurationSeconds\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sts: TencentCloudStsService)\n                    \n                \n                        \n                            \n                                Defined in src/tencent-cloud/cos/soc.service.ts:9\n                            \n                        \n\n                \n                    \n                            Create the COS service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sts\n                                                  \n                                                        \n                                                                        TencentCloudStsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Tencent Cloud STS service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTemporaryReadCredential\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTemporaryReadCredential()\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/cos/soc.service.ts:36\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud COS temporary read credential.\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTemporaryWriteCredential\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTemporaryWriteCredential(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/cos/soc.service.ts:64\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud COS temporary write credential.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tencent Cloud COS object key.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in src/tencent-cloud/cos/soc.service.ts:19\n                                \n                            \n                    \n                        \n                                Get COS options.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        temporaryCredentialDurationSeconds\n                    \n                \n\n                \n                    \n                        gettemporaryCredentialDurationSeconds()\n                    \n                \n                            \n                                \n                                    Defined in src/tencent-cloud/cos/soc.service.ts:29\n                                \n                            \n                    \n                        \n                                get temporary credential duration seconds.\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { IDHelper } from 'src/helper';\nimport { TencentCloudStsService } from '../sts';\n\n/**\n * Tencent Cloud COS service.\n */\n@Injectable()\nexport class TencentCloudCosService {\n  /**\n   * Create the COS service.\n   * @param sts Tencent Cloud STS service.\n   */\n  constructor(private readonly sts: TencentCloudStsService) {}\n\n  /**\n   * Get COS options.\n   */\n  get options() {\n    return {\n      bucket: process.env.TENCENT_CLOUD_COS_BUCKET,\n      region: process.env.TENCENT_CLOUD_COS_REGION,\n    };\n  }\n\n  /**\n   * get temporary credential duration seconds.\n   */\n  get temporaryCredentialDurationSeconds() {\n    return 7200;\n  }\n\n  /**\n   * Create Tencent Cloud COS temporary read credential.\n   */\n  async createTemporaryReadCredential() {\n    const { bucket, region } = this.options;\n    const stsClient = this.sts.createClient(region);\n    const [_, uid] = bucket.split('-');\n    return await stsClient.GetFederationToken({\n      Name: IDHelper.alphabet(32),\n      DurationSeconds: this.temporaryCredentialDurationSeconds,\n      Policy: JSON.stringify({\n        version: '2.0',\n        statement: [\n          {\n            effect: 'allow',\n            action: [\n              'name/cos:GetObject',\n              'name/cos:HeadObject',\n              'name/cos:OptionsObject',\n            ],\n            resource: [`qcs::cos:${region}:uid/${uid}:${bucket}/*`],\n          },\n        ],\n      }),\n    });\n  }\n\n  /**\n   * Create Tencent Cloud COS temporary write credential.\n   * @param name Tencent Cloud COS object key.\n   */\n  async createTemporaryWriteCredential(name: string) {\n    const { bucket, region } = this.options;\n    const stsClient = this.sts.createClient(region);\n    const [_, uid] = bucket.split('-');\n    return await stsClient.GetFederationToken({\n      Name: IDHelper.alphabet(32),\n      DurationSeconds: this.temporaryCredentialDurationSeconds,\n      Policy: JSON.stringify({\n        version: '2.0',\n        statement: [\n          {\n            effect: 'allow',\n            action: [\n              //简单上传操作\n              'name/cos:PutObject',\n              //表单上传对象\n              'name/cos:PostObject',\n              //分块上传：初始化分块操作\n              'name/cos:InitiateMultipartUpload',\n              //分块上传：List 进行中的分块上传\n              'name/cos:ListMultipartUploads',\n              //分块上传：List 已上传分块操作\n              'name/cos:ListParts',\n              //分块上传：上传分块块操作\n              'name/cos:UploadPart',\n              //分块上传：完成所有分块上传操作\n              'name/cos:CompleteMultipartUpload',\n              //取消分块上传操作\n              'name/cos:AbortMultipartUpload',\n            ],\n            resource: [`qcs::cos:${region}:uid/${uid}:${bucket}/${name}`],\n          },\n        ],\n      }),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TencentCloudModule.html":{"url":"modules/TencentCloudModule.html","title":"module - TencentCloudModule","body":"\n                   \n\n\n\n\n    Modules\n    TencentCloudModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TencentCloudModule\n\n\n\ncluster_TencentCloudModule_exports\n\n\n\ncluster_TencentCloudModule_providers\n\n\n\n\nTencentCloudCosService \n\nTencentCloudCosService \n\n\n\nTencentCloudSmsService \n\nTencentCloudSmsService \n\n\n\nTencentCloudStsService \n\nTencentCloudStsService \n\n\n\nTencentCloudModule\n\nTencentCloudModule\n\nTencentCloudCosService  -->\n\nTencentCloudModule->TencentCloudCosService \n\n\n\nTencentCloudSmsService  -->\n\nTencentCloudModule->TencentCloudSmsService \n\n\n\nTencentCloudStsService  -->\n\nTencentCloudModule->TencentCloudStsService \n\n\n\n\n\nTencentCloudCosService\n\nTencentCloudCosService\n\nTencentCloudModule -->\n\nTencentCloudCosService->TencentCloudModule\n\n\n\n\n\nTencentCloudSmsService\n\nTencentCloudSmsService\n\nTencentCloudModule -->\n\nTencentCloudSmsService->TencentCloudModule\n\n\n\n\n\nTencentCloudStsService\n\nTencentCloudStsService\n\nTencentCloudModule -->\n\nTencentCloudStsService->TencentCloudModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tencent-cloud/tencent-cloud.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Tencent Cloud module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TencentCloudCosService\n                        \n                        \n                            TencentCloudSmsService\n                        \n                        \n                            TencentCloudStsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TencentCloudCosService\n                        \n                        \n                            TencentCloudSmsService\n                        \n                        \n                            TencentCloudStsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TencentCloudCosService } from './cos';\nimport { TencentCloudCosResolver } from './cos/cos.resolver';\nimport { TencentCloudSmsService } from './sms';\nimport { TencentCloudStsService } from './sts';\n\n/**\n * Tencent Cloud module.\n */\n@Module({\n  providers: [\n    TencentCloudStsService,\n    TencentCloudCosService,\n    TencentCloudSmsService,\n\n    // Resolvers\n    TencentCloudCosResolver,\n  ],\n  exports: [\n    TencentCloudStsService,\n    TencentCloudCosService,\n    TencentCloudSmsService,\n  ],\n})\nexport class TencentCloudModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TencentCloudSmsService.html":{"url":"injectables/TencentCloudSmsService.html","title":"injectable - TencentCloudSmsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TencentCloudSmsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/sms/sms.service.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Cloud SMS service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createClient\n                            \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createClient\n                        \n                        \n                    \n                \n            \n            \n                \ncreateClient(region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/sms/sms.service.ts:29\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud SMS client.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'ap-guangzhou'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Client\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(params: Pick, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/sms/sms.service.ts:45\n                \n            \n\n\n            \n                \n                    Send SMS.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Pick\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Send SMS params.\n\n                                    \n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'ap-guangzhou'\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseOptions\n                    \n                \n\n                \n                    \n                        getbaseOptions()\n                    \n                \n                            \n                                \n                                    Defined in src/tencent-cloud/sms/sms.service.ts:14\n                                \n                            \n                    \n                        \n                                Get SMS base options.\n\n\n                                \n                                    Returns :         Pick\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Client } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sms/v20190711/sms_client';\nimport { SendSmsRequest } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sms/v20190711/sms_models';\nimport { getCredential } from '../common';\n\n/**\n * Tencent Cloud SMS service.\n */\n@Injectable()\nexport class TencentCloudSmsService {\n  /**\n   * Get SMS base options.\n   */\n  get baseOptions(): Pick {\n    return {\n      SmsSdkAppid: process.env.TENCENT_CLOUD_SMS_APP_ID,\n      Sign: process.env.TENCENT_CLOUD_SMS_SIGN,\n      ExtendCode: process.env.TENCENT_CLOUD_SMS_EXTEND_CODE,\n      SenderId: process.env.TENCENT_CLOUD_SMS_SENDER_ID,\n    };\n  }\n\n  /**\n   * Create Tencent Cloud SMS client.\n   */\n  createClient(region: string = 'ap-guangzhou'): Client {\n    return new Client({\n      credential: getCredential(),\n      region,\n      profile: {\n        httpProfile: {\n          endpoint: 'sms.tencentcloudapi.com',\n        },\n      },\n    });\n  }\n\n  /**\n   * Send SMS.\n   * @param params Send SMS params.\n   */\n  async send(\n    params: Pick,\n    region: string = 'ap-guangzhou',\n  ) {\n    const client = this.createClient(region);\n    const request = Object.assign({}, this.baseOptions, params);\n    return await client.SendSms(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TencentCloudStsCredentials.html":{"url":"classes/TencentCloudStsCredentials.html","title":"class - TencentCloudStsCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TencentCloudStsCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/sts/entities/sts.entity.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Cloud STS credentials.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Credentials\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                TmpSecretId\n                            \n                            \n                                TmpSecretKey\n                            \n                            \n                                Token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TmpSecretId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials secrect id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:26\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials secrect id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TmpSecretKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials secrect key'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:34\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials secrect key\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials token'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:18\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials token\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Int, ObjectType } from '@nestjs/graphql';\nimport { GetFederationTokenResponse } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_models';\nimport { Credentials } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_models';\n\n/**\n * Tencent Cloud STS credentials.\n */\n@ObjectType({\n  description: 'Tencent Cloud STS credentials.',\n})\nexport class TencentCloudStsCredentials implements Credentials {\n  /**\n   * Tencent Cloud credentials token\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials token',\n  })\n  Token: string;\n\n  /**\n   * Tencent Cloud credentials secrect id\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials secrect id',\n  })\n  TmpSecretId: string;\n\n  /**\n   * Tencent Cloud credentials secrect key\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials secrect key',\n  })\n  TmpSecretKey: string;\n}\n\n/**\n * Tencent Clous STS federation token\n */\n@ObjectType({\n  description: 'Tencent Clous STS federation token',\n})\nexport class TencentCloudStsFederationToken\n  implements GetFederationTokenResponse {\n  /**\n   * Tencent Cloud credentials\n   */\n  @Field(() => TencentCloudStsCredentials, {\n    description: 'Tencent Cloud credentials',\n    nullable: true,\n  })\n  Credentials?: TencentCloudStsCredentials;\n\n  /**\n   * Tencent Cloud credentials expired Unix time\n   */\n  @Field(() => Int, {\n    description: 'Tencent Cloud credentials expired Unix time.',\n    nullable: true,\n  })\n  ExpiredTime?: number;\n\n  /**\n   * Tencent Cloud credentials expired ISO8601 date\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials expired ISO8601 date.',\n    nullable: true,\n  })\n  Expiration?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TencentCloudStsFederationToken.html":{"url":"classes/TencentCloudStsFederationToken.html","title":"class - TencentCloudStsFederationToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TencentCloudStsFederationToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/sts/entities/sts.entity.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Clous STS federation token\n\n            \n\n\n            \n                Implements\n            \n            \n                        GetFederationTokenResponse\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                Credentials\n                            \n                            \n                                    Optional\n                                Expiration\n                            \n                            \n                                    Optional\n                                ExpiredTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            Credentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TencentCloudStsCredentials\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:52\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            Expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials expired ISO8601 date.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:70\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials expired ISO8601 date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ExpiredTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials expired Unix time.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:61\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials expired Unix time\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Int, ObjectType } from '@nestjs/graphql';\nimport { GetFederationTokenResponse } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_models';\nimport { Credentials } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_models';\n\n/**\n * Tencent Cloud STS credentials.\n */\n@ObjectType({\n  description: 'Tencent Cloud STS credentials.',\n})\nexport class TencentCloudStsCredentials implements Credentials {\n  /**\n   * Tencent Cloud credentials token\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials token',\n  })\n  Token: string;\n\n  /**\n   * Tencent Cloud credentials secrect id\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials secrect id',\n  })\n  TmpSecretId: string;\n\n  /**\n   * Tencent Cloud credentials secrect key\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials secrect key',\n  })\n  TmpSecretKey: string;\n}\n\n/**\n * Tencent Clous STS federation token\n */\n@ObjectType({\n  description: 'Tencent Clous STS federation token',\n})\nexport class TencentCloudStsFederationToken\n  implements GetFederationTokenResponse {\n  /**\n   * Tencent Cloud credentials\n   */\n  @Field(() => TencentCloudStsCredentials, {\n    description: 'Tencent Cloud credentials',\n    nullable: true,\n  })\n  Credentials?: TencentCloudStsCredentials;\n\n  /**\n   * Tencent Cloud credentials expired Unix time\n   */\n  @Field(() => Int, {\n    description: 'Tencent Cloud credentials expired Unix time.',\n    nullable: true,\n  })\n  ExpiredTime?: number;\n\n  /**\n   * Tencent Cloud credentials expired ISO8601 date\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials expired ISO8601 date.',\n    nullable: true,\n  })\n  Expiration?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TencentCloudStsService.html":{"url":"injectables/TencentCloudStsService.html","title":"injectable - TencentCloudStsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TencentCloudStsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/sts/sts.service.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Cloud STS service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createClient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createClient\n                        \n                        \n                    \n                \n            \n            \n                \ncreateClient(region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/sts/sts.service.ts:14\n                \n            \n\n\n            \n                \n                    Create STS client for region.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'ap-guangzhou'\n                                    \n\n                                    \n                                        server region.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Client\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Client } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_client';\nimport { getCredential } from '../common';\n\n/**\n * Tencent Cloud STS service.\n */\n@Injectable()\nexport class TencentCloudStsService {\n  /**\n   * Create STS client for region.\n   * @param region server region.\n   */\n  createClient(region: string = 'ap-guangzhou'): Client {\n    return new Client({\n      credential: getCredential(),\n      region,\n      profile: {\n        httpProfile: {\n          endpoint: 'sts.tencentcloudapi.com',\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateViewerArgs.html":{"url":"classes/UpdateViewerArgs.html","title":"class - UpdateViewerArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateViewerArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-viewer.args.ts\n        \n\n            \n                Description\n            \n            \n                Update viewer args.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                newPhoneSecurity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserUpdateInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User update input'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-viewer.args.ts:20\n                            \n                        \n\n                \n                    \n                        User update input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            newPhoneSecurity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Update phone need set new phone security code'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-viewer.args.ts:29\n                            \n                        \n\n                \n                    \n                        Update phone need set new phone security code\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field, PickType } from '@nestjs/graphql';\nimport { CreateAuthorizationTokenArgs } from 'src/authorization-token/dto/create-authorization-token.args';\nimport { UserUpdateInput } from './user-update.input';\n\n/**\n * Update viewer args.\n */\n@ArgsType()\nexport class UpdateViewerArgs extends PickType(\n  CreateAuthorizationTokenArgs,\n  ['security', 'type'] as const,\n  ArgsType,\n) {\n  /**\n   * User update input\n   */\n  @Field(() => UserUpdateInput, {\n    description: 'User update input',\n  })\n  data: UserUpdateInput;\n\n  /**\n   * Update phone need set new phone security code\n   */\n  @Field(() => String, {\n    nullable: true,\n    description: 'Update phone need set new phone security code',\n  })\n  newPhoneSecurity?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n            \n                Description\n            \n            \n                User entity.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                isSetPassword\n                            \n                            \n                                login\n                            \n                            \n                                phone\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User registered date at.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:72\n                            \n                        \n\n                \n                    \n                        User registered date at.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User bound E-Mail address.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:46\n                            \n                        \n\n                \n                    \n                        User bound E-Mail address.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:28\n                            \n                        \n\n                \n                    \n                        User ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSetPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Has the user set a password.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:64\n                            \n                        \n\n                \n                    \n                        Has the user set a password.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User login name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:37\n                            \n                        \n\n                \n                    \n                        User login name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User bound Phone full number.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:55\n                            \n                        \n\n                \n                    \n                        User bound Phone full number.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UserProfile\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'The user profile'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:80\n                            \n                        \n\n                \n                    \n                        User profile.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, GraphQLISODateTime, ID, ObjectType } from '@nestjs/graphql';\nimport { Prisma, UserProfile } from '@prisma/client';\nimport { UserProfileEntity } from '../profile/entities/profile.entity';\n\n/**\n * User entity.\n */\n@ObjectType({\n  description: 'User entity',\n})\nexport class UserEntity\n  implements\n    Omit,\n      'password'\n    > {\n  /**\n   * User ID\n   */\n  @Field((type) => ID, {\n    description: 'User ID',\n  })\n  id: string;\n\n  /**\n   * User login name\n   */\n  @Field((type) => String, {\n    nullable: true,\n    description: 'User login name',\n  })\n  login: string;\n\n  /**\n   * User bound E-Mail address.\n   */\n  @Field((type) => String, {\n    nullable: true,\n    description: 'User bound E-Mail address.',\n  })\n  email: string;\n\n  /**\n   * User bound Phone full number.\n   */\n  @Field((type) => String, {\n    nullable: true,\n    description: 'User bound Phone full number.',\n  })\n  phone: string;\n  \n  /**\n   * Has the user set a password.\n   */\n  @Field(() => Boolean, {\n    nullable: true,\n    description: 'Has the user set a password.',\n  })\n  isSetPassword: boolean;\n\n  /**\n   * User registered date at.\n   */\n  @Field((type) => GraphQLISODateTime, {\n    description: 'User registered date at.',\n  })\n  createdAt: Date;\n\n  /**\n   * User profile.\n   */\n  @Field((type) => UserProfileEntity, {\n    description: 'The user profile',\n  })\n  profile: UserProfile;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nSecurityModule\n\nSecurityModule\n\nUserModule -->\n\nSecurityModule->UserModule\n\n\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserModule -->\n\nUserProfileModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n        \n            Description\n        \n        \n            User module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            SecurityModule\n                        \n                        \n                            UserProfileModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { SecurityModule } from 'src/security/security.module';\nimport { UserProfileModule } from './profile/profile.module';\nimport { UserResolver } from './user.resolver';\nimport { UserService } from './user.service';\n\n/**\n * User module.\n */\n@Module({\n  imports: [PrismaModule, UserProfileModule, SecurityModule],\n  providers: [UserService, UserResolver],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserOrderByInput.html":{"url":"classes/UserOrderByInput.html","title":"class - UserOrderByInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserOrderByInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user-order-by.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                login\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-order-by.input.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-order-by.input.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-order-by.input.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-order-by.input.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-order-by.input.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-order-by.input.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserProfileOrderByInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-order-by.input.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { UserProfileOrderByInput } from '../profile/dto/user-profile-order-by.input';\n\n@InputType({ description: 'User order by input' })\nexport class UserOrderByInput implements Prisma.UserOrderByInput {\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  id?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  login?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  email?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  phone?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  password?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  createdAt?: Prisma.SortOrder;\n\n  @Field(() => UserProfileOrderByInput, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  profile?: UserProfileOrderByInput;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileEntity.html":{"url":"classes/UserProfileEntity.html","title":"class - UserProfileEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/entities/profile.entity.ts\n        \n\n            \n                Description\n            \n            \n                User profile entity.\n\n            \n\n\n            \n                Implements\n            \n            \n                            UserProfileEntity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                bio\n                            \n                            \n                                location\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User avatar storage path.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:34\n                            \n                        \n\n                \n                    \n                        User avatar storage path\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User bio.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:43\n                            \n                        \n\n                \n                    \n                        User bio\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User location string.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:52\n                            \n                        \n\n                \n                    \n                        User location string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User name.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:25\n                            \n                        \n\n                \n                    \n                        User name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User profile updated at.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:61\n                            \n                        \n\n                \n                    \n                        User profile updated at\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Profile owner ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:16\n                            \n                        \n\n                \n                    \n                        Profile owner ID\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, GraphQLISODateTime, ID, ObjectType } from '@nestjs/graphql';\n\n/**\n * User profile entity.\n */\n@ObjectType({\n  description: 'User profile entity',\n})\nexport class UserProfileEntity implements UserProfileEntity {\n  /**\n   * Profile owner ID\n   */\n  @Field(() => ID, {\n    description: 'Profile owner ID',\n  })\n  userId: string;\n\n  /**\n   * User name\n   */\n  @Field((type) => String, {\n    description: 'User name.',\n    nullable: true,\n  })\n  name: string;\n\n  /**\n   * User avatar storage path\n   */\n  @Field((type) => String, {\n    description: 'User avatar storage path.',\n    nullable: true,\n  })\n  avatar: string;\n\n  /**\n   * User bio\n   */\n  @Field((type) => String, {\n    description: 'User bio.',\n    nullable: true,\n  })\n  bio: string;\n\n  /**\n   * User location string\n   */\n  @Field((type) => String, {\n    description: 'User location string.',\n    nullable: true,\n  })\n  location: string;\n\n  /**\n   * User profile updated at\n   */\n  @Field((type) => GraphQLISODateTime, {\n    description: 'User profile updated at.',\n    nullable: true,\n  })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserProfileModule.html":{"url":"modules/UserProfileModule.html","title":"module - UserProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    UserProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserProfileModule\n\n\n\ncluster_UserProfileModule_exports\n\n\n\ncluster_UserProfileModule_imports\n\n\n\ncluster_UserProfileModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserProfileModule -->\n\nPrismaModule->UserProfileModule\n\n\n\n\n\nUserProfileService \n\nUserProfileService \n\nUserProfileService  -->\n\nUserProfileModule->UserProfileService \n\n\n\n\n\nUserProfileService\n\nUserProfileService\n\nUserProfileModule -->\n\nUserProfileService->UserProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/profile/profile.module.ts\n        \n\n\n        \n            Description\n        \n        \n            User profile module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserProfileService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserProfileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { UserProfileResolver } from './profile.resolver';\nimport { UserProfileService } from './profile.service';\n\n/**\n * User profile module.\n */\n@Module({\n  imports: [PrismaModule],\n  providers: [UserProfileService, UserProfileResolver],\n  exports: [UserProfileService],\n})\nexport class UserProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileOrderByInput.html":{"url":"classes/UserProfileOrderByInput.html","title":"class - UserProfileOrderByInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileOrderByInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/dto/user-profile-order-by.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                bio\n                            \n                            \n                                    Optional\n                                location\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-order-by.input.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            bio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-order-by.input.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-order-by.input.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-order-by.input.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-order-by.input.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-order-by.input.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\n\n@InputType({ description: 'User profile order by input' })\nexport class UserProfileOrderByInput implements Prisma.UserProfileOrderByInput {\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  userId?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  name?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  avatar?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  bio?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  location?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  updatedAt?: Prisma.SortOrder;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileRelationFilter.html":{"url":"classes/UserProfileRelationFilter.html","title":"class - UserProfileRelationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileRelationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/dto/user-profile-relation.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                is\n                            \n                            \n                                    Optional\n                                isNot\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            is\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserProfileWhereInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'is where input'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-relation.filter.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            isNot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserProfileWhereInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'is not where input'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-relation.filter.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { UserProfileWhereInput } from './user-profile-where.input';\n\n@InputType({ description: 'User profile where filter' })\nexport class UserProfileRelationFilter\n  implements Prisma.UserProfileRelationFilter {\n  @Field(() => UserProfileWhereInput, {\n    nullable: true,\n    description: 'is where input',\n  })\n  is?: UserProfileWhereInput;\n\n  @Field(() => UserProfileWhereInput, {\n    nullable: true,\n    description: 'is not where input',\n  })\n  isNot?: UserProfileWhereInput;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileResolver.html":{"url":"classes/UserProfileResolver.html","title":"class - UserProfileResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/profile.resolver.ts\n        \n\n            \n                Description\n            \n            \n                User prifle entity resolver.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                updateViewerProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileService: UserProfileService, prismaClient: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/user/profile/profile.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            Create user prifle entity resolver\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        UserProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User profile service.\n\n                                                        \n                                                \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateViewerProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViewerProfile(context: ExecutionContext, data: UserProfileUpdateInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Update viewer profile'})@AuthorizationWith()\n                \n            \n\n            \n                \n                    Defined in src/user/profile/profile.resolver.ts:33\n                \n            \n\n\n            \n                \n                    Update viewer profile.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Socfony execution context.\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                UserProfileUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User profile update input.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Mutation, Resolver } from '@nestjs/graphql';\nimport { PrismaClient } from '@prisma/client';\nimport { AuthorizationWith } from 'src/authorization.decorator';\nimport { ExecutionContext } from 'src/execution-context';\nimport { UserProfileUpdateInput } from './dto/profile-update.input';\nimport { UserProfileEntity } from './entities/profile.entity';\nimport { UserProfileService } from './profile.service';\n\n/**\n * User prifle entity resolver.\n */\n@Resolver(() => UserProfileEntity)\nexport class UserProfileResolver {\n  /**\n   * Create user prifle entity resolver\n   * @param profileService User profile service.\n   * @param prismaClient Prisma client.\n   */\n  constructor(\n    private readonly profileService: UserProfileService,\n    private readonly prismaClient: PrismaClient,\n  ) {}\n\n  /**\n   * Update viewer profile.\n   * @param context Socfony execution context.\n   * @param data User profile update input.\n   */\n  @Mutation(() => UserProfileEntity, {\n    description: 'Update viewer profile',\n  })\n  @AuthorizationWith()\n  async updateViewerProfile(\n    @Context() context: ExecutionContext,\n    @Args({\n      name: 'data',\n      type: () => UserProfileUpdateInput,\n      description: 'Viewer profile update data.',\n    })\n    data: UserProfileUpdateInput,\n  ) {\n    const profile = await this.profileService.resolveProfile(context.user);\n    return await this.prismaClient.userProfile.update({\n      where: { userId: profile.userId },\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserProfileService.html":{"url":"injectables/UserProfileService.html","title":"injectable - UserProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/profile.service.ts\n        \n\n            \n                Description\n            \n            \n                User profile service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolveProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/user/profile/profile.service.ts:8\n                            \n                        \n\n                \n                    \n                            Create the user profile service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resolveProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveProfile(user: User | Prisma.UserGetPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/user/profile/profile.service.ts:19\n                \n            \n\n\n            \n                \n                    Resolve user profile.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User | Prisma.UserGetPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        need resolve profile user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma, PrismaClient, User, UserProfile } from '@prisma/client';\n\n/**\n * User profile service.\n */\n@Injectable()\nexport class UserProfileService {\n  /**\n   * Create the user profile service.\n   * @param prisma Prisma client.\n   */\n  constructor(private readonly prisma: PrismaClient) {}\n\n  /**\n   * Resolve user profile.\n   * @param user need resolve profile user.\n   */\n  async resolveProfile(\n    user:\n      | User\n      | Prisma.UserGetPayload,\n  ): Promise {\n    let { profile } = user as Prisma.UserGetPayload;\n    if (profile) {\n      return profile;\n    }\n    profile = await this.prisma.userProfile.findUnique({\n      where: { userId: user.id },\n      rejectOnNotFound: false,\n    });\n    if (profile) {\n      return profile;\n    }\n\n    return await this.prisma.userProfile.create({\n      data: { userId: user.id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileUpdateInput.html":{"url":"classes/UserProfileUpdateInput.html","title":"class - UserProfileUpdateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileUpdateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/dto/profile-update.input.ts\n        \n\n            \n                Description\n            \n            \n                User profile update input\n\n            \n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, OmitType, PartialType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { UserProfileEntity } from '../entities/profile.entity';\n\n/**\n * User profile update input\n */\n@InputType({\n  description: 'User profile update input',\n})\nexport class UserProfileUpdateInput\n  extends OmitType(\n    PartialType(UserProfileEntity),\n    ['updatedAt', 'userId'] as const,\n    InputType,\n  )\n  implements Omit {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileWhereInput.html":{"url":"classes/UserProfileWhereInput.html","title":"class - UserProfileWhereInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileWhereInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/dto/user-profile-where.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                AND\n                            \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                bio\n                            \n                            \n                                    Optional\n                                location\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                NOT\n                            \n                            \n                                    Optional\n                                OR\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            AND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserProfileWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'AND where'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User ID filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            bio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User ID filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User ID filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User ID filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            NOT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserProfileWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'NOT where'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            OR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserProfileWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'OR where'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRelationFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User relation filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User ID filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { StringFilter } from 'src/graphql';\nimport { UserRelationFilter } from 'src/user/dto/user-relation.filter';\n\n@InputType({ description: 'User profile where input' })\nexport class UserProfileWhereInput\n  implements Omit {\n  @Field(() => [UserProfileWhereInput], {\n    nullable: true,\n    description: 'AND where',\n  })\n  AND?: UserProfileWhereInput[];\n\n  @Field(() => [UserProfileWhereInput], {\n    nullable: true,\n    description: 'OR where',\n  })\n  OR?: UserProfileWhereInput[];\n\n  @Field(() => [UserProfileWhereInput], {\n    nullable: true,\n    description: 'NOT where',\n  })\n  NOT?: UserProfileWhereInput[];\n\n  @Field(() => StringFilter, { nullable: true, description: 'User ID filter' })\n  userId?: StringFilter;\n\n  @Field(() => UserRelationFilter, {\n    nullable: true,\n    description: 'User relation filter',\n  })\n  user?: UserRelationFilter;\n\n  @Field(() => StringFilter, { nullable: true, description: 'User ID filter' })\n  name?: StringFilter;\n\n  @Field(() => StringFilter, { nullable: true, description: 'User ID filter' })\n  avatar?: StringFilter;\n\n  @Field(() => StringFilter, { nullable: true, description: 'User ID filter' })\n  bio?: StringFilter;\n\n  @Field(() => StringFilter, { nullable: true, description: 'User ID filter' })\n  location?: StringFilter;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRelationFilter.html":{"url":"classes/UserRelationFilter.html","title":"class - UserRelationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRelationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user-relation.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                is\n                            \n                            \n                                    Optional\n                                isNot\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            is\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserWhereInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User relation filter is'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-relation.filter.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            isNot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserWhereInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User relation filter is not'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-relation.filter.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { UserWhereInput } from './user-where.input';\n\n@InputType({\n  description: 'User Relation filter',\n})\nexport class UserRelationFilter implements Prisma.UserRelationFilter {\n  @Field(() => UserWhereInput, {\n    nullable: true,\n    description: 'User relation filter is',\n  })\n  is?: UserWhereInput;\n\n  @Field(() => UserWhereInput, {\n    nullable: true,\n    description: 'User relation filter is not',\n  })\n  isNot?: UserWhereInput;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.resolver.ts\n        \n\n            \n                Description\n            \n            \n                User entity resolver\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                isSetPassword\n                            \n                            \n                                phone\n                            \n                            \n                                profile\n                            \n                            \n                                    Async\n                                updateViewer\n                            \n                            \n                                user\n                            \n                            \n                                viewer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaClient: PrismaClient, userService: UserService, userProfileService: UserProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.resolver.ts:42\n                            \n                        \n\n                \n                    \n                            Create user entity resolver.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User service.\n\n                                                        \n                                                \n                                                \n                                                        userProfileService\n                                                  \n                                                        \n                                                                        UserProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            email\n                        \n                        \n                    \n                \n            \n            \n                \nemail(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user/user.resolver.ts:73\n                \n            \n\n\n            \n                \n                    Resolve viewer email field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent context user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nisSetPassword(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user/user.resolver.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            phone\n                        \n                        \n                    \n                \n            \n            \n                \nphone(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user/user.resolver.ts:59\n                \n            \n\n\n            \n                \n                    Resolver viewer phone field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent context user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            profile\n                        \n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user/user.resolver.ts:92\n                \n            \n\n\n            \n                \n                    Resolve user profile field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent context user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateViewer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViewer(context: ExecutionContext, args: UpdateViewerArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Update viewer'})@AuthorizationWith()\n                \n            \n\n            \n                \n                    Defined in src/user/user.resolver.ts:117\n                \n            \n\n\n            \n                \n                    Update viewer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Scofony exection context\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                                UpdateViewerArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Update viewer args.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            user\n                        \n                        \n                    \n                \n            \n            \n                \nuser(where: UserWhereUniqueInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {description: 'query where.'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.resolver.ts:185\n                \n            \n\n\n            \n                \n                    Query a user where unique\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                                UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Query a user where unique\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            viewer\n                        \n                        \n                    \n                \n            \n            \n                \nviewer(context: ExecutionContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {description: 'Query the HTTP endpoint Authorization user.'})@AuthorizationWith()\n                \n            \n\n            \n                \n                    Defined in src/user/user.resolver.ts:104\n                \n            \n\n\n            \n                \n                    Query the HTTP endpoint Authorization user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Socfony execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Args,\n  Mutation,\n  Parent,\n  Query,\n  ResolveField,\n  Resolver,\n} from '@nestjs/graphql';\nimport { PrismaClient, User } from '@prisma/client';\nimport { USER_NOT_FOUND } from 'src/constants';\nimport { UserWhereUniqueInput } from './dto';\nimport { UserEntity } from './entities/user.entity';\nimport {\n  SECURITY_COMPARE_FAILED,\n  USER_EMAIL_FIELD_EXISTED,\n  USER_LOGIN_FIELD_EXISTED,\n  USER_PHONE_FIELD_EXISTED,\n} from 'src/constants';\nimport { UserService } from './user.service';\nimport { AuthorizationWith } from 'src/authorization.decorator';\nimport { Context } from 'src/context.decorator';\nimport { ExecutionContext } from 'src/execution-context';\nimport { UpdateViewerArgs } from './dto/update-viewer.args';\nimport { PasswordHelper } from 'src/helper';\nimport { UserSecurityCompareType } from './enums';\nimport { UserProfileEntity } from './profile/entities/profile.entity';\nimport { UserProfileService } from './profile/profile.service';\n\n/**\n * User error codes.\n */\nconst constants = {\n  USER_LOGIN_FIELD_EXISTED,\n  USER_PHONE_FIELD_EXISTED,\n  USER_EMAIL_FIELD_EXISTED,\n};\n\n/**\n * User entity resolver\n */\n@Resolver(() => UserEntity)\nexport class UserResolver {\n  /**\n   * Create user entity resolver.\n   * @param userService User service.\n   * @param prismaClient Prisma client.\n   */\n  constructor(\n    private readonly prismaClient: PrismaClient,\n    private readonly userService: UserService,\n    private readonly userProfileService: UserProfileService,\n  ) {}\n\n  /**\n   * Resolver viewer phone field.\n   * @param user Parent context user.\n   */\n  @ResolveField(() => String)\n  phone(@Parent() user: User) {\n    const { phone } = user;\n    if (phone) {\n      return phone.replace(/(.*)\\d{4}(\\d{4})/, '$1****$2');\n    }\n\n    return phone;\n  }\n\n  /**\n   * Resolve viewer email field.\n   * @param user Parent context user.\n   */\n  @ResolveField(() => String)\n  email(@Parent() user: User) {\n    const { email } = user;\n    if (email) {\n      return email.replace(/^(\\w{1}).*?(\\w{1}?)\\@(.*)$/, '$1***$2@$3');\n    }\n\n    return email;\n  }\n\n  @ResolveField(() => Boolean)\n  isSetPassword(@Parent() user: User) {\n    return !!user.password;\n  }\n\n  /**\n   * Resolve user profile field.\n   * @param user Parent context user.\n   */\n  @ResolveField(() => UserProfileEntity)\n  profile(@Parent() user: User) {\n    return this.userProfileService.resolveProfile(user);\n  }\n\n  /**\n   * Query the HTTP endpoint Authorization user.\n   * @param context Socfony execution context.\n   */\n  @Query(() => UserEntity, {\n    description: 'Query the HTTP endpoint Authorization user.',\n  })\n  @AuthorizationWith()\n  viewer(@Context() context: ExecutionContext) {\n    return context.user;\n  }\n\n  /**\n   * Update viewer.\n   * @param context Scofony exection context\n   * @param args Update viewer args.\n   */\n  @Mutation(() => UserEntity, {\n    description: 'Update viewer',\n  })\n  @AuthorizationWith()\n  async updateViewer(\n    @Context() context: ExecutionContext,\n    @Args({\n      type: () => UpdateViewerArgs,\n      description: 'Update viewer args.',\n    })\n    args: UpdateViewerArgs,\n  ) {\n    const { data, security, type, newPhoneSecurity } = args;\n    const { user } = context;\n    for await (const key of Object.keys(data)) {\n      // Convert to password hash\n      if (key === 'password') {\n        data[key] = await PasswordHelper.hash(data[key]);\n        continue;\n      }\n\n      // Check whether the unique field is used by other users\n      const other = await this.prismaClient.user.findUnique({\n        where: { [key]: data[key] },\n        rejectOnNotFound: false,\n      });\n      if (other && other.id !== user.id) {\n        throw new Error(constants[`USER_${key.toUpperCase()}_FIELD_EXISTED`]);\n      }\n\n      // Check whether the new mobile phone number verification code matches\n      if (key === 'phone' && data[key] !== user.phone) {\n        const compared = await this.userService.compareSecurity(\n          Object.assign({}, user, { phone: data[key] }),\n          UserSecurityCompareType.SMS_CODE,\n          newPhoneSecurity,\n        );\n        if (compared) {\n          if (compared instanceof Function) {\n            compared();\n          }\n          continue;\n        }\n\n        throw new Error(SECURITY_COMPARE_FAILED);\n      }\n    }\n    const compared = await this.userService.compareSecurity(\n      user,\n      type,\n      security,\n    );\n    if (compared) {\n      if (compared instanceof Function) {\n        compared();\n      }\n      return (context.user = await this.prismaClient.user.update({\n        where: { id: user.id },\n        data,\n      }));\n    }\n\n    throw new Error(SECURITY_COMPARE_FAILED);\n  }\n\n  /**\n   * Query a user where unique\n   * @param where Query a user where unique\n   */\n  @Query(() => UserEntity, {\n    description: 'query where.',\n  })\n  user(\n    @Args({\n      name: 'where',\n      type: () => UserWhereUniqueInput,\n      description: 'query where',\n    })\n    where: UserWhereUniqueInput,\n  ) {\n    return this.prismaClient.user.findUnique({\n      where,\n      rejectOnNotFound: () => new Error(USER_NOT_FOUND),\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n            \n                Description\n            \n            \n                User service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                comparePassword\n                            \n                            \n                                    Async\n                                compareSecurity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(securitySmsService: SecuritySmsService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            Create user service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        securitySmsService\n                                                  \n                                                        \n                                                                        SecuritySmsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Security SMS service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            comparePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    comparePassword(user: User, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:23\n                \n            \n\n\n            \n                \n                    Compore user password.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Need compare password user.\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        input password.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            compareSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    compareSecurity(user: User, type: UserSecurityCompareType, security: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:34\n                \n            \n\n\n            \n                \n                    Compare secuity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Need compare user.\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                UserSecurityCompareType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        compare type.\n\n                                    \n                                \n                                \n                                    security\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Security object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { User } from '@prisma/client';\nimport { PasswordHelper } from 'src/helper';\nimport { SecuritySmsService } from 'src/security/security-sms.service';\nimport { UserSecurityCompareType } from './enums';\n\n/**\n * User service.\n */\n@Injectable()\nexport class UserService {\n  /**\n   * Create user service.\n   * @param securitySmsService Security SMS service.\n   */\n  constructor(private readonly securitySmsService: SecuritySmsService) {}\n\n  /**\n   * Compore user password.\n   * @param user Need compare password user.\n   * @param password input password.\n   */\n  async comparePassword(user: User, password: string): Promise {\n    if (!user?.password) return false;\n    return await PasswordHelper.compare(password, user.password);\n  }\n\n  /**\n   * Compare secuity.\n   * @param user Need compare user.\n   * @param type compare type.\n   * @param security Security object.\n   */\n  async compareSecurity(\n    user: User,\n    type: UserSecurityCompareType,\n    security: string,\n  ): Promise {\n    switch (type) {\n      case UserSecurityCompareType.PASSWORD:\n        return await this.comparePassword(user, security);\n      case UserSecurityCompareType.SMS_CODE:\n        const value = await this.securitySmsService.compareCode(\n          user.phone,\n          security,\n        );\n        if (value) {\n          return () => this.securitySmsService.updateCodeToUsed(value);\n        }\n        return false;\n      default:\n        return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserUpdateInput.html":{"url":"classes/UserUpdateInput.html","title":"class - UserUpdateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserUpdateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user-update.input.ts\n        \n\n            \n                Description\n            \n            \n                User update input.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Pick\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User new password', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-update.input.ts:25\n                            \n                        \n\n                \n                    \n                        User new password.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, PartialType, PickType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { UserEntity } from '../entities/user.entity';\n\n/**\n * User update input.\n */\n@InputType({\n  description: 'User update input',\n})\nexport class UserUpdateInput\n  extends PartialType(\n    PickType(UserEntity, ['email', 'login', 'phone']),\n    InputType,\n  )\n  implements\n    Pick {\n  /**\n   * User new password.\n   */\n  @Field(() => String, {\n    description: 'User new password',\n    nullable: true,\n  })\n  password?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserWhereInput.html":{"url":"classes/UserWhereInput.html","title":"class - UserWhereInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserWhereInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user-where.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                AND\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                login\n                            \n                            \n                                    Optional\n                                moments\n                            \n                            \n                                    Optional\n                                NOT\n                            \n                            \n                                    Optional\n                                OR\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            AND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'AND where'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DateTimeFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'created at date time filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'E-Mail filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'ID filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'login name filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            moments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentListRelationFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'user moment list relation filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            NOT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'NOT where'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            OR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'OR where'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'user phone numberfilter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserProfileRelationFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'user profile relation filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { DateTimeFilter, StringFilter } from 'src/graphql';\nimport { MomentListRelationFilter } from 'src/moment/dto/moment-list-relation.filter';\nimport { UserProfileRelationFilter } from '../profile/dto/user-profile-relation.filter';\n\n@InputType({\n  description: 'User where input',\n})\nexport class UserWhereInput\n  implements Omit {\n  @Field(() => [UserWhereInput], { nullable: true, description: 'AND where' })\n  AND?: UserWhereInput[];\n\n  @Field(() => [UserWhereInput], { nullable: true, description: 'OR where' })\n  OR?: UserWhereInput[];\n\n  @Field(() => [UserWhereInput], { nullable: true, description: 'NOT where' })\n  NOT?: UserWhereInput[];\n\n  @Field(() => StringFilter, { nullable: true, description: 'ID filter' })\n  id?: StringFilter;\n\n  @Field(() => StringFilter, {\n    nullable: true,\n    description: 'login name filter',\n  })\n  login?: StringFilter;\n\n  @Field(() => StringFilter, { nullable: true, description: 'E-Mail filter' })\n  email?: StringFilter;\n\n  @Field(() => StringFilter, {\n    nullable: true,\n    description: 'user phone numberfilter',\n  })\n  phone?: StringFilter;\n\n  @Field(() => DateTimeFilter, {\n    nullable: true,\n    description: 'created at date time filter',\n  })\n  createdAt?: DateTimeFilter;\n\n  @Field(() => UserProfileRelationFilter, {\n    nullable: true,\n    description: 'user profile relation filter',\n  })\n  profile?: UserProfileRelationFilter;\n\n  @Field(() => UserProfileRelationFilter, {\n    nullable: true,\n    description: 'user moment list relation filter',\n  })\n  moments?: MomentListRelationFilter;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserWhereUniqueInput.html":{"url":"classes/UserWhereUniqueInput.html","title":"class - UserWhereUniqueInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserWhereUniqueInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user-where-unique.input.ts\n        \n\n            \n                Description\n            \n            \n                User where inique input\n\n            \n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ID, InputType, PartialType, PickType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { UserEntity } from '../entities/user.entity';\n\n/**\n * User where inique input\n */\n@InputType({\n  description: 'User where inique input',\n})\nexport class UserWhereUniqueInput\n  extends PickType(\n    PartialType(UserEntity),\n    ['id', 'login', 'email', 'phone'] as const,\n    InputType,\n  )\n  implements Prisma.UserWhereUniqueInput {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.config.ts\n            \n            interface\n            SocfonyConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            function\n            getConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            function\n            loadConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/authorization-token.resolver.ts\n            \n            class\n            AuthorizationTokenEntityResolver\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/authorization-token/authorization-token.service.ts\n            \n            injectable\n            AuthorizationTokenService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_METADATA_HAS_AUTHORIZATION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_METADATA_HAS_AUTHORIZATION_TYPE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_DEFAULT_EXPIRED_IN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_DEFAULT_EXPIRED_UNIT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_IN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_UNIT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_VVALIDITY_PERIOD_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/dto/create-authorization-token.args.ts\n            \n            class\n            CreateAuthorizationTokenArgs\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/authorization-token/entities/authorization-token.entity.ts\n            \n            class\n            AuthorizationTokenEntity\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/authorization-token/types.ts\n            \n            interface\n            AuthorizationTokenValidityPeriod\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/authorization.decorator.ts\n            \n            interface\n            AuthDecoratorOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/authorization.decorator.ts\n            \n            function\n            Authorization\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization.decorator.ts\n            \n            variable\n            AuthorizationWith\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization.decorator.ts\n            \n            variable\n            AuthorizationWithout\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization.guard.ts\n            \n            guard\n            AuthorizationGuard\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            AUTHORIZATION_TOKEN_NOT_FOUND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            MEDIA_TYPE_DONT_SUPPORTED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            MOMENT_NOT_FOUND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            SECURITY_COMPARE_FAILED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            UNAUTHORIZED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_EMAIL_FIELD_EXISTED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_LOGIN_FIELD_EXISTED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_NOT_FOUND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_NOT_SET_PHONE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_PHONE_FIELD_EXISTED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/context.decorator.ts\n            \n            variable\n            Context\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/execution-context.ts\n            \n            class\n            ExecutionContext\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/graphql/filters/date-time.filter.ts\n            \n            class\n            DateTimeFilter\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/graphql/filters/string.filter.ts\n            \n            class\n            StringFilter\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/graphql/graphql.module.ts\n            \n            variable\n            GraphQLModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            alphabet\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            custom\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            id\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            numeral\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            readability\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/password.helper.ts\n            \n            function\n            compare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/password.helper.ts\n            \n            function\n            hash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/moment/dto/moment-find-first.args.ts\n            \n            class\n            MomentFindFirstArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/moment/dto/moment-find-many.args.ts\n            \n            class\n            MomentFindManyArgs\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/moment/dto/moment-list-relation.filter.ts\n            \n            class\n            MomentListRelationFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/moment/dto/moment-order-by.input.ts\n            \n            class\n            MomentOrderByInput\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/moment/dto/moment-where-unique.input.ts\n            \n            class\n            MomentWhereUniqueInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/moment/dto/moment-where.input.ts\n            \n            class\n            MomentWhereInput\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/moment/entities/media.entity.ts\n            \n            class\n            MomentAudioMedia\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/moment/entities/media.entity.ts\n            \n            class\n            MomentImageMedia\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/moment/entities/media.entity.ts\n            \n            class\n            MomentMediaCommon\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/moment/entities/media.entity.ts\n            \n            class\n            MomentVideoMedia\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/moment/entities/media.entity.ts\n            \n            variable\n            MomentMedia\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/moment/entities/moment.entity.ts\n            \n            class\n            MomentEntity\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/moment/moment.resolver.ts\n            \n            class\n            MomentResolver\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/prisma/middleware/logger.middleware.ts\n            \n            function\n            PrismaLoggerMiddleware\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.module.ts\n            \n            variable\n            client\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/security/security-sms.resolver.ts\n            \n            class\n            SecuritySmsResolver\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/security/security-sms.service.ts\n            \n            injectable\n            SecuritySmsService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/tencent-cloud/common/index.ts\n            \n            function\n            getCredential\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tencent-cloud/cos/cos.resolver.ts\n            \n            class\n            TencentCloudCosResolver\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/tencent-cloud/cos/entities/cos.entity.ts\n            \n            class\n            TencentCloudCosCredentials\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/tencent-cloud/cos/soc.service.ts\n            \n            injectable\n            TencentCloudCosService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/tencent-cloud/sms/sms.service.ts\n            \n            injectable\n            TencentCloudSmsService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/tencent-cloud/sts/entities/sts.entity.ts\n            \n            class\n            TencentCloudStsCredentials\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/tencent-cloud/sts/entities/sts.entity.ts\n            \n            class\n            TencentCloudStsFederationToken\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/tencent-cloud/sts/sts.service.ts\n            \n            injectable\n            TencentCloudStsService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/user/dto/update-viewer.args.ts\n            \n            class\n            UpdateViewerArgs\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/dto/user-order-by.input.ts\n            \n            class\n            UserOrderByInput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/dto/user-relation.filter.ts\n            \n            class\n            UserRelationFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/user-update.input.ts\n            \n            class\n            UserUpdateInput\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/user/dto/user-where-unique.input.ts\n            \n            class\n            UserWhereUniqueInput\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/dto/user-where.input.ts\n            \n            class\n            UserWhereInput\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            UserEntity\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/user/profile/dto/profile-update.input.ts\n            \n            class\n            UserProfileUpdateInput\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/profile/dto/user-profile-order-by.input.ts\n            \n            class\n            UserProfileOrderByInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/profile/dto/user-profile-relation.filter.ts\n            \n            class\n            UserProfileRelationFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/profile/dto/user-profile-where.input.ts\n            \n            class\n            UserProfileWhereInput\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/profile/entities/profile.entity.ts\n            \n            class\n            UserProfileEntity\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/user/profile/profile.resolver.ts\n            \n            class\n            UserProfileResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/profile/profile.service.ts\n            \n            injectable\n            UserProfileService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/user/user.resolver.ts\n            \n            variable\n            constants\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (4/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.12\n        \n            @nestjs/core : ^7.6.12\n        \n            @nestjs/graphql : ^7.9.9\n        \n            @nestjs/platform-express : ^7.6.12\n        \n            @prisma/client : ^2.17.0\n        \n            apollo-server-express : ^2.21.0\n        \n            bcrypt : ^5.0.0\n        \n            class-transformer : ^0.3.2\n        \n            class-validator : ^0.13.1\n        \n            dayjs : ^1.10.4\n        \n            dotenv : ^8.2.0\n        \n            express : ^4.17.1\n        \n            graphql : ^15.5.0\n        \n            nanoid : ^3.1.20\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^6.6.3\n        \n            tencentcloud-sdk-nodejs : ^4.0.65\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllowUploadFileType   (src/.../cos.resolver.ts)\n                        \n                        \n                            HasTokenExpiredType   (src/.../enums.ts)\n                        \n                        \n                            MomentMediaType   (src/.../media.entity.ts)\n                        \n                        \n                            UserSecurityCompareType   (src/.../enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tencent-cloud/cos/cos.resolver.ts\n    \n        \n            \n                \n                    \n                        \n                        AllowUploadFileType\n                    \n                \n                    \n                        \n                            Allow upload File MIME-type.\n\n                        \n                    \n                        \n                            \n                                 JPG\n                            \n                        \n                        \n                            \n                                Value : .jpg\n                            \n                        \n                        \n                            \n                                 PNG\n                            \n                        \n                        \n                            \n                                Value : .png\n                            \n                        \n                        \n                            \n                                 GIF\n                            \n                        \n                        \n                            \n                                Value : .gif\n                            \n                        \n                        \n                            \n                                 MP4\n                            \n                        \n                        \n                            \n                                Value : .mp4\n                            \n                        \n                        \n                            \n                                 OGG\n                            \n                        \n                        \n                            \n                                Value : .ogg\n                            \n                        \n                        \n                            \n                                 MP3\n                            \n                        \n                        \n                            \n                                Value : .mp3\n                            \n                        \n                        \n                            \n                                 WAV\n                            \n                        \n                        \n                            \n                                Value : .wav\n                            \n                        \n            \n        \n\n    src/authorization-token/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        HasTokenExpiredType\n                    \n                \n                    \n                        \n                            AuthorizationToken has expired type.\n\n                        \n                    \n                        \n                            \n                                 AUTH\n                            \n                        \n                        \n                            \n                                 REFRESH\n                            \n                        \n            \n        \n\n    src/moment/entities/media.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        MomentMediaType\n                    \n                \n                    \n                        \n                            Media type.\n\n                        \n                    \n                        \n                            \n                                 VIDEO\n                            \n                        \n                        \n                            \n                                 IMAGE\n                            \n                        \n                        \n                            \n                                 AUDIO\n                            \n                        \n            \n        \n\n    src/user/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        UserSecurityCompareType\n                    \n                \n                    \n                        \n                            User security compare type.\n\n                        \n                    \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                 SMS_CODE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Authorization   (src/.../authorization.decorator.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            compare   (src/.../password.helper.ts)\n                        \n                        \n                            getConfig   (src/.../app.config.ts)\n                        \n                        \n                            getCredential   (src/.../index.ts)\n                        \n                        \n                            hash   (src/.../password.helper.ts)\n                        \n                        \n                            loadConfig   (src/.../app.config.ts)\n                        \n                        \n                            PrismaLoggerMiddleware   (src/.../logger.middleware.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/authorization.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Authorization\n                        \n                        \n                    \n                \n            \n            \n                \nAuthorization(options?)\n                \n            \n\n\n\n\n            \n                \n                    Need validate HTTP endpoint Authorization token decorator.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Create SOcfony bootstrap.\n\n\n                \n            \n        \n    \n    src/helper/password.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            compare\n                        \n                        \n                    \n                \n            \n            \n                \ncompare(password, encrypted)\n                \n            \n\n\n\n\n            \n                \n                    Compare password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        password text.\n\n                                    \n                                \n                                \n                                    encrypted\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        encrpyted password text.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hash\n                        \n                        \n                    \n                \n            \n            \n                \nhash(password)\n                \n            \n\n\n\n\n            \n                \n                    Create a password encrpyted hash text.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        password text.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n\n\n            \n                \n                    Get app config.\n\n\n                    \n                    \n                    \n                        Returns :         SocfonyConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConfig\n                        \n                        \n                    \n                \n            \n            \n                \nloadConfig(path?)\n                \n            \n\n\n\n\n            \n                \n                    Load Socfony ENV config file.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        ENV file path.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/tencent-cloud/common/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getCredential\n                        \n                        \n                    \n                \n            \n            \n                \ngetCredential()\n                \n            \n\n\n\n\n            \n                \n                    Get Tencent Cloud common credential.\n\n\n                    \n                        Returns :     Credential\n\n                    \n                \n            \n        \n    \n    src/prisma/middleware/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PrismaLoggerMiddleware\n                        \n                        \n                    \n                \n            \n            \n                \nPrismaLoggerMiddleware(logger)\n                \n            \n\n\n\n\n            \n                \n                    Create Prisma logger middleware helper.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    logger\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Logger\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Prisma.Middleware\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSocfony\nSocfony is a full-stack open source software that builds full-platform application with social networking as the core. Socfony plugin mechanism allows more developers or teams to write more functions for it, can help you solve the complexity of developing full-platform software.\n\n\n\n\nEcosystem\n\n\n\nProject\nStatus\nDescription\n\n\n\n\nSocfony App\n\nSocfony App with Flutter\n\n\n\nDocumentation\nNo document has been written yet.\nLicense\nSocfony is BSD-3-Clause licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBSD 3-Clause License\nCopyright (c) 2021, Byte Gem\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\nNeither the name of the copyright holder nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationTokenModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MomentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SecurityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TencentCloudModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthorizationTokenModule\n\n\n\ncluster_AuthorizationTokenModule_exports\n\n\n\ncluster_AuthorizationTokenModule_providers\n\n\n\ncluster_SecurityModule\n\n\n\ncluster_SecurityModule_exports\n\n\n\ncluster_SecurityModule_providers\n\n\n\ncluster_TencentCloudModule\n\n\n\ncluster_TencentCloudModule_exports\n\n\n\ncluster_TencentCloudModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserProfileModule\n\n\n\ncluster_UserProfileModule_exports\n\n\n\ncluster_UserProfileModule_providers\n\n\n\n\nAuthorizationTokenModule\n\nAuthorizationTokenModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorizationTokenModule->AppModule\n\n\n\n\n\nAuthorizationTokenService \n\nAuthorizationTokenService \n\nAuthorizationTokenService  -->\n\nAuthorizationTokenModule->AuthorizationTokenService \n\n\n\n\n\nMomentModule\n\nMomentModule\n\nAppModule -->\n\nMomentModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthorizationTokenModule -->\n\nPrismaModule->AuthorizationTokenModule\n\n\n\nMomentModule -->\n\nPrismaModule->MomentModule\n\n\n\n\n\nSecurityModule\n\nSecurityModule\n\nSecurityModule -->\n\nPrismaModule->SecurityModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserProfileModule -->\n\nPrismaModule->UserProfileModule\n\n\n\nUserModule -->\n\nSecurityModule->UserModule\n\n\n\nAppModule -->\n\nSecurityModule->AppModule\n\n\n\n\n\nSecuritySmsService \n\nSecuritySmsService \n\nSecuritySmsService  -->\n\nSecurityModule->SecuritySmsService \n\n\n\n\n\nTencentCloudModule\n\nTencentCloudModule\n\nSecurityModule -->\n\nTencentCloudModule->SecurityModule\n\n\n\nAppModule -->\n\nTencentCloudModule->AppModule\n\n\n\n\n\nTencentCloudCosService \n\nTencentCloudCosService \n\nTencentCloudCosService  -->\n\nTencentCloudModule->TencentCloudCosService \n\n\n\n\n\nTencentCloudSmsService \n\nTencentCloudSmsService \n\nTencentCloudSmsService  -->\n\nTencentCloudModule->TencentCloudSmsService \n\n\n\n\n\nTencentCloudStsService \n\nTencentCloudStsService \n\nTencentCloudStsService  -->\n\nTencentCloudModule->TencentCloudStsService \n\n\n\nAuthorizationTokenModule -->\n\nUserModule->AuthorizationTokenModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthorizationTokenService\n\nAuthorizationTokenService\n\nAuthorizationTokenModule -->\n\nAuthorizationTokenService->AuthorizationTokenModule\n\n\n\n\n\nSecuritySmsService\n\nSecuritySmsService\n\nSecurityModule -->\n\nSecuritySmsService->SecurityModule\n\n\n\n\n\nTencentCloudCosService\n\nTencentCloudCosService\n\nTencentCloudModule -->\n\nTencentCloudCosService->TencentCloudModule\n\n\n\n\n\nTencentCloudSmsService\n\nTencentCloudSmsService\n\nTencentCloudModule -->\n\nTencentCloudSmsService->TencentCloudModule\n\n\n\n\n\nTencentCloudStsService\n\nTencentCloudStsService\n\nTencentCloudModule -->\n\nTencentCloudStsService->TencentCloudModule\n\n\n\nUserModule -->\n\nUserProfileModule->UserModule\n\n\n\n\n\nUserProfileService \n\nUserProfileService \n\nUserProfileService  -->\n\nUserProfileModule->UserProfileService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nUserProfileService\n\nUserProfileService\n\nUserProfileModule -->\n\nUserProfileService->UserProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    37 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            alphabet   (src/.../id.helper.ts)\n                        \n                        \n                            AUTH_METADATA_HAS_AUTHORIZATION   (src/.../constants.ts)\n                        \n                        \n                            AUTH_METADATA_HAS_AUTHORIZATION_TYPE   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_DEFAULT_EXPIRED_IN   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_DEFAULT_EXPIRED_UNIT   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_IN   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_UNIT   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_VVALIDITY_PERIOD_KEY   (src/.../constants.ts)\n                        \n                        \n                            AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE   (src/.../constants.ts)\n                        \n                        \n                            AUTHORIZATION_TOKEN_NOT_FOUND   (src/.../constants.ts)\n                        \n                        \n                            AuthorizationWith   (src/.../authorization.decorator.ts)\n                        \n                        \n                            AuthorizationWithout   (src/.../authorization.decorator.ts)\n                        \n                        \n                            client   (src/.../prisma.module.ts)\n                        \n                        \n                            constants   (src/.../user.resolver.ts)\n                        \n                        \n                            Context   (src/.../context.decorator.ts)\n                        \n                        \n                            custom   (src/.../id.helper.ts)\n                        \n                        \n                            GraphQLModule   (src/.../graphql.module.ts)\n                        \n                        \n                            id   (src/.../id.helper.ts)\n                        \n                        \n                            MEDIA_TYPE_DONT_SUPPORTED   (src/.../constants.ts)\n                        \n                        \n                            MOMENT_NOT_FOUND   (src/.../constants.ts)\n                        \n                        \n                            MomentMedia   (src/.../media.entity.ts)\n                        \n                        \n                            numeral   (src/.../id.helper.ts)\n                        \n                        \n                            readability   (src/.../id.helper.ts)\n                        \n                        \n                            SECURITY_COMPARE_FAILED   (src/.../constants.ts)\n                        \n                        \n                            UNAUTHORIZED   (src/.../constants.ts)\n                        \n                        \n                            USER_EMAIL_FIELD_EXISTED   (src/.../constants.ts)\n                        \n                        \n                            USER_LOGIN_FIELD_EXISTED   (src/.../constants.ts)\n                        \n                        \n                            USER_NOT_FOUND   (src/.../constants.ts)\n                        \n                        \n                            USER_NOT_SET_PHONE   (src/.../constants.ts)\n                        \n                        \n                            USER_PHONE_FIELD_EXISTED   (src/.../constants.ts)\n                        \n                        \n                               (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/helper/id.helper.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            alphabet\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n    customAlphabet('qwertyuiopasdfghjklzxcvbnm', size)()\n                        \n                    \n\n                \n                    \n                        Generate alphabet(a-z) ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            custom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (alphabet: string, size: number) =>\n    customAlphabet(alphabet, size)()\n                        \n                    \n\n                \n                    \n                        Generate a custom alphabet ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string => nanoid(size)\n                        \n                    \n\n                \n                    \n                        Generate secure URL-friendly unique ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numeral\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n    customAlphabet('0123456789', size)()\n                        \n                    \n\n                \n                    \n                        Generate numeral ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readability\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n    customAlphabet('23456789qwertyupasdfghjklzxcvbnm', size)()\n                        \n                    \n\n                \n                    \n                        Generate readability(23456789qwertyupasdfghjklzxcvbnm) ID.\n\n                    \n                \n\n            \n        \n\n    src/authorization-token/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_METADATA_HAS_AUTHORIZATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'metadata has authorization'\n                        \n                    \n\n                \n                    \n                        metadata has authorization\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_METADATA_HAS_AUTHORIZATION_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'metadata has authorization type'\n                        \n                    \n\n                \n                    \n                        metadata has authorization type\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_DEFAULT_EXPIRED_IN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n                \n                    \n                        token default expired in.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_DEFAULT_EXPIRED_UNIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'days'\n                        \n                    \n\n                \n                    \n                        token default expired in unit type.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_IN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n                \n                    \n                        token default refresh expired in.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_UNIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'months'\n                        \n                    \n\n                \n                    \n                        token default refresh expired in unit type.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_VVALIDITY_PERIOD_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'auth token validity period key'\n                        \n                    \n\n                \n                    \n                        auth token validity period key\n\n                    \n                \n\n            \n        \n\n    src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE'\n                        \n                    \n\n                \n                    \n                        Authorization Token create user where allow one\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTHORIZATION_TOKEN_NOT_FOUND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'AUTHORIZATION_TOKEN_NOT_FOUND'\n                        \n                    \n\n                \n                    \n                        Authorization Token Not Found\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MEDIA_TYPE_DONT_SUPPORTED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'MEDIA_TYPE_DONT_SUPPORTED'\n                        \n                    \n\n                \n                    \n                        Don't supported media type.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MOMENT_NOT_FOUND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'MOMENT_NOT_FOUND'\n                        \n                    \n\n                \n                    \n                        Moment not found.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SECURITY_COMPARE_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SECURITY_COMPARE_FAILED'\n                        \n                    \n\n                \n                    \n                        security code validate error\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UNAUTHORIZED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'UNAUTHORIZED'\n                        \n                    \n\n                \n                    \n                        User unauthorized\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_EMAIL_FIELD_EXISTED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_EMAIL_FIELD_EXISTED'\n                        \n                    \n\n                \n                    \n                        user email existed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_LOGIN_FIELD_EXISTED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_LOGIN_FIELD_EXISTED'\n                        \n                    \n\n                \n                    \n                        User login existed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NOT_FOUND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_NOT_FOUND'\n                        \n                    \n\n                \n                    \n                        User not found\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NOT_SET_PHONE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_NOT_SET_PHONE'\n                        \n                    \n\n                \n                    \n                        User not set phone.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_PHONE_FIELD_EXISTED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_PHONE_FIELD_EXISTED'\n                        \n                    \n\n                \n                    \n                        user phone existed.\n\n                    \n                \n\n            \n        \n\n    src/authorization.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthorizationWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () =>\n  Authorization({\n    hasAuthorization: true,\n    type: HasTokenExpiredType.AUTH,\n  })\n                        \n                    \n\n                \n                    \n                        Http auth validate token.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AuthorizationWithout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () =>\n  Authorization({\n    hasAuthorization: false,\n    type: HasTokenExpiredType.AUTH,\n  })\n                        \n                    \n\n                \n                    \n                        Http auth, without validate token.\n\n                    \n                \n\n            \n        \n\n    src/prisma/prisma.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassProvider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: PrismaClient,\n  useClass: class\n    extends PrismaClient\n    implements OnModuleInit, OnModuleDestroy {\n    private readonly logger = new Logger('Prisma');\n\n    /**\n     * Prisma client constructor\n     */\n    constructor() {\n      super({\n        datasources: {\n          database: { url: process.env.DATABASE_URL },\n        },\n      });\n    }\n\n    /**\n     * NestJS module init hook callback.\n     */\n    async onModuleInit() {\n      // Prisma connect database.\n      await this.$connect();\n\n      // Set Prisma client global logger middleware.\n      this.$use(PrismaLoggerMiddleware(this.logger));\n    }\n\n    /**\n     * NestJS module destory hook callback.\n     */\n    async onModuleDestroy() {\n      // Prisma disconnect database.\n      await this.$disconnect();\n    }\n  },\n}\n                        \n                    \n\n                \n                    \n                        Prisma class provider\n\n                    \n                \n\n            \n        \n\n    src/user/user.resolver.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            constants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  USER_LOGIN_FIELD_EXISTED,\n  USER_PHONE_FIELD_EXISTED,\n  USER_EMAIL_FIELD_EXISTED,\n}\n                        \n                    \n\n                \n                    \n                        User error codes.\n\n                    \n                \n\n            \n        \n\n    src/context.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator(function (\n  _data: unknown,\n  context: ExecutionContext,\n): IContext {\n  if (context.getType() === 'graphql') {\n    return GqlExecutionContext.create(context).getContext();\n  }\n\n  return context.switchToHttp().getRequest().context;\n})\n                        \n                    \n\n                \n                    \n                        Get Socfony execution context decorator.\n\n                    \n                \n\n            \n        \n\n    src/graphql/graphql.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GraphQLModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : _.forRootAsync({\n  imports: [PrismaModule],\n  inject: [PrismaClient],\n  useFactory(prisma: PrismaClient) {\n    const options = getConfig();\n    return {\n      autoSchemaFile: options.isProduction ? true : 'schema.graphql',\n      sortSchema: true,\n      debug: !options.isProduction,\n      playground: !options.isProduction,\n      path: options.endpoint,\n      context({ req }) {\n        return ExecutionContext.create(prisma, req);\n      },\n    };\n  },\n})\n                        \n                    \n\n\n            \n        \n\n    src/moment/entities/media.entity.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MomentMedia\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createUnionType({\n  name: 'MomentMedia',\n  types: () => [MomentAudioMedia, MomentImageMedia, MomentVideoMedia],\n  description: 'Moment media.',\n  resolveType(value: MomentMediaCommon) {\n    switch (value?.type) {\n      case MomentMediaType.AUDIO:\n        return MomentAudioMedia;\n      case MomentMediaType.IMAGE:\n        return MomentImageMedia;\n      case MomentMediaType.VIDEO:\n        return MomentVideoMedia;\n      default:\n        throw new Error(MEDIA_TYPE_DONT_SUPPORTED);\n    }\n  },\n})\n                        \n                    \n\n                \n                    \n                        Moment media union type.\n\n                    \n                \n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.argv\n                        \n                    \n\n                \n                    \n                        Get Socfony ENV filename\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
