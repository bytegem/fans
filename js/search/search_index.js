var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.115,1,2.447]],["body/modules/AppModule.html",[0,1.964,1,4.872,2,1.618,3,1.723,4,1.971,5,1.971,6,1.723,7,2.49,8,1.839,9,3.125,10,3.125,11,4.069,12,0.022,13,3.121,14,3.758,15,3.758,16,3.758,17,2.668,18,1.971,19,1.839,20,0.226,21,0.174,22,0.149,23,3.661,24,0.174,25,4.956,26,2.872,27,3.525,28,0.434,29,3.394,30,1.023,31,1.618,32,1.723,33,1.942,34,1.023,35,3.661,36,0.772,37,3.661,38,3.394,39,3.661,40,1.081,41,2.121,42,3.661,43,3.661,44,4.956,45,2.771,46,3.109,47,3.125,48,2.202,49,0.915,50,1.522,51,1.434,52,3.661,53,3.661,54,3.661,55,1.023,56,2.121,57,1.239,58,3.661,59,1.143,60,3.661,61,4.956,62,3.661,63,2.507,64,3.661,65,4.956,66,3.661,67,2.771,68,2.771,69,0.226,70,0.183,71,0.011,72,0.015,73,0.011]],["title/interfaces/AuthDecoratorOptions.html",[74,1.681,75,2.704]],["body/interfaces/AuthDecoratorOptions.html",[12,0.022,20,0.241,21,0.186,22,0.159,24,0.186,28,0.382,30,1.088,40,1.95,46,2.444,47,3.325,55,1.444,56,3.359,57,0.974,59,1.216,69,0.382,71,0.011,72,0.015,73,0.011,74,1.833,75,4.389,76,2.668,77,2.668,78,4.674,79,4.389,80,0.392,81,1.706,82,1.459,83,4.523,84,0.697,85,3.637,86,3.578,87,5.167,88,5.167,89,3.896,90,2.668,91,3.539,92,3.325,93,2.949,94,2.782,95,4.143,96,3.103,97,1.833,98,2.121,99,1.725,100,3.325,101,3.896,102,3.896,103,2.257,104,3.325,105,3.896,106,3.896,107,3.896,108,3.359,109,3.896,110,2.257,111,2.949,112,2.949,113,1.833]],["title/guards/AuthorizationGuard.html",[46,2.241,114,2.447]],["body/guards/AuthorizationGuard.html",[12,0.022,20,0.143,21,0.11,22,0.094,24,0.283,28,0.385,30,0.647,31,3.038,32,3.127,33,2.79,34,0.993,36,0.488,40,1.839,41,1.341,45,1.752,46,2.231,48,2.331,49,0.578,55,1.21,57,1.487,59,1.11,69,0.143,70,0.116,71,0.007,72,0.01,73,0.007,80,0.233,82,1.362,84,0.688,85,2.231,86,2.815,90,2.435,91,2.435,92,1.975,93,1.752,94,1.914,95,3.732,96,1.163,98,2.092,99,1.74,108,1.341,114,3.791,115,2.314,116,1.975,117,1.11,118,1.827,119,4.859,120,4.33,121,3.556,122,3.556,123,3.556,124,3.556,125,1.11,126,2.314,127,6.101,128,3.203,129,0.955,130,2.314,131,0.993,132,1.702,133,1.215,134,4.867,135,3.035,136,1.393,137,1.315,138,3.556,139,2.314,140,3.556,141,1.546,142,1.914,143,2.314,144,2.314,145,3.556,146,3.556,147,3.556,148,2.314,149,3.556,150,3.556,151,2.314,152,3.556,153,2.314,154,3.556,155,1.571,156,3.556,157,2.314,158,1.787,159,3.695,160,1.11,161,2.314,162,2.314,163,1.752,164,1.585,165,1.752,166,1.752,167,1.452,168,0.856,169,2.037,170,1.429,171,3.035,172,1.341,173,1.975,174,1.975,175,3.556,176,3.556,177,2.06,178,0.666,179,2.314,180,2.314,181,1.242,182,2.314,183,2.314,184,2.314,185,2.314,186,2.314,187,2.314,188,2.314,189,2.314,190,2.314,191,1.452,192,0.723,193,2.314]],["title/classes/AuthorizationTokenEntity.html",[70,0.178,194,2.447]],["body/classes/AuthorizationTokenEntity.html",[12,0.022,20,0.204,21,0.157,22,0.135,24,0.329,28,0.329,34,0.921,36,0.695,40,1.904,49,0.824,69,0.204,70,0.164,71,0.01,72,0.014,73,0.01,80,0.332,81,1.522,84,0.61,96,2.672,97,2.502,98,2.326,100,4.915,129,1.004,168,1.705,178,1.327,194,3.157,195,0.736,196,2.611,197,5.36,198,2.813,199,3.045,200,3.642,201,4.538,202,3.081,203,3.297,204,1.693,205,2.375,206,4.127,207,3.295,208,3.944,209,3.295,210,1.353,211,5.759,212,3.295,213,6.28,214,2.671,215,3.295,216,2.671,217,2.322,218,3.295,219,1.151,220,2.482,221,2.169,222,2.813,223,2.813,224,4.151]],["title/classes/AuthorizationTokenEntityResolver.html",[70,0.178,225,2.447]],["body/classes/AuthorizationTokenEntityResolver.html",[12,0.022,20,0.147,21,0.113,22,0.097,24,0.293,26,2.102,28,0.405,31,2.571,32,1.707,33,2.409,34,1.482,36,0.501,40,1.816,41,3.24,48,1.93,49,0.594,55,1.014,57,1.326,59,1.538,69,0.147,70,0.119,71,0.007,72,0.011,73,0.007,80,0.239,82,1.254,83,2.485,84,0.659,86,1.376,96,3.152,97,2.951,98,2.03,99,1.376,108,1.376,113,1.118,117,1.133,118,1.453,125,1.133,128,3.011,129,0.879,131,1.563,132,1.567,133,1.118,137,1.341,141,1.376,158,1.823,165,1.798,169,1.707,170,1.198,177,2.854,178,1.24,181,1.267,191,2.276,192,1.133,194,4.611,195,0.53,196,2.325,199,2.211,204,1.376,205,0.931,208,3.373,217,1.341,219,1.72,221,1.707,222,2.028,223,3.756,225,2.485,226,2.028,227,4.401,228,3.096,229,2.376,230,2.376,231,2.376,232,1.798,233,3.984,234,2.376,235,3.096,236,2.376,237,2.746,238,2.376,239,3.328,240,2.276,241,2.376,242,3.014,243,2.376,244,2.376,245,2.376,246,2.376,247,2.376,248,2.102,249,2.276,250,2.485,251,1.49,252,1.798,253,1.627,254,1.49,255,1.798,256,1.376,257,1.49,258,1.279,259,1.376,260,1.798,261,2.376,262,2.028,263,2.376,264,2.376,265,1.627,266,3.628,267,2.376,268,2.376,269,3.628,270,1.603,271,2.376,272,1.798,273,2.376,274,1.279,275,1.798,276,3.628,277,2.376,278,1.194,279,2.028,280,1.118,281,2.028,282,2.376,283,2.376,284,2.376,285,2.376,286,2.376]],["title/modules/AuthorizationTokenModule.html",[0,1.115,11,2.241]],["body/modules/AuthorizationTokenModule.html",[0,2.075,2,1.916,3,2.04,4,2.334,5,2.334,6,2.04,7,3.068,8,3.068,11,4.497,12,0.022,13,3.199,16,3.939,17,2.983,18,2.334,19,2.179,20,0.268,21,0.207,22,0.177,24,0.207,27,3.475,28,0.411,29,3.794,30,1.211,40,1.9,41,2.512,69,0.268,70,0.216,71,0.013,72,0.016,73,0.013,98,1.829,128,3.881,165,3.282,196,1.803,225,3.794,287,3.701,288,4.336,289,3.701,290,3.701,291,4.336,292,2.97,293,4.336,294,4.336]],["title/injectables/AuthorizationTokenService.html",[128,1.923,160,1.115]],["body/injectables/AuthorizationTokenService.html",[12,0.022,20,0.139,21,0.107,22,0.092,24,0.203,28,0.382,30,0.628,34,1.188,40,1.74,41,3.305,48,1.875,49,0.562,55,1.646,57,1.367,59,0.702,69,0.139,70,0.112,71,0.007,72,0.01,73,0.007,80,0.226,82,1.223,84,0.671,85,2.181,86,2.772,95,2.181,98,2.26,99,1.188,103,1.302,108,1.302,113,1.058,117,1.085,118,2.077,125,1.085,128,1.872,129,0.906,131,0.971,132,1.528,133,1.153,137,1.286,141,1.446,142,2.785,160,1.085,167,1.41,169,1.636,170,1.148,177,3.645,178,1.226,181,2.058,191,2.667,192,1.494,196,2.372,200,3.277,201,3.629,202,1.302,203,1.058,206,3.246,208,3.277,210,1.221,228,3.629,233,1.54,254,1.41,257,1.41,258,1.21,259,2.772,260,1.702,265,1.54,270,2.114,274,1.21,278,1.747,295,1.129,296,1.919,297,4.252,298,3.477,299,4.785,300,4.252,301,1.919,302,3.071,303,2.248,304,2.248,305,2.248,306,2.248,307,2.248,308,3.432,309,2.248,310,2.248,311,2.967,312,2.967,313,2.248,314,2.248,315,2.248,316,2.248,317,2.632,318,3.277,319,1.702,320,1.54,321,2.248,322,2.632,323,2.632,324,2.632,325,2.632,326,2.632,327,1.54,328,1.919,329,4.785,330,2.248,331,2.248,332,2.248,333,2.248,334,2.114,335,2.632,336,2.967,337,2.248,338,2.967,339,2.248,340,2.248,341,2.248,342,2.248,343,2.248,344,2.248,345,2.248,346,3.477,347,2.248,348,2.248,349,2.248,350,1.702,351,2.248,352,2.248,353,2.248,354,3.477,355,2.248,356,2.248,357,2.248,358,2.248,359,2.248,360,2.248,361,4.084,362,1.919,363,1.702,364,2.248,365,1.919,366,3.477,367,1.54,368,2.248,369,1.21,370,2.248,371,2.248,372,2.248,373,2.248,374,2.248,375,2.248]],["title/interfaces/AuthorizationTokenValidityPeriod.html",[74,1.681,327,2.447]],["body/interfaces/AuthorizationTokenValidityPeriod.html",[12,0.022,20,0.293,21,0.226,22,0.194,24,0.226,28,0.293,69,0.293,71,0.014,72,0.017,73,0.014,74,2.231,76,3.247,80,0.477,81,1.934,84,0.7,98,2.296,196,1.971,318,3.247,327,4.013,334,2.589,335,5.029,336,5.67,338,5.001,376,4.046,377,5.67,378,6.36,379,2.757]],["title/classes/CreateAuthorizationTokenArgs.html",[70,0.178,239,2.241]],["body/classes/CreateAuthorizationTokenArgs.html",[12,0.022,20,0.235,21,0.182,22,0.155,24,0.319,28,0.354,36,0.803,40,1.938,69,0.235,70,0.19,71,0.011,72,0.015,73,0.011,80,0.383,81,1.681,84,0.701,98,1.681,129,0.95,131,1.946,177,3.944,178,1.255,195,0.85,196,2.544,204,1.602,205,2.246,210,1.28,219,2.137,239,3.193,242,2.558,259,3.546,260,2.883,270,3.103,334,2.704,380,4.632,381,3.251,382,3.809,383,3.809,384,3.839,385,6.119,386,4.191,387,3.294,388,3.809,389,4.344,390,3.809]],["title/classes/ExecutionContext.html",[31,1.578,70,0.178]],["body/classes/ExecutionContext.html",[12,0.022,20,0.165,21,0.127,22,0.109,24,0.266,28,0.244,31,2.083,32,2.454,33,2.486,34,0.744,40,1.724,48,2.598,49,0.665,55,1.557,57,1.393,59,0.831,69,0.165,70,0.133,71,0.008,72,0.012,73,0.008,80,0.268,81,1.305,82,1.467,84,0.608,96,1.985,97,1.859,98,2.304,99,1.631,103,1.542,113,1.252,117,1.234,118,1.556,125,1.234,129,1.002,131,1.689,132,1.54,133,1.099,141,1.317,142,2.808,155,1.746,163,5.463,164,4.253,169,2.922,177,3.949,178,1.277,181,0.93,192,0.831,195,0.594,210,1.349,256,3.598,274,1.433,334,1.746,363,2.015,391,2.271,392,6.343,393,6.343,394,4.713,395,3.952,396,2.661,397,2.661,398,3.373,399,2.661,400,2.661,401,2.661,402,2.661,403,2.661,404,3.952,405,2.661,406,2.661,407,3.952,408,2.661,409,3.952,410,2.661,411,4.713,412,2.661,413,2.661,414,2.661,415,2.661,416,1.542,417,2.661,418,2.661,419,2.661,420,2.661,421,2.661,422,2.661,423,2.661,424,2.661,425,2.661,426,2.661,427,2.661]],["title/modules/PrismaModule.html",[0,1.115,13,1.681]],["body/modules/PrismaModule.html",[0,2.087,2,1.8,7,2.047,8,2.047,12,0.022,13,2.504,20,0.252,21,0.194,22,0.166,24,0.194,28,0.366,29,4.058,30,1.138,34,1.903,48,2.322,49,1.018,55,1.138,67,3.083,68,3.083,69,0.252,70,0.296,71,0.012,72,0.016,73,0.012,118,1.757,125,1.661,134,4.028,137,2.41,168,1.506,169,1.917,170,1.345,181,1.858,192,1.272,317,4.486,428,3.083,429,4.541,430,4.058,431,5.057,432,5.057,433,3.083,434,4.028,435,3.476,436,2.047,437,3.476,438,3.476,439,3.476,440,3.476,441,3.476,442,3.476,443,4.541,444,4.541,445,3.476,446,3.476,447,3.083,448,3.476,449,3.476,450,3.476,451,3.476]],["title/modules/SecurityModule.html",[0,1.115,14,2.07]],["body/modules/SecurityModule.html",[0,2.083,2,1.938,3,2.064,4,2.362,5,2.362,6,2.064,7,3.084,8,3.084,12,0.022,13,3.209,14,4.161,15,3.951,17,3.005,18,2.362,19,2.204,20,0.271,21,0.209,22,0.179,24,0.209,27,3.501,28,0.412,30,1.226,51,1.719,69,0.271,70,0.219,71,0.013,72,0.016,73,0.013,270,2.855,292,3.004,452,3.744,453,4.387,454,3.744,455,3.744,456,3.887,457,4.387,458,1.622,459,3.822,460,4.387,461,3.32]],["title/classes/SecuritySmsResolver.html",[70,0.178,459,2.447]],["body/classes/SecuritySmsResolver.html",[12,0.022,20,0.186,21,0.143,22,0.123,24,0.312,26,2.5,28,0.388,31,2.44,32,2.03,33,2.459,36,0.633,40,1.274,55,1.205,57,1.078,59,1.347,69,0.186,70,0.15,71,0.009,72,0.013,73,0.009,80,0.302,82,1.193,83,2.055,84,0.613,86,1.739,93,2.272,94,2.719,99,1.411,108,1.739,117,1.347,118,2.011,125,0.937,129,0.837,131,1.897,132,1.492,133,1.164,136,1.69,141,1.205,155,1.906,158,3.06,170,0.991,181,1.507,191,1.883,192,0.937,195,0.67,196,1.248,200,2.955,204,1.205,210,1.233,214,3.2,235,2.561,240,2.706,242,2.168,249,3.168,251,1.883,254,1.883,255,2.272,256,1.739,270,3.027,280,3.223,379,2.953,456,3.378,459,2.955,461,2.272,462,3.782,463,2.561,464,4.33,465,5.051,466,4.314,467,2.561,468,3.001,469,4.314,470,3.001,471,4.164,472,3.001,473,3.001,474,3.001,475,3.001,476,3.823,477,2.272,478,1.616,479,2.272,480,3.001,481,3.001,482,2.561,483,3.001,484,3.001]],["title/injectables/SecuritySmsService.html",[160,1.115,456,1.923]],["body/injectables/SecuritySmsService.html",[12,0.022,20,0.154,21,0.119,22,0.102,24,0.271,28,0.335,30,0.695,34,1.591,48,1.977,49,0.622,50,1.562,51,1.473,55,1.7,56,2.623,57,1.478,69,0.154,70,0.124,71,0.007,72,0.011,73,0.007,80,0.25,82,1.28,84,0.545,85,2.84,99,1.652,113,2.131,117,1.173,118,2.056,125,1.173,129,0.897,131,1.05,132,1.599,133,1.141,136,2.231,137,1.39,141,1.409,142,2.023,160,1.173,169,1.768,170,1.241,181,1.581,192,0.777,200,2.574,203,1.171,210,1.391,217,1.39,257,1.561,258,1.34,270,3.019,274,1.34,278,1.888,279,2.124,280,3.253,295,1.251,318,2.574,335,3.819,369,2.023,379,2.374,456,2.023,458,0.92,462,3.9,464,3.982,471,4.287,479,4.31,485,2.124,486,4.528,487,3.207,488,3.758,489,2.489,490,3.425,491,2.489,492,2.489,493,2.489,494,3.758,495,3.758,496,3.758,497,2.489,498,5.045,499,3.758,500,5.045,501,4.528,502,3.758,503,2.489,504,3.758,505,5.045,506,2.489,507,2.845,508,2.489,509,2.489,510,2.489,511,2.489,512,2.489,513,2.489,514,2.489,515,2.489,516,2.489,517,2.489,518,2.489,519,2.489,520,2.489,521,3.758,522,2.489,523,2.489,524,2.489,525,2.124,526,2.489,527,2.489,528,2.489,529,2.489,530,2.489,531,2.489,532,2.489,533,2.489,534,2.489,535,2.489,536,2.489,537,1.705,538,2.489,539,2.489,540,2.489,541,2.489,542,2.489,543,2.489,544,2.489]],["title/interfaces/SocfonyConfig.html",[74,1.681,545,2.447]],["body/interfaces/SocfonyConfig.html",[12,0.022,20,0.243,21,0.187,22,0.253,26,3.373,28,0.321,30,1.098,38,2.691,55,1.452,57,0.982,63,4.243,69,0.36,71,0.012,72,0.015,73,0.012,74,1.849,76,2.691,80,0.395,81,1.715,84,0.586,85,3.652,97,3.177,99,1.098,103,3.01,141,1.098,155,1.736,172,3.01,192,1.227,210,1.507,237,3.933,367,3.559,379,2.739,430,3.559,545,4.243,546,2.974,547,6.443,548,6.751,549,5.822,550,5.287,551,5.196,552,3.353,553,3.353,554,5.287,555,3.353,556,3.929,557,3.929,558,3.929,559,3.929,560,3.929,561,3.929,562,3.929,563,3.929,564,3.929]],["title/classes/TencentCloudCosCredentials.html",[70,0.178,565,2.447]],["body/classes/TencentCloudCosCredentials.html",[12,0.022,20,0.235,21,0.181,22,0.155,24,0.324,28,0.314,36,0.801,40,1.978,50,2.986,51,2.814,69,0.235,70,0.19,71,0.011,72,0.015,73,0.011,80,0.383,81,1.678,84,0.576,98,2.019,129,0.949,195,0.849,204,1.6,205,2.244,210,1.464,219,2.136,220,2.737,458,2.261,565,3.482,566,3.244,567,4.808,568,3.318,569,5.992,570,4.586,571,3.543,572,3.431,573,3.801,574,3.801,575,3.801]],["title/classes/TencentCloudCosResolver.html",[70,0.178,576,2.447]],["body/classes/TencentCloudCosResolver.html",[12,0.022,20,0.161,21,0.124,22,0.19,24,0.301,28,0.358,32,1.226,33,1.021,36,0.549,40,1.897,50,2.8,51,2.639,57,1.163,69,0.24,70,0.13,71,0.008,72,0.011,73,0.008,80,0.262,82,1.1,84,0.678,98,1.284,99,1.442,110,2.254,117,1.215,118,1.913,125,0.814,129,0.855,131,1.821,132,1.375,133,1.164,136,1.524,141,1.301,142,3.232,155,1.151,158,2.911,170,0.86,172,1.51,195,0.582,204,1.301,237,1.973,240,2.44,242,1.955,248,2.254,249,2.92,250,2.664,251,1.635,257,1.635,258,1.403,377,3.32,458,2.042,478,1.403,525,3.32,565,3.535,567,4.521,568,3.478,571,2.254,572,2.506,576,2.664,577,1.973,578,2.945,579,5.162,580,4.655,581,2.606,582,2.991,583,2.606,584,4.655,585,2.606,586,1.973,587,2.606,588,2.945,589,4.406,590,2.606,591,2.606,592,5.384,593,3.908,594,2.606,595,2.606,596,2.606,597,2.945,598,2.606,599,2.606,600,2.945,601,3.32,602,3.32,603,2.606,604,2.606,605,3.32,606,3.32,607,3.32,608,2.606,609,3.32,610,3.32,611,2.606,612,3.32,613,3.32,614,2.606,615,2.606,616,2.606,617,2.945,618,3.89,619,2.606,620,2.224,621,2.606]],["title/injectables/TencentCloudCosService.html",[160,1.115,582,2.07]],["body/injectables/TencentCloudCosService.html",[12,0.022,20,0.18,21,0.139,22,0.119,24,0.237,28,0.307,30,0.814,50,2.741,51,2.583,55,1.684,56,3.35,57,1.361,69,0.18,70,0.145,71,0.009,72,0.012,73,0.009,80,0.293,82,0.998,84,0.425,99,1.18,117,1.318,118,1.99,125,0.909,129,0.958,131,1.684,132,1.247,133,1.271,136,2.362,141,1.18,160,1.318,170,0.962,181,1.475,210,1.109,257,1.827,258,1.568,295,1.464,308,2.649,416,2.446,458,2.229,478,1.568,487,2.486,567,4.624,568,3.493,569,4.239,570,3.401,572,3.246,582,2.446,589,3.603,593,3.196,600,3.196,620,3.603,622,2.486,623,5.446,624,4.222,625,3.603,626,4.966,627,2.913,628,3.156,629,2.913,630,2.913,631,6.029,632,4.222,633,2.913,634,2.913,635,2.913,636,2.913,637,4.222,638,4.222,639,2.913,640,2.913,641,2.913,642,4.222,643,4.222,644,4.222,645,4.222,646,4.222,647,4.222,648,4.222,649,4.222,650,4.222,651,4.222,652,4.222,653,4.222,654,4.222,655,4.222,656,4.222,657,4.222,658,4.222,659,2.913,660,2.913,661,2.913,662,2.913,663,2.913,664,2.913,665,2.913,666,3.603,667,2.913,668,2.913,669,2.913,670,2.913,671,2.913,672,2.913]],["title/modules/TencentCloudModule.html",[0,1.115,15,2.07]],["body/modules/TencentCloudModule.html",[0,2.054,2,1.852,3,1.972,4,2.256,5,2.256,6,1.972,7,3.019,8,3.019,12,0.022,15,4.177,17,2.918,18,2.256,19,2.106,20,0.259,21,0.2,22,0.171,24,0.2,28,0.407,30,1.171,50,2.254,51,2.124,69,0.259,70,0.209,71,0.012,72,0.016,73,0.012,458,1.55,464,2.629,490,4.157,567,2.87,572,2.256,576,3.712,582,4.157,628,4.157,673,3.577,674,3.577,675,3.577,676,4.191,677,4.191,678,4.191,679,4.191]],["title/injectables/TencentCloudSmsService.html",[160,1.115,490,2.07]],["body/injectables/TencentCloudSmsService.html",[12,0.022,20,0.216,21,0.167,22,0.143,24,0.229,28,0.365,30,0.977,50,2.456,51,2.315,55,1.342,56,2.784,57,1.372,69,0.216,70,0.175,71,0.01,72,0.014,73,0.01,80,0.352,82,1.135,84,0.483,97,1.646,99,0.977,117,1.5,118,1.812,129,0.909,131,1.342,132,1.419,133,1.013,136,1.883,137,2.423,141,1.533,160,1.5,163,2.648,181,1.222,192,1.092,210,1.428,295,1.757,334,2.123,458,2.185,464,4.299,479,4.961,490,2.784,568,2.027,570,4.241,617,2.648,625,4.1,680,2.985,681,4.1,682,5.488,683,4.1,684,3.498,685,3.29,686,5.042,687,5.042,688,3.498,689,5.285,690,3.498,691,6.398,692,3.498,693,3.498,694,4.804,695,3.014,696,3.014,697,3.498,698,3.498,699,3.498,700,3.29,701,2.648,702,3.498,703,3.498,704,3.498,705,3.498,706,3.498,707,3.498,708,3.498,709,3.498,710,1.454,711,2.985,712,3.498,713,3.498,714,3.498,715,3.498]],["title/classes/TencentCloudStsCredentials.html",[70,0.178,716,2.447]],["body/classes/TencentCloudStsCredentials.html",[12,0.022,20,0.194,21,0.149,22,0.128,24,0.326,28,0.32,36,0.66,50,3,51,2.811,59,1.614,69,0.275,70,0.222,71,0.009,72,0.013,73,0.009,80,0.315,81,1.468,84,0.52,98,2.181,129,0.857,168,1.912,195,0.699,203,2.092,204,1.445,205,2.026,206,3.532,210,1.513,217,2.082,219,2.219,220,2.784,379,1.473,416,3.262,458,2.082,571,1.814,572,3.201,578,5.488,588,3.366,695,2.789,696,2.789,716,3.856,717,2.37,718,4.413,719,4.413,720,5.542,721,3.131,722,3.131,723,3.131,724,3.795,725,3.795,726,3.795,727,3.795,728,2.598,729,3.795,730,3.795,731,2.672,732,3.795,733,2.672]],["title/classes/TencentCloudStsFederationToken.html",[70,0.178,571,2.07]],["body/classes/TencentCloudStsFederationToken.html",[12,0.022,20,0.189,21,0.146,22,0.125,24,0.325,28,0.315,36,0.644,50,2.992,51,2.794,59,1.913,69,0.27,70,0.218,71,0.009,72,0.013,73,0.009,80,0.307,81,1.442,82,1.448,84,0.513,98,2.023,129,0.845,168,1.886,195,0.682,203,2.62,204,1.425,205,1.999,206,4.047,210,1.466,217,1.616,219,2.203,220,2.746,379,2.056,416,2.532,458,2.058,571,2.532,572,3.171,578,5.475,588,3.861,695,2.741,696,2.741,716,3.813,717,2.312,718,2.607,719,2.607,720,4.751,724,3.729,725,4.353,726,3.729,727,4.353,728,3.079,729,4.751,730,4.751,731,4.353,732,4.751,733,4.353,734,3.055,735,3.055,736,3.055]],["title/injectables/TencentCloudStsService.html",[160,1.115,628,2.07]],["body/injectables/TencentCloudStsService.html",[12,0.022,20,0.269,21,0.207,22,0.177,24,0.264,28,0.378,30,1.214,50,2.307,51,2.174,57,1.086,69,0.269,70,0.217,71,0.013,72,0.016,73,0.013,80,0.437,82,1.027,84,0.437,97,2.045,99,1.214,117,1.732,129,0.72,131,1.55,132,1.284,133,0.916,136,2.174,137,2.515,141,1.214,160,1.732,192,1.357,210,1.364,295,2.184,334,1.92,458,2.052,568,2.518,570,4.736,572,3.466,628,3.215,681,4.735,683,4.735,685,2.977,686,4.735,687,4.735,695,2.726,696,2.726,700,3.8,701,3.29,710,1.807,711,3.709,737,3.709,738,4.346,739,4.735,740,4.346,741,4.346]],["title/classes/UpdateViewerArgs.html",[70,0.178,742,2.447]],["body/classes/UpdateViewerArgs.html",[12,0.022,20,0.244,21,0.188,22,0.161,24,0.308,28,0.361,36,0.833,40,1.168,55,1.105,59,1.629,69,0.244,70,0.197,71,0.012,72,0.015,73,0.012,80,0.398,81,1.722,82,1.233,84,0.588,94,3.343,129,0.864,178,1.209,192,1.939,195,0.883,196,1.644,204,1.458,205,2.044,210,1.304,214,3.023,219,2.04,239,3.273,242,2.622,262,3.374,270,2.853,278,2.934,280,3.23,369,3.774,380,2.993,387,3.343,389,4.984,436,1.986,447,4.701,471,3.896,728,2.622,742,3.573,743,4.984,744,3.374,745,4.984,746,4.253,747,3.953,748,3.953,749,3.949,750,3.374]],["title/classes/UserEntity.html",[70,0.178,751,2.241]],["body/classes/UserEntity.html",[12,0.022,20,0.264,21,0.203,22,0.174,24,0.323,28,0.339,36,0.899,59,1.332,69,0.264,70,0.213,71,0.013,72,0.016,73,0.013,80,0.429,81,1.81,84,0.644,129,1.06,133,1.156,168,1.578,178,1.34,195,0.953,199,3.045,203,2.851,204,1.787,205,2.506,210,1.224,216,3.705,217,2.365,220,2.952,436,2.755,537,3.756,710,2.659,728,2.144,751,3.44,752,3.642,753,4.041,754,4.151,755,5.458,756,3.642,757,3.642,758,3.642,759,2.923,760,3.642,761,3.642]],["title/classes/UserInterface.html",[70,0.178,753,2.07]],["body/classes/UserInterface.html",[12,0.022,20,0.227,21,0.175,22,0.15,24,0.33,28,0.348,34,1.025,36,0.773,49,0.917,59,1.549,69,0.227,70,0.183,71,0.011,72,0.015,73,0.011,74,2.647,80,0.369,81,1.638,84,0.606,129,0.998,133,1.27,168,1.835,178,1.359,195,0.819,203,3.054,204,1.684,205,2.361,210,1.406,216,3.845,217,2.529,219,1.281,224,4.127,280,1.726,476,3.757,537,3.852,710,2.759,728,2.494,753,2.875,754,4.562,759,3.852,762,3.131,763,3.757,764,3.668,765,3.668,766,3.668,767,3.668,768,4.963,769,2.672,770,3.131,771,2.301,772,2.125]],["title/classes/UserInterfaceResolver.html",[70,0.178,773,2.447]],["body/classes/UserInterfaceResolver.html",[12,0.022,20,0.246,21,0.19,22,0.162,24,0.279,28,0.4,33,2.053,36,0.839,49,0.994,57,0.994,69,0.246,70,0.199,71,0.012,72,0.015,73,0.012,74,2.93,80,0.4,82,1.238,84,0.527,99,1.464,117,1.636,125,1.242,129,0.868,131,1.464,132,1.547,133,1.104,136,2.053,141,1.112,158,3.338,170,1.313,172,3.607,178,1.363,195,0.888,204,1.112,219,1.83,248,3.036,250,4.012,478,2.142,586,3.011,597,3.966,710,2.762,753,3.036,769,2.821,770,3.395,773,3.588,774,5,775,3.395,776,3.978,777,3.646,778,3.978,779,3.978,780,3.978,781,3.978,782,3.978,783,3.978,784,3.978]],["title/modules/UserModule.html",[0,1.115,16,2.07]],["body/modules/UserModule.html",[0,2.058,2,1.864,3,1.985,4,2.272,5,2.272,6,1.985,7,3.028,8,3.028,12,0.022,13,3.176,14,3.911,16,4.181,17,2.931,18,2.272,19,2.12,20,0.261,21,0.201,22,0.172,24,0.201,27,3.415,28,0.425,30,1.179,69,0.261,70,0.211,71,0.012,72,0.016,73,0.012,178,1.129,292,2.89,302,3.866,773,3.728,785,3.601,786,3.601,787,3.601,788,3.601,789,4.234,790,4.219,791,4.219,792,4.219,793,4.219,794,3.601,795,3.728,796,4.219]],["title/classes/UserProfileEntity.html",[70,0.178,769,1.923]],["body/classes/UserProfileEntity.html",[12,0.022,20,0.198,21,0.153,22,0.131,24,0.332,28,0.198,36,0.676,59,2.102,63,3.896,69,0.198,70,0.16,71,0.009,72,0.013,73,0.009,80,0.323,81,1.493,84,0.626,129,1.031,133,1.348,168,1.672,178,1.355,195,0.716,199,2.632,202,3.035,203,2.128,204,1.739,205,2.439,210,1.589,217,2.302,219,1.579,220,2.434,224,4.109,476,3.423,710,2.83,728,3.383,769,3.063,797,2.736,798,6.397,799,6.397,800,6.397,801,4.471,802,5.689,803,3.206,804,3.206,805,3.206,806,3.206,807,5.689,808,3.206,809,5.689,810,3.206]],["title/modules/UserProfileModule.html",[0,1.115,789,2.241]],["body/modules/UserProfileModule.html",[0,2.104,2,2.004,3,2.134,4,2.441,5,2.441,6,2.134,7,3.132,8,3.132,12,0.022,13,3.236,17,3.068,18,2.441,19,2.278,20,0.28,21,0.216,22,0.185,24,0.216,27,3.575,28,0.404,30,1.267,69,0.28,70,0.226,71,0.013,72,0.017,73,0.013,178,1.068,292,3.106,710,2.37,777,3.904,789,4.468,811,3.87,812,3.87,813,4.535,814,3.87,815,4.535,816,3.904,817,4.535,818,3.87]],["title/classes/UserProfileResolver.html",[70,0.178,816,2.447]],["body/classes/UserProfileResolver.html",[12,0.022,20,0.209,21,0.161,22,0.138,24,0.302,28,0.401,31,2.572,32,2.207,33,2.594,34,1.31,36,0.712,48,2.594,49,0.844,55,0.944,57,0.844,69,0.209,70,0.169,71,0.01,72,0.014,73,0.01,80,0.34,82,1.108,84,0.542,99,1.626,110,2.718,117,1.464,118,1.779,125,1.464,129,0.777,131,1.31,132,1.385,133,1.136,136,1.838,137,1.734,141,0.944,155,2.073,158,3.18,169,2.207,170,1.549,178,1.24,181,1.638,195,0.754,199,2.925,202,1.957,204,0.944,214,3.544,240,2.119,242,2.357,249,2.942,251,2.119,256,1.957,278,3.262,369,3.495,387,2.525,710,2.794,750,2.883,769,2.901,777,3.134,816,3.212,818,2.883,819,2.883,820,5.821,821,5.388,822,3.378,823,3.378,824,5.388,825,3.378,826,4.189,827,3.378,828,3.378,829,3.378,830,2.883,831,3.378,832,3.378,833,3.378]],["title/injectables/UserProfileService.html",[160,1.115,777,1.923]],["body/injectables/UserProfileService.html",[12,0.022,20,0.238,21,0.183,22,0.157,24,0.275,28,0.317,30,1.075,34,1.839,48,2.408,49,0.962,57,1.44,69,0.238,70,0.192,71,0.011,72,0.015,73,0.011,80,0.387,82,1.211,84,0.516,94,2.759,99,1.432,113,1.811,117,1.6,118,1.902,125,1.201,129,0.849,131,1.432,132,1.514,133,1.08,136,2.408,137,1.895,141,1.075,142,2.759,160,1.6,170,1.27,178,1.353,181,1.79,202,2.969,248,3.56,274,2.072,278,1.934,295,1.934,301,3.284,350,3.879,478,2.072,710,2.978,759,2.636,777,2.759,834,3.284,835,5.762,836,3.848,837,3.848,838,6.144,839,3.848,840,3.848,841,3.848]],["title/classes/UserProfileUpdateInput.html",[70,0.178,826,2.447]],["body/classes/UserProfileUpdateInput.html",[12,0.022,20,0.303,21,0.234,22,0.2,24,0.285,28,0.399,34,1.369,36,1.033,49,1.225,55,1.369,69,0.303,70,0.245,71,0.014,72,0.018,73,0.014,168,2.211,178,1.209,195,1.094,202,2.84,369,3.475,387,3.475,436,2.462,710,2.683,763,4.527,769,2.638,801,4.183,826,4.096,830,4.183,842,4.183,843,3.71,844,4.886,845,5.98,846,3.71,847,4.901]],["title/classes/UserResolver.html",[70,0.178,848,2.704]],["body/classes/UserResolver.html",[12,0.022,20,0.239,21,0.184,22,0.158,24,0.314,28,0.408,34,1.438,36,0.816,48,2.636,49,0.968,57,0.968,69,0.239,70,0.193,71,0.011,72,0.015,73,0.011,80,0.39,82,1.216,84,0.582,99,1.438,117,1.607,125,1.209,129,0.853,131,1.438,132,1.52,133,1.218,137,1.903,141,1.082,158,3.312,170,1.278,178,1.319,192,1.209,195,0.864,199,3.095,204,1.082,232,2.931,233,4.737,242,2.586,253,2.652,254,2.429,274,2.084,281,3.305,384,4.022,386,4.219,478,2.084,751,3.228,848,3.895,849,3.305,850,3.872,851,3.872,852,3.872,853,3.872,854,3.872,855,3.872,856,3.524,857,3.872,858,3.305]],["title/injectables/UserService.html",[160,1.115,302,1.923]],["body/injectables/UserService.html",[12,0.022,20,0.202,21,0.156,22,0.133,24,0.273,28,0.373,30,0.913,49,0.817,55,0.913,57,1.565,69,0.202,70,0.163,71,0.01,72,0.013,73,0.01,80,0.329,82,1.25,84,0.68,94,3.088,99,1.75,113,2.49,117,1.431,118,2.068,125,1.02,129,0.877,131,1.28,132,1.563,133,1.115,136,2.454,141,1.28,142,3.088,160,1.431,170,1.078,178,1.354,181,1.848,210,1.398,258,1.759,259,3.324,265,2.237,270,2.986,275,2.473,295,1.641,302,2.467,308,2.874,334,2.025,387,2.467,456,3.462,461,2.473,462,2.237,464,2.874,467,2.788,478,1.759,685,2.237,772,3.916,859,2.788,860,4.582,861,5.292,862,3.267,863,4.582,864,3.267,865,4.582,866,4.496,867,3.267,868,3.267,869,4.582,870,2.788,871,3.267,872,3.267,873,3.267,874,3.267,875,4.582,876,3.267,877,3.267,878,3.267,879,2.788,880,3.267]],["title/classes/UserUpdateInput.html",[70,0.178,746,2.447]],["body/classes/UserUpdateInput.html",[12,0.022,20,0.272,21,0.21,22,0.18,24,0.308,28,0.38,34,1.231,36,0.929,49,1.102,59,1.748,69,0.272,70,0.22,71,0.013,72,0.016,73,0.013,80,0.444,81,1.848,82,1.323,84,0.444,129,0.73,168,2.07,178,1.299,192,2.021,195,0.984,204,1.231,205,1.727,210,1.373,216,2.554,219,1.955,221,2.074,280,2.074,369,3.312,387,3.312,436,2.214,689,4.778,728,2.813,746,3.834,749,3.336,771,2.765,772,4.019,843,3.336,844,4.657,846,4.237,881,4.237,882,4.407,883,3.336,884,4.407]],["title/classes/UserWhereUniqueInput.html",[70,0.178,384,2.241]],["body/classes/UserWhereUniqueInput.html",[12,0.022,20,0.303,21,0.234,22,0.2,24,0.285,28,0.399,34,1.369,36,1.033,49,1.225,55,1.369,69,0.303,70,0.245,71,0.014,72,0.018,73,0.014,168,2.211,178,1.209,195,1.094,216,2.84,217,2.211,219,1.712,221,2.306,280,2.306,384,3.752,387,3.475,436,2.462,749,4.527,771,3.074,844,4.886,846,3.71,881,3.71,883,3.71,885,4.183,886,6.454,887,4.901,888,4.901]],["title/classes/ViewerEntity.html",[70,0.178,221,1.681]],["body/classes/ViewerEntity.html",[12,0.022,20,0.214,21,0.165,22,0.141,24,0.326,28,0.337,36,0.729,49,0.865,59,1.926,69,0.214,70,0.173,71,0.01,72,0.014,73,0.01,80,0.348,81,1.574,84,0.642,129,1.056,133,1.005,168,2.017,178,1.341,195,0.772,199,2.741,203,2.567,204,1.781,205,2.498,210,1.486,214,3.161,216,3.407,217,2.174,219,1.208,220,2.567,221,2.244,224,3.265,280,3.074,379,2.767,436,2.396,537,3.265,710,2.445,728,3.099,753,3.857,754,3.609,755,5.019,756,2.952,757,2.952,758,2.952,759,2.369,760,2.952,761,2.952,763,3.609,771,3.423,889,2.952,890,6.657,891,5.88,892,5.88,893,5.88,894,3.459,895,5.019,896,3.459]],["title/classes/ViewerResolver.html",[70,0.178,795,2.447]],["body/classes/ViewerResolver.html",[12,0.022,20,0.13,21,0.1,22,0.086,24,0.294,28,0.382,31,2.458,32,1.551,33,2.619,34,0.921,36,0.443,40,1.362,48,2.257,49,0.525,55,1.655,57,1.329,69,0.13,70,0.105,71,0.006,72,0.01,73,0.006,80,0.211,82,1.184,84,0.58,96,2.317,97,2.17,99,1.554,103,1.91,110,2.359,113,0.988,117,1.029,118,1.344,125,1.029,129,0.83,131,0.921,132,1.48,133,1.056,136,1.292,137,1.219,141,1.288,155,1.457,158,2.894,167,1.317,169,1.551,170,1.088,178,1.313,181,1.858,191,2.554,192,1.44,195,0.469,199,2.317,204,1.288,210,0.736,214,3.812,217,0.776,219,1.75,221,2.17,232,1.59,233,3.643,240,1.317,242,3.046,248,1.91,249,2.068,250,3.432,251,1.317,254,1.317,255,1.59,256,1.217,258,1.13,259,1.217,265,1.438,270,1.457,274,1.13,275,1.59,278,1.657,280,2.852,302,2.994,320,1.438,350,2.496,361,4.916,362,2.814,363,2.496,365,2.814,367,1.438,369,2.994,379,0.988,386,1.438,416,2.672,471,1.317,482,2.814,507,1.59,586,2.496,597,3.081,617,1.59,742,3.432,745,2.814,771,3.489,772,1.91,794,1.792,795,2.258,858,1.792,870,1.792,879,1.792,883,1.59,897,1.59,898,4.071,899,2.1,900,2.1,901,2.1,902,2.1,903,2.1,904,2.1,905,2.1,906,2.1,907,2.1,908,3.297,909,3.297,910,2.1,911,2.1,912,2.1,913,2.496,914,2.496,915,2.496,916,2.1,917,2.1,918,1.792,919,2.1,920,2.1,921,2.1,922,2.1,923,2.1,924,2.1,925,2.1,926,2.1,927,2.1,928,1.59,929,4.612,930,2.1,931,3.297,932,3.297,933,2.814,934,2.1,935,2.1,936,2.1,937,2.1,938,2.1,939,2.1,940,2.1]],["title/coverage.html",[941,4.16]],["body/coverage.html",[6,1.135,12,0.022,22,0.098,31,1.066,33,0.945,38,1.652,40,1.084,41,2.126,46,1.513,70,0.347,71,0.007,72,0.011,73,0.007,74,2.09,75,1.826,77,3.4,84,0.243,90,1.652,91,1.652,103,3.578,110,1.398,112,1.826,114,1.652,116,2.059,128,1.299,137,0.892,160,1.826,166,1.826,167,1.513,192,0.753,194,1.652,196,2.699,197,2.059,198,2.059,217,0.892,221,1.135,225,1.652,226,2.059,239,1.513,252,1.826,253,1.652,256,1.398,296,2.059,302,1.299,319,1.826,320,1.652,322,1.826,323,1.826,324,1.826,325,1.826,326,1.826,327,1.652,376,2.059,380,1.826,381,2.059,384,1.513,391,2.059,428,1.826,433,1.826,456,1.299,458,2.229,459,1.652,462,2.514,463,2.059,477,1.826,485,2.059,490,1.398,545,1.652,546,3.363,565,1.652,566,2.059,571,1.398,576,1.652,577,1.826,582,1.398,622,2.059,628,1.398,680,2.059,700,1.652,716,1.652,717,2.778,737,2.059,742,1.652,743,2.059,744,2.059,746,1.652,751,1.513,752,2.059,753,1.398,762,2.059,769,1.299,773,1.652,774,2.059,775,2.059,777,1.299,795,1.652,797,2.059,816,1.652,819,2.059,826,1.652,834,2.059,842,2.059,843,2.778,848,1.826,849,2.059,856,1.652,859,2.059,866,1.652,881,2.778,885,2.059,889,2.059,897,2.778,913,1.826,914,1.826,915,1.826,928,1.826,941,2.059,942,1.826,943,2.412,944,2.412,945,2.412,946,2.412,947,7.337,948,6.979,949,2.059,950,2.412,951,2.412,952,2.412,953,2.412,954,4.992,955,7.116,956,6.798,957,6.798,958,5.849,959,4.442,960,5.849,961,2.412,962,2.412,963,3.67,964,5.27,965,2.059,966,4.559,967,2.059,968,2.059,969,2.059,970,2.059,971,3.132,972,2.778,973,2.059,974,2.059,975,4.442,976,3.67,977,2.778,978,1.826,979,3.67,980,2.412,981,2.412]],["title/dependencies.html",[3,2.022,982,2.984]],["body/dependencies.html",[3,2.3,12,0.022,30,1.366,36,1.03,45,3.7,49,1.222,70,0.298,71,0.014,72,0.018,73,0.014,164,4.415,172,2.832,318,3.348,552,4.172,695,3.066,696,3.066,739,4.172,983,6.447,984,4.888,985,4.888,986,4.888,987,4.888,988,4.888,989,4.888,990,4.888,991,4.888,992,4.888,993,4.888,994,4.888,995,4.888,996,4.888,997,4.888,998,4.888,999,4.888,1000,4.888,1001,4.888,1002,4.172,1003,4.888,1004,4.888,1005,4.888,1006,4.888,1007,4.888]],["title/miscellaneous/enumerations.html",[1008,1.729,1009,3.667]],["body/miscellaneous/enumerations.html",[12,0.021,22,0.199,71,0.014,72,0.018,73,0.014,78,3.691,80,0.491,84,0.648,86,3.454,177,2.825,178,0.913,196,2.027,206,3.058,208,3.339,259,3.454,270,2.154,334,3.132,458,1.803,577,3.691,592,5.088,600,3.691,601,4.161,602,4.161,605,5.088,606,5.088,607,5.088,609,5.088,610,5.088,612,5.088,613,5.088,772,2.825,866,3.339,1008,2.825,1009,4.161,1010,4.875,1011,5.961,1012,4.875,1013,4.875,1014,4.875]],["title/miscellaneous/functions.html",[1008,1.729,1015,3.252]],["body/miscellaneous/functions.html",[6,2.927,12,0.021,22,0.214,24,0.308,26,2.3,33,2.293,34,1.109,38,4.008,40,1.728,50,1.651,51,1.556,56,2.3,63,3.583,71,0.012,72,0.015,73,0.012,77,2.719,79,3.005,80,0.4,82,1.569,84,0.4,94,2.137,95,2.49,96,1.995,97,1.868,98,1.311,104,3.388,131,1.635,132,1.961,133,1.399,141,1.635,155,2.312,178,0.744,248,2.3,308,2.49,334,1.754,398,4.465,430,4.008,433,3.96,434,3.005,458,1.468,545,2.719,546,3.005,550,4.465,553,3.388,554,4.465,555,3.388,568,3.031,700,4.008,701,3.005,772,3.922,856,2.719,866,4.008,928,4.43,949,4.465,971,3.388,972,3.005,973,3.388,974,3.388,977,3.005,978,3.96,1008,2.3,1015,3.005,1016,3.388,1017,3.388,1018,5.232,1019,5.232,1020,3.97,1021,3.97,1022,3.388,1023,3.97,1024,5.232,1025,6.221,1026,5.232,1027,3.97,1028,3.97,1029,3.97,1030,3.97,1031,3.97,1032,3.97,1033,3.388]],["title/index.html",[80,0.3,1034,2.547,1035,2.547]],["body/index.html",[12,0.018,21,0.24,24,0.24,26,3.521,71,0.015,72,0.018,73,0.015,135,4.295,155,3.117,593,3.809,895,5.572,942,3.809,1015,3.809,1033,4.295,1036,5.032,1037,5.032,1038,5.187,1039,5.032,1040,6.077,1041,5.032,1042,5.032,1043,5.032,1044,5.032,1045,5.032,1046,6.077,1047,5.032,1048,5.032,1049,5.032,1050,5.032,1051,5.032,1052,5.032,1053,5.032,1054,5.032,1055,5.032,1056,5.032,1057,5.032,1058,4.295,1059,3.809,1060,4.295,1061,3.809,1062,4.295,1063,5.032]],["title/license.html",[1034,2.547,1035,2.547,1059,2.259]],["body/license.html",[12,0.016,19,2.083,21,0.256,71,0.012,72,0.016,73,0.012,111,4.074,133,0.874,164,2.839,278,2.083,471,2.6,507,3.138,666,4.593,933,3.538,942,3.138,1038,5.1,1058,3.538,1059,3.138,1060,3.538,1061,3.138,1062,3.538,1064,6.718,1065,4.145,1066,4.145,1067,4.145,1068,4.145,1069,4.145,1070,4.145,1071,4.145,1072,5.976,1073,5.382,1074,4.145,1075,4.145,1076,4.145,1077,5.976,1078,5.976,1079,5.976,1080,4.145,1081,5.382,1082,4.145,1083,5.382,1084,5.382,1085,5.382,1086,4.145,1087,4.145,1088,4.145,1089,4.145,1090,4.145,1091,5.382,1092,4.145,1093,5.976,1094,4.145,1095,4.145,1096,4.145,1097,4.145,1098,4.145,1099,4.145,1100,4.145,1101,4.145,1102,5.382,1103,5.382,1104,5.976,1105,5.382,1106,4.145,1107,4.145,1108,4.145,1109,4.145,1110,4.145,1111,4.145,1112,4.145,1113,4.145,1114,4.145,1115,4.145,1116,4.145,1117,4.145,1118,4.145,1119,4.145,1120,4.145,1121,4.145,1122,4.145,1123,4.145,1124,4.145,1125,4.145,1126,4.145,1127,4.145,1128,4.145,1129,4.145,1130,4.145,1131,5.382,1132,4.145,1133,4.145,1134,4.145,1135,4.145,1136,4.145,1137,4.145,1138,4.145,1139,4.145,1140,4.145,1141,4.145,1142,4.145,1143,4.145]],["title/modules.html",[2,2.154]],["body/modules.html",[1,3.58,2,2.31,11,3.279,12,0.018,13,2.46,14,3.029,15,3.029,16,3.029,71,0.015,72,0.018,73,0.015,789,3.279,1144,7.116,1145,7.116,1146,7.116,1147,7.19,1148,5.228,1149,5.228]],["title/overview.html",[1150,4.16]],["body/overview.html",[0,1.141,1,4.812,2,1.614,3,1.719,4,1.967,5,1.967,6,1.719,7,1.836,8,1.836,9,3.118,10,3.118,11,4.335,12,0.022,13,3.119,14,4.04,15,4.098,16,4.098,17,2.665,18,1.967,19,1.836,71,0.011,72,0.015,73,0.011,76,2.502,114,2.502,128,3.569,195,0.816,272,2.766,287,3.118,289,3.118,290,3.118,295,1.836,302,3.569,452,3.118,454,3.118,455,3.118,456,3.569,490,3.841,582,3.841,628,3.841,673,3.118,674,3.118,675,3.118,777,3.569,785,3.118,786,3.118,787,3.118,788,3.118,789,4.23,811,3.118,812,3.118,814,3.118,1061,2.766,1150,3.118,1151,4.95,1152,3.654]],["title/miscellaneous/variables.html",[1008,1.729,1153,3.667]],["body/miscellaneous/variables.html",[0,1.135,12,0.022,24,0.113,29,1.631,31,1.052,32,1.121,33,1.933,34,1.484,40,1.457,48,1.424,57,0.908,59,0.744,67,1.803,68,1.803,70,0.181,71,0.007,72,0.011,73,0.007,77,1.631,78,3.336,79,1.803,80,0.24,83,2.489,84,0.704,90,2.489,91,2.489,95,2.28,96,1.826,98,1.455,108,2.106,110,2.106,111,1.803,112,2.751,113,1.121,118,1.2,125,1.135,133,0.502,134,2.751,137,1.824,155,1.052,159,2.033,166,3.336,167,2.28,168,0.881,169,1.121,170,0.786,171,2.033,172,1.38,173,2.033,174,2.033,178,0.826,181,1.269,192,0.744,196,0.99,210,1.533,217,2.153,221,1.121,252,3.336,253,3.019,272,2.751,308,1.494,311,2.033,312,2.033,317,3.336,319,3.336,320,3.019,322,2.751,323,2.751,324,2.751,325,2.751,326,2.751,328,2.033,334,3.14,367,1.631,379,2.74,386,1.631,416,1.38,428,1.803,429,2.033,430,2.489,431,3.102,432,3.102,434,1.803,435,2.033,436,1.197,437,2.033,438,2.033,439,2.033,440,3.102,441,2.033,442,2.033,443,3.102,444,3.102,445,2.033,446,2.033,447,1.803,448,2.033,449,2.033,450,2.033,451,2.033,477,3.336,685,4.867,751,1.494,856,3.019,897,1.803,913,3.733,914,3.733,915,3.733,918,2.033,954,2.033,964,2.033,965,2.033,966,2.033,967,4.209,968,3.762,969,3.762,970,3.102,972,1.803,977,1.803,978,1.803,1002,3.102,1008,1.38,1016,3.102,1017,2.033,1022,2.033,1153,2.033,1154,5.311,1155,6.735,1156,2.382,1157,2.382,1158,2.382,1159,6.152,1160,2.382,1161,5.311,1162,2.382,1163,2.382,1164,2.382,1165,2.382,1166,2.382,1167,2.382,1168,2.382,1169,2.382,1170,2.382,1171,2.382,1172,2.382,1173,2.382,1174,2.382,1175,2.382,1176,2.382,1177,2.382,1178,3.635]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":272,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1***$2@$3",{"_index":924,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["1****$2",{"_index":921,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["1.10.4",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["15.4.0",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["2.0",{"_index":655,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["2.15.0",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":1066,"title":{},"body":{"license.html":{}}}],["21",{"_index":1152,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1061,"title":{},"body":{"index.html":{},"license.html":{},"overview.html":{}}}],["3.1.20",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":511,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["3000",{"_index":563,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["33",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["4.0.55",{"_index":1007,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["6.6.3",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["60).tostring",{"_index":529,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["66",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1151,"title":{},"body":{"overview.html":{}}}],["7.6.5",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["7.9.8",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["7200",{"_index":641,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["75",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["8.2.0",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":645,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["_data",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":1083,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":625,"title":{},"body":{"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{}}}],["action",{"_index":658,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["activate",{"_index":140,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["activel",{"_index":145,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["add(setting.expiredin.value",{"_index":352,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["add(setting.refreshexpiredin.value",{"_index":355,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["address",{"_index":893,"title":{},"body":{"classes/ViewerEntity.html":{}}}],["advised",{"_index":1140,"title":{},"body":{"license.html":{}}}],["allow",{"_index":600,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"miscellaneous/enumerations.html":{}}}],["allows",{"_index":1045,"title":{},"body":{"index.html":{}}}],["allowuploadfiletype",{"_index":592,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["alphabet",{"_index":967,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["alphabet(a",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":1088,"title":{},"body":{"license.html":{}}}],["ap",{"_index":686,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["api",{"_index":211,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["apollo",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app.config",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":1033,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["applydecorators",{"_index":87,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":242,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["argstype",{"_index":389,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/UpdateViewerArgs.html":{}}}],["arising",{"_index":1137,"title":{},"body":{"license.html":{}}}],["array.isarray(token",{"_index":424,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["async",{"_index":118,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["audio",{"_index":611,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["auth",{"_index":78,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["auth_metadata_has_authorization",{"_index":90,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_metadata_has_authorization_type",{"_index":91,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_default_expired_in",{"_index":322,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_default_expired_unit",{"_index":323,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_default_refresh_expired_in",{"_index":324,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_default_refresh_expired_unit",{"_index":325,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_vvalidity_period_key",{"_index":326,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authdecoratoroptions",{"_index":75,"title":{"interfaces/AuthDecoratorOptions.html":{}},"body":{"interfaces/AuthDecoratorOptions.html":{},"coverage.html":{}}}],["authoprization",{"_index":309,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["authorization",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UpdateViewerArgs.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["authorization(options",{"_index":104,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"miscellaneous/functions.html":{}}}],["authorization(undefined",{"_index":585,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["authorization.guard",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{}}}],["authorization_token_create_user_where_allow_one",{"_index":252,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization_token_not_found",{"_index":319,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorizationguard",{"_index":46,"title":{"guards/AuthorizationGuard.html":{}},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"coverage.html":{}}}],["authorizationtoken",{"_index":177,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"miscellaneous/enumerations.html":{}}}],["authorizationtoken(@context",{"_index":268,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["authorizationtoken(context",{"_index":231,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["authorizationtoken.expiredat.gettime",{"_index":370,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["authorizationtoken.token",{"_index":373,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["authorizationtoken?.user",{"_index":414,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["authorizationtokenentity",{"_index":194,"title":{"classes/AuthorizationTokenEntity.html":{}},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"coverage.html":{}}}],["authorizationtokenentity'})@authorization({hasauthorization",{"_index":234,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["authorizationtokenentityresolver",{"_index":225,"title":{"classes/AuthorizationTokenEntityResolver.html":{}},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"coverage.html":{}}}],["authorizationtokenmodule",{"_index":11,"title":{"modules/AuthorizationTokenModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules.html":{},"overview.html":{}}}],["authorizationtokenservice",{"_index":128,"title":{"injectables/AuthorizationTokenService.html":{}},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"overview.html":{}}}],["authorizationtokenvalidityperiod",{"_index":327,"title":{"interfaces/AuthorizationTokenValidityPeriod.html":{}},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"coverage.html":{}}}],["authorizationwith",{"_index":110,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorizationwithout",{"_index":112,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authotizationtoken",{"_index":342,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["autoschemafile",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":1149,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":798,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["await",{"_index":181,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["base",{"_index":694,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["baseoptions",{"_index":682,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["bcrypt",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["binary",{"_index":1073,"title":{},"body":{"license.html":{}}}],["bio",{"_index":799,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["boolean",{"_index":85,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bound",{"_index":890,"title":{},"body":{"classes/ViewerEntity.html":{}}}],["browse",{"_index":1147,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1144,"title":{},"body":{"modules.html":{}}}],["bsd",{"_index":1060,"title":{},"body":{"index.html":{},"license.html":{}}}],["bucket",{"_index":569,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"injectables/TencentCloudCosService.html":{}}}],["bucket.split",{"_index":647,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["builds",{"_index":1039,"title":{},"body":{"index.html":{}}}],["business",{"_index":1127,"title":{},"body":{"license.html":{}}}],["byte",{"_index":1067,"title":{},"body":{"license.html":{}}}],["c",{"_index":1065,"title":{},"body":{"license.html":{}}}],["callback",{"_index":444,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["canactivate",{"_index":119,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["canactivate(context",{"_index":138,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["canactivelytokenhandler",{"_index":120,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["canactivelytokenhandler(context",{"_index":143,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["case",{"_index":875,"title":{},"body":{"injectables/UserService.html":{}}}],["caused",{"_index":1129,"title":{},"body":{"license.html":{}}}],["check",{"_index":932,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["china",{"_index":499,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["class",{"_index":70,"title":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":195,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"overview.html":{}}}],["classprovider",{"_index":429,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["clause",{"_index":1062,"title":{},"body":{"index.html":{},"license.html":{}}}],["client",{"_index":137,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.sendsms(request",{"_index":715,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["cloud",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/SecurityModule.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"miscellaneous/functions.html":{}}}],["cloud.module.ts",{"_index":677,"title":{},"body":{"modules/TencentCloudModule.html":{}}}],["cloud/common/index.ts",{"_index":974,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cloud/cos/cos.resolver.ts",{"_index":577,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["cloud/cos/cos.resolver.ts:43",{"_index":583,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cloud/cos/cos.resolver.ts:55",{"_index":587,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cloud/cos/cos.resolver.ts:72",{"_index":590,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cloud/cos/cos.resolver.ts:90",{"_index":595,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cloud/cos/entities/cos.entity.ts",{"_index":566,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"coverage.html":{}}}],["cloud/cos/entities/cos.entity.ts:17",{"_index":573,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{}}}],["cloud/cos/entities/cos.entity.ts:25",{"_index":574,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{}}}],["cloud/cos/entities/cos.entity.ts:33",{"_index":575,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{}}}],["cloud/cos/soc.service.ts",{"_index":622,"title":{},"body":{"injectables/TencentCloudCosService.html":{},"coverage.html":{}}}],["cloud/cos/soc.service.ts:19",{"_index":634,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/cos/soc.service.ts:29",{"_index":636,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/cos/soc.service.ts:36",{"_index":630,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/cos/soc.service.ts:64",{"_index":633,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/cos/soc.service.ts:9",{"_index":629,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/sms",{"_index":508,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["cloud/sms/sms.service.ts",{"_index":680,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"coverage.html":{}}}],["cloud/sms/sms.service.ts:14",{"_index":693,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["cloud/sms/sms.service.ts:29",{"_index":684,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["cloud/sms/sms.service.ts:45",{"_index":690,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["cloud/sts/entities/sts.entity.ts",{"_index":717,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"coverage.html":{}}}],["cloud/sts/entities/sts.entity.ts:18",{"_index":723,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{}}}],["cloud/sts/entities/sts.entity.ts:26",{"_index":721,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{}}}],["cloud/sts/entities/sts.entity.ts:34",{"_index":722,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{}}}],["cloud/sts/entities/sts.entity.ts:52",{"_index":734,"title":{},"body":{"classes/TencentCloudStsFederationToken.html":{}}}],["cloud/sts/entities/sts.entity.ts:61",{"_index":736,"title":{},"body":{"classes/TencentCloudStsFederationToken.html":{}}}],["cloud/sts/entities/sts.entity.ts:70",{"_index":735,"title":{},"body":{"classes/TencentCloudStsFederationToken.html":{}}}],["cloud/sts/sts.service.ts",{"_index":737,"title":{},"body":{"injectables/TencentCloudStsService.html":{},"coverage.html":{}}}],["cloud/sts/sts.service.ts:14",{"_index":738,"title":{},"body":{"injectables/TencentCloudStsService.html":{}}}],["cloud/tencent",{"_index":676,"title":{},"body":{"modules/TencentCloudModule.html":{}}}],["clous",{"_index":727,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authorizationtokenmodule",{"_index":287,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"overview.html":{}}}],["cluster_authorizationtokenmodule_exports",{"_index":289,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"overview.html":{}}}],["cluster_authorizationtokenmodule_imports",{"_index":288,"title":{},"body":{"modules/AuthorizationTokenModule.html":{}}}],["cluster_authorizationtokenmodule_providers",{"_index":290,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"overview.html":{}}}],["cluster_securitymodule",{"_index":452,"title":{},"body":{"modules/SecurityModule.html":{},"overview.html":{}}}],["cluster_securitymodule_exports",{"_index":454,"title":{},"body":{"modules/SecurityModule.html":{},"overview.html":{}}}],["cluster_securitymodule_imports",{"_index":453,"title":{},"body":{"modules/SecurityModule.html":{}}}],["cluster_securitymodule_providers",{"_index":455,"title":{},"body":{"modules/SecurityModule.html":{},"overview.html":{}}}],["cluster_tencentcloudmodule",{"_index":673,"title":{},"body":{"modules/TencentCloudModule.html":{},"overview.html":{}}}],["cluster_tencentcloudmodule_exports",{"_index":675,"title":{},"body":{"modules/TencentCloudModule.html":{},"overview.html":{}}}],["cluster_tencentcloudmodule_providers",{"_index":674,"title":{},"body":{"modules/TencentCloudModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":785,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":786,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":787,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":788,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule",{"_index":811,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_exports",{"_index":812,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_imports",{"_index":813,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["cluster_userprofilemodule_providers",{"_index":814,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["code",{"_index":471,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/ViewerResolver.html":{},"license.html":{}}}],["code'})@authorization({hasauthorization",{"_index":474,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["codes",{"_index":918,"title":{},"body":{"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["common",{"_index":701,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"miscellaneous/functions.html":{}}}],["compare",{"_index":866,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["compare(password",{"_index":1023,"title":{},"body":{"miscellaneous/functions.html":{}}}],["comparecode",{"_index":486,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["comparecode(phone",{"_index":492,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["compared",{"_index":361,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/ViewerResolver.html":{}}}],["comparepassword",{"_index":860,"title":{},"body":{"injectables/UserService.html":{}}}],["comparepassword(user",{"_index":863,"title":{},"body":{"injectables/UserService.html":{}}}],["comparesecurity",{"_index":861,"title":{},"body":{"injectables/UserService.html":{}}}],["comparesecurity(user",{"_index":867,"title":{},"body":{"injectables/UserService.html":{}}}],["compase",{"_index":494,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["complexity",{"_index":1051,"title":{},"body":{"index.html":{}}}],["compore",{"_index":865,"title":{},"body":{"injectables/UserService.html":{}}}],["conditions",{"_index":1079,"title":{},"body":{"license.html":{}}}],["config",{"_index":550,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{}}}],["connect",{"_index":445,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["consequential",{"_index":1119,"title":{},"body":{"license.html":{}}}],["const",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"injectables/UserService.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerResolver.html":{}}}],["constants",{"_index":167,"title":{},"body":{"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":125,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["constructor(authorizationtokenservice",{"_index":229,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["constructor(cosservice",{"_index":581,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["constructor(prisma",{"_index":301,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/UserProfileService.html":{}}}],["constructor(prismaclient",{"_index":850,"title":{},"body":{"classes/UserResolver.html":{}}}],["constructor(private",{"_index":478,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"classes/UserInterfaceResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["constructor(profileservice",{"_index":822,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["constructor(reflector",{"_index":126,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["constructor(request",{"_index":396,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["constructor(securitysmsservice",{"_index":467,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/UserService.html":{}}}],["constructor(sts",{"_index":627,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["constructor(tencentcloudsmsservice",{"_index":489,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["constructor(userprofileservice",{"_index":776,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["constructor(userservice",{"_index":899,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["context",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["context.authorizationtoken",{"_index":269,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["context.gethandler",{"_index":176,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["context.gettype",{"_index":171,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["context.request.context",{"_index":415,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.switchtohttp().getrequest",{"_index":184,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["context.switchtohttp().getrequest().context",{"_index":174,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["context.ts",{"_index":391,"title":{},"body":{"classes/ExecutionContext.html":{},"coverage.html":{}}}],["context.ts:15",{"_index":400,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:16",{"_index":399,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:17",{"_index":401,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:24",{"_index":403,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:54",{"_index":408,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:7",{"_index":397,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:73",{"_index":406,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.user",{"_index":482,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"classes/ViewerResolver.html":{}}}],["continue",{"_index":931,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["contract",{"_index":1132,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":1093,"title":{},"body":{"license.html":{}}}],["convert",{"_index":927,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["copyright",{"_index":1064,"title":{},"body":{"license.html":{}}}],["core",{"_index":135,"title":{},"body":{"guards/AuthorizationGuard.html":{},"index.html":{}}}],["cos",{"_index":567,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{}}}],["cos/cos.resolver",{"_index":678,"title":{},"body":{"modules/TencentCloudModule.html":{}}}],["cosservice",{"_index":584,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["coverage",{"_index":941,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":131,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{}}}],["create(prismaclient",{"_index":402,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["createauthorizationtoken",{"_index":227,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["createauthorizationtoken(args",{"_index":238,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["createauthorizationtokenargs",{"_index":239,"title":{"classes/CreateAuthorizationTokenArgs.html":{}},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/UpdateViewerArgs.html":{},"coverage.html":{}}}],["createclient",{"_index":681,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["createclient(region",{"_index":683,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["createcostemporaryreadcredential",{"_index":579,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["createcostemporarywritecredential",{"_index":580,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["createcostemporarywritecredential(type",{"_index":591,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["createdat",{"_index":537,"title":{},"body":{"injectables/SecuritySmsService.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/ViewerEntity.html":{}}}],["createparamdecorator(function",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createsecurity",{"_index":465,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["createsecurity(phone",{"_index":470,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["createtemporaryreadcredential",{"_index":623,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["createtemporarywritecredential",{"_index":624,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["createtemporarywritecredential(name",{"_index":632,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["createtokenwithsecurity",{"_index":297,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["createtokenwithsecurity(user",{"_index":304,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["createuniontype",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuserauthorizationtoken",{"_index":298,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["createuserauthorizationtoken(user",{"_index":306,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["createviewersecurity",{"_index":466,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["createviewersecurity(@context",{"_index":481,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["createviewersecurity(context",{"_index":473,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["credential",{"_index":568,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"miscellaneous/functions.html":{}}}],["credential'})@authorizationwith",{"_index":594,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["credentials",{"_index":578,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["custom",{"_index":968,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["customalphabet('0123456789",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customalphabet('23456789qwertyupasdfghjklzxcvbnm",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customalphabet('qwertyuiopasdfghjklzxcvbnm",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customalphabet(alphabet",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damage",{"_index":1143,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1120,"title":{},"body":{"license.html":{}}}],["data",{"_index":278,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/ViewerResolver.html":{},"license.html":{}}}],["data[key",{"_index":929,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["database",{"_index":317,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["datasources",{"_index":439,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":203,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/ViewerEntity.html":{}}}],["date.now",{"_index":541,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["dayjs",{"_index":318,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"injectables/SecuritySmsService.html":{},"dependencies.html":{}}}],["dayjs().add(10",{"_index":359,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["dayjs().add(options.expiredin",{"_index":519,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["days",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["decorator",{"_index":79,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":204,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["default",{"_index":685,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":129,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derived",{"_index":1097,"title":{},"body":{"license.html":{}}}],["desc",{"_index":538,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["description",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["destory",{"_index":449,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["developers",{"_index":1047,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1052,"title":{},"body":{"index.html":{}}}],["direct",{"_index":1114,"title":{},"body":{"license.html":{}}}],["disclaimed",{"_index":1110,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1085,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":450,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["distribution",{"_index":1090,"title":{},"body":{"license.html":{}}}],["document",{"_index":1057,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":942,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["don't",{"_index":186,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["dontenvconfig",{"_index":551,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["dot",{"_index":560,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["dotenv",{"_index":552,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"dependencies.html":{}}}],["dto",{"_index":854,"title":{},"body":{"classes/UserResolver.html":{}}}],["dto/create",{"_index":261,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["dto/profile",{"_index":829,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["dto/update",{"_index":916,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["duration",{"_index":637,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["durationseconds",{"_index":650,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["e",{"_index":891,"title":{},"body":{"classes/ViewerEntity.html":{}}}],["ecosystem",{"_index":1053,"title":{},"body":{"index.html":{}}}],["effect",{"_index":657,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["email",{"_index":771,"title":{},"body":{"classes/UserInterface.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["email(@parent",{"_index":922,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["email(user",{"_index":901,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["email.replace(/^(\\w{1}).*?(\\w{1",{"_index":923,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["encrpyted",{"_index":1026,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encrypted",{"_index":1024,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endorse",{"_index":1094,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":97,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"interfaces/SocfonyConfig.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{}}}],["endpoit",{"_index":100,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntity.html":{}}}],["entities/authorization",{"_index":263,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["entities/cos.entity",{"_index":598,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["entities/profile.entity",{"_index":830,"title":{},"body":{"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{}}}],["entities/user.entity",{"_index":855,"title":{},"body":{"classes/UserResolver.html":{}}}],["entities/user.interface",{"_index":781,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["entities/user.union",{"_index":857,"title":{},"body":{"classes/UserResolver.html":{}}}],["entities/viewer.entity",{"_index":883,"title":{},"body":{"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerResolver.html":{}}}],["entity",{"_index":199,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/UserEntity.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["entity.'})@authorization({hasauthorization",{"_index":244,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["enum",{"_index":603,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["enumerations",{"_index":1009,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":265,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["env",{"_index":554,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{}}}],["error",{"_index":367,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/SocfonyConfig.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["error(authorization_token_create_user_where_allow_one",{"_index":273,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["error(authorization_token_not_found",{"_index":368,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["error(constants[`user_${key.touppercase()}_field_existed",{"_index":936,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["error(security_compare_failed",{"_index":365,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/ViewerResolver.html":{}}}],["error(unauthorized",{"_index":193,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["error(user_not_found",{"_index":281,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/UserResolver.html":{}}}],["error(user_not_set_phone",{"_index":483,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["even",{"_index":1139,"title":{},"body":{"license.html":{}}}],["event",{"_index":1111,"title":{},"body":{"license.html":{}}}],["exection",{"_index":909,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["execution",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["executioncontext",{"_index":31,"title":{"classes/ExecutionContext.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["executioncontext.create(prisma",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["exemplary",{"_index":1118,"title":{},"body":{"license.html":{}}}],["expiration",{"_index":733,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["expired",{"_index":206,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"miscellaneous/enumerations.html":{}}}],["expiredat",{"_index":200,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{}}}],["expiredat.gettime",{"_index":345,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["expiredin",{"_index":335,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"injectables/SecuritySmsService.html":{}}}],["expiredin.unit",{"_index":339,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["expiredin.value",{"_index":337,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["expiredtime",{"_index":731,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["export",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["express",{"_index":164,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/ExecutionContext.html":{},"dependencies.html":{},"license.html":{}}}],["extendcode",{"_index":706,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["extends",{"_index":436,"title":{},"body":{"modules/PrismaModule.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":113,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"injectables/SecuritySmsService.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["federation",{"_index":588,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["field",{"_index":219,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["field((type",{"_index":224,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/ViewerEntity.html":{}}}],["field(undefined",{"_index":205,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerEntity.html":{}}}],["file",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["find",{"_index":385,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["fitness",{"_index":1107,"title":{},"body":{"license.html":{}}}],["fiveminutesdate",{"_index":374,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["fiveminutesdate.gettime",{"_index":371,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["flutter",{"_index":1056,"title":{},"body":{"index.html":{}}}],["following",{"_index":1078,"title":{},"body":{"license.html":{}}}],["form",{"_index":1086,"title":{},"body":{"license.html":{}}}],["forms",{"_index":1074,"title":{},"body":{"license.html":{}}}],["found",{"_index":366,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["friendly",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full",{"_index":895,"title":{},"body":{"classes/ViewerEntity.html":{},"index.html":{}}}],["function",{"_index":103,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"interfaces/SocfonyConfig.html":{},"classes/ViewerResolver.html":{},"coverage.html":{}}}],["functions",{"_index":1015,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["gem",{"_index":1068,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getauthorizationtoken",{"_index":394,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["getauthorizationtoken(prismaclient",{"_index":405,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["getbaseoptions",{"_index":692,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["getconfig",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"interfaces/SocfonyConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcredential",{"_index":700,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getfederationtokenresponse",{"_index":725,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["gethasauthorization",{"_index":121,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gethasauthorization(context",{"_index":147,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gethasauthorizationtype",{"_index":122,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gethasauthorizationtype(context",{"_index":150,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gethttpauthorization",{"_index":395,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["gethttpauthorization(request",{"_index":407,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["getoptions",{"_index":487,"title":{},"body":{"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{}}}],["getoptions(haschina",{"_index":496,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["gettemporarycredentialdurationseconds",{"_index":635,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["getting",{"_index":1034,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettokenexpiredin",{"_index":299,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["gif",{"_index":607,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["global",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["goods",{"_index":1123,"title":{},"body":{"license.html":{}}}],["gqlcontexttype",{"_index":161,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gqlexecutioncontext",{"_index":162,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext",{"_index":173,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":1148,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":172,"title":{},"body":{"guards/AuthorizationGuard.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["graphqlisodatetime",{"_index":476,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{}}}],["graphqlmodule",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forrootasync",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["guangzhou",{"_index":687,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["guard",{"_index":114,"title":{"guards/AuthorizationGuard.html":{}},"body":{"guards/AuthorizationGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":115,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["handler",{"_index":146,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["hasauthorization",{"_index":83,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"miscellaneous/variables.html":{}}}],["haschina",{"_index":498,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["hash",{"_index":928,"title":{},"body":{"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hash(password",{"_index":1027,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hastokenexpired",{"_index":300,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["hastokenexpired(token",{"_index":313,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["hastokenexpiredtype",{"_index":86,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"miscellaneous/enumerations.html":{}}}],["hastokenexpiredtype.auth",{"_index":108,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"miscellaneous/variables.html":{}}}],["hastokenexpiredtype.refresh",{"_index":284,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["header",{"_index":409,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["headers",{"_index":419,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["headers[key",{"_index":423,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["headers[key.tolowercase",{"_index":421,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["help",{"_index":1049,"title":{},"body":{"index.html":{}}}],["helper",{"_index":1029,"title":{},"body":{"miscellaneous/functions.html":{}}}],["holder",{"_index":1091,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1101,"title":{},"body":{"license.html":{}}}],["hook",{"_index":443,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":96,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpprofile",{"_index":711,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["icontext",{"_index":159,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["icontext.create",{"_index":182,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["id",{"_index":217,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["idhelper",{"_index":257,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{}}}],["idhelper.alphabet(32",{"_index":649,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["idhelper.id(128",{"_index":351,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["idhelper.id(32",{"_index":279,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/SecuritySmsService.html":{}}}],["idhelper.numeral(6",{"_index":518,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["images",{"_index":604,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["implements",{"_index":168,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"modules/PrismaModule.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"miscellaneous/variables.html":{}}}],["implied",{"_index":1102,"title":{},"body":{"license.html":{}}}],["import",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["imports",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{}}}],["incidental",{"_index":1116,"title":{},"body":{"license.html":{}}}],["include",{"_index":427,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["including",{"_index":1104,"title":{},"body":{"license.html":{}}}],["index",{"_index":80,"title":{"index.html":{}},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":1115,"title":{},"body":{"license.html":{}}}],["info",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["inherited",{"_index":755,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["inique",{"_index":886,"title":{},"body":{"classes/UserWhereUniqueInput.html":{}}}],["init",{"_index":442,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["initializecontext",{"_index":123,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["initializecontext(context",{"_index":152,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["initialzd",{"_index":154,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["inject",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":160,"title":{"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":295,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":387,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["inputtype",{"_index":844,"title":{},"body":{"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["instanceof",{"_index":363,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/ViewerResolver.html":{}}}],["int",{"_index":724,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["interface",{"_index":74,"title":{"interfaces/AuthDecoratorOptions.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"interfaces/SocfonyConfig.html":{}},"body":{"interfaces/AuthDecoratorOptions.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"interfaces/SocfonyConfig.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"coverage.html":{}}}],["interface.resolver",{"_index":793,"title":{},"body":{"modules/UserModule.html":{}}}],["interface.resolver.ts",{"_index":775,"title":{},"body":{"classes/UserInterfaceResolver.html":{},"coverage.html":{}}}],["interface.resolver.ts:11",{"_index":778,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["interface.resolver.ts:23",{"_index":780,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["interfaces",{"_index":76,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"interfaces/SocfonyConfig.html":{},"overview.html":{}}}],["interfacetype",{"_index":768,"title":{},"body":{"classes/UserInterface.html":{}}}],["interruption",{"_index":1128,"title":{},"body":{"license.html":{}}}],["iso8601",{"_index":732,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["isproduction",{"_index":547,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["item",{"_index":525,"title":{},"body":{"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{}}}],["jpg",{"_index":605,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["json.stringify",{"_index":653,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["kernel",{"_index":404,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["key",{"_index":416,"title":{},"body":{"classes/ExecutionContext.html":{},"injectables/TencentCloudCosService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["liability",{"_index":1131,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1113,"title":{},"body":{"license.html":{}}}],["license",{"_index":1059,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":1063,"title":{},"body":{"index.html":{}}}],["limited",{"_index":1105,"title":{},"body":{"license.html":{}}}],["list",{"_index":666,"title":{},"body":{"injectables/TencentCloudCosService.html":{},"license.html":{}}}],["literal",{"_index":377,"title":{},"body":{"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/TencentCloudCosResolver.html":{}}}],["load",{"_index":553,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{}}}],["loadconfig",{"_index":949,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadconfig(path",{"_index":555,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{}}}],["location",{"_index":800,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["logged",{"_index":213,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["logger",{"_index":430,"title":{},"body":{"modules/PrismaModule.html":{},"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["logger('prisma",{"_index":437,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["logger('socfony",{"_index":556,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["logger.error(error.message",{"_index":557,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["logger.log(`loaded",{"_index":559,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["login",{"_index":216,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{}}}],["loss",{"_index":1125,"title":{},"body":{"license.html":{}}}],["lte",{"_index":358,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["mail",{"_index":892,"title":{},"body":{"classes/ViewerEntity.html":{}}}],["map((item",{"_index":524,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["matches",{"_index":939,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["matching",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materials",{"_index":1089,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":1044,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1106,"title":{},"body":{"license.html":{}}}],["met",{"_index":1080,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":1002,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":117,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["middleware",{"_index":434,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mime",{"_index":602,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["minutes').todate",{"_index":360,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["miscellaneous",{"_index":1008,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":937,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["modification",{"_index":1075,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["months",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":1046,"title":{},"body":{"index.html":{}}}],["mp3",{"_index":612,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["mp4",{"_index":609,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["mutation",{"_index":249,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{}}}],["mutation((returns",{"_index":283,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["mutation(undefined",{"_index":240,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{}}}],["name",{"_index":133,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["name/cos:abortmultipartupload",{"_index":671,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:completemultipartupload",{"_index":670,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:getobject",{"_index":659,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:headobject",{"_index":660,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:initiatemultipartupload",{"_index":665,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:listmultipartuploads",{"_index":667,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:listparts",{"_index":668,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:optionsobject",{"_index":661,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:postobject",{"_index":664,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:putobject",{"_index":663,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:uploadpart",{"_index":669,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["names",{"_index":1092,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":332,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["namespace_name",{"_index":331,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["nanoid",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["nanoid(size",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":94,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/SecuritySmsResolver.html":{},"classes/UpdateViewerArgs.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["negligence",{"_index":1135,"title":{},"body":{"license.html":{}}}],["nestjs",{"_index":134,"title":{},"body":{"guards/AuthorizationGuard.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["networking",{"_index":1042,"title":{},"body":{"index.html":{}}}],["new",{"_index":192,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newphonesecurity",{"_index":745,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"classes/ViewerResolver.html":{}}}],["nextjs",{"_index":149,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["nodejs",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["nodejs/tencentcloud/services/sms/v20190711/sms_client",{"_index":697,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["nodejs/tencentcloud/services/sms/v20190711/sms_models",{"_index":699,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["nodejs/tencentcloud/services/sts/v20180813/sts_client",{"_index":740,"title":{},"body":{"injectables/TencentCloudStsService.html":{}}}],["nodejs/tencentcloud/services/sts/v20180813/sts_models",{"_index":726,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["notice",{"_index":1084,"title":{},"body":{"license.html":{}}}],["nullable",{"_index":728,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerEntity.html":{}}}],["number",{"_index":379,"title":{},"body":{"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["number.parseint",{"_index":509,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["numeral",{"_index":969,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":308,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":617,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudSmsService.html":{},"classes/ViewerResolver.html":{}}}],["object.keys(data",{"_index":926,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["object.keys(where).length",{"_index":271,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["objecttype",{"_index":220,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserProfileEntity.html":{},"classes/ViewerEntity.html":{}}}],["ogg",{"_index":610,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["omit",{"_index":763,"title":{},"body":{"classes/UserInterface.html":{},"classes/UserProfileUpdateInput.html":{},"classes/ViewerEntity.html":{}}}],["omittype",{"_index":845,"title":{},"body":{"classes/UserProfileUpdateInput.html":{}}}],["onmoduledestroy",{"_index":431,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":432,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1037,"title":{},"body":{"index.html":{}}}],["optional",{"_index":82,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"miscellaneous/functions.html":{}}}],["options.endpoint",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["options.expiredin",{"_index":528,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["options.isproduction",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["options.templateid",{"_index":533,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["options.veriables",{"_index":522,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["options?.hasauthorization",{"_index":106,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["options?.type",{"_index":107,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["orderby",{"_index":536,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["other.id",{"_index":935,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["otherwise",{"_index":1136,"title":{},"body":{"license.html":{}}}],["out",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1150,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":809,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["package",{"_index":982,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":99,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["param.hasauthorization",{"_index":101,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["param.type",{"_index":102,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["parameters",{"_index":132,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":691,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["paramsset",{"_index":521,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["parent",{"_index":250,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"classes/ViewerResolver.html":{}}}],["partialtype",{"_index":846,"title":{},"body":{"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["partialtype(userprofileentity",{"_index":847,"title":{},"body":{"classes/UserProfileUpdateInput.html":{}}}],["partialtype(viewerentity",{"_index":887,"title":{},"body":{"classes/UserWhereUniqueInput.html":{}}}],["particular",{"_index":1108,"title":{},"body":{"license.html":{}}}],["password",{"_index":772,"title":{},"body":{"classes/UserInterface.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerResolver.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["passwordhelper",{"_index":870,"title":{},"body":{"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["passwordhelper.compare(password",{"_index":872,"title":{},"body":{"injectables/UserService.html":{}}}],["passwordhelper.hash(data[key",{"_index":930,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["path",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"interfaces/SocfonyConfig.html":{},"classes/UserProfileEntity.html":{},"miscellaneous/functions.html":{}}}],["period",{"_index":312,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":1100,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1076,"title":{},"body":{"license.html":{}}}],["phone",{"_index":280,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserInterface.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["phone(@parent",{"_index":919,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["phone(user",{"_index":903,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["phone.replace(/(.*)\\d{4}(\\d{4",{"_index":920,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["phone.startswith('+86",{"_index":516,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["phonenumberset",{"_index":532,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["pick",{"_index":689,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"classes/UserUpdateInput.html":{}}}],["picktype",{"_index":749,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["picktype(viewerentity",{"_index":884,"title":{},"body":{"classes/UserUpdateInput.html":{}}}],["platform",{"_index":1040,"title":{},"body":{"index.html":{}}}],["playground",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin",{"_index":1043,"title":{},"body":{"index.html":{}}}],["png",{"_index":606,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["policy",{"_index":652,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["port",{"_index":548,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["possibility",{"_index":1141,"title":{},"body":{"license.html":{}}}],["prifle",{"_index":820,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["prior",{"_index":1099,"title":{},"body":{"license.html":{}}}],["prisma",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"classes/UserInterface.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma.authorizationtokengetpayload",{"_index":223,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{}}}],["prisma.middleware",{"_index":1030,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prisma.usergetpayload",{"_index":838,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["prisma.userwhereuniqueinput",{"_index":888,"title":{},"body":{"classes/UserWhereUniqueInput.html":{}}}],["prisma/client",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["prismaclient.authorizationtoken.findunique",{"_index":426,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["prismaloggermiddleware",{"_index":433,"title":{},"body":{"modules/PrismaModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["prismaloggermiddleware(logger",{"_index":1028,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prismamodule",{"_index":13,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["private",{"_index":169,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["process.argv",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.client_graphql_endpoint",{"_index":564,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["process.env.client_server_port",{"_index":562,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["process.env.database_url",{"_index":441,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":561,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["process.env.tencent_cloud_cos_bucket",{"_index":639,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["process.env.tencent_cloud_cos_region",{"_index":640,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["process.env.tencent_cloud_sms_app_id",{"_index":703,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["process.env.tencent_cloud_sms_china_template_id",{"_index":512,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_china_veriables",{"_index":513,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_expired_in",{"_index":510,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_extend_code",{"_index":707,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["process.env.tencent_cloud_sms_other_template_id",{"_index":514,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_other_veriables",{"_index":515,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_sender_id",{"_index":709,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["process.env.tencent_cloud_sms_sign",{"_index":705,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["process.exit(1",{"_index":558,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["procurement",{"_index":1121,"title":{},"body":{"license.html":{}}}],["production",{"_index":549,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["products",{"_index":1096,"title":{},"body":{"license.html":{}}}],["profile",{"_index":710,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/ViewerEntity.html":{}}}],["profile'})@authorizationwith",{"_index":827,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["profile(@parent",{"_index":783,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["profile(user",{"_index":779,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["profile.resolver",{"_index":817,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["profile.service",{"_index":818,"title":{},"body":{"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{}}}],["profile.userid",{"_index":833,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["profile/entities/profile.entity",{"_index":770,"title":{},"body":{"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{}}}],["profile/profile.module",{"_index":792,"title":{},"body":{"modules/UserModule.html":{}}}],["profile/profile.service",{"_index":782,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["profileservice",{"_index":824,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["profits",{"_index":1126,"title":{},"body":{"license.html":{}}}],["project",{"_index":1054,"title":{},"body":{"index.html":{}}}],["promise",{"_index":142,"title":{},"body":{"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{}}}],["promote",{"_index":1095,"title":{},"body":{"license.html":{}}}],["properties",{"_index":81,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntity.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerEntity.html":{}}}],["provide",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1077,"title":{},"body":{"license.html":{}}}],["provider",{"_index":435,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["public",{"_index":392,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["purpose",{"_index":1109,"title":{},"body":{"license.html":{}}}],["qcs::cos:${region}:uid/${uid}:${bucket",{"_index":662,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["qcs::cos:${region}:uid/${uid}:${bucket}/${name",{"_index":672,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["query",{"_index":233,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["query(undefined",{"_index":232,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["read",{"_index":589,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{}}}],["readability",{"_index":970,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["readability(23456789qwertyupasdfghjklzxcvbnm",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":170,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["real",{"_index":1032,"title":{},"body":{"miscellaneous/functions.html":{}}}],["redistribution",{"_index":1071,"title":{},"body":{"license.html":{}}}],["redistributions",{"_index":1081,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":127,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["refresh",{"_index":208,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"miscellaneous/enumerations.html":{}}}],["refreshauthorizationtoken",{"_index":228,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{}}}],["refreshauthorizationtoken(@context",{"_index":285,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["refreshauthorizationtoken(authorizationtoken",{"_index":315,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["refreshauthorizationtoken(context",{"_index":243,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["refreshexpiredat",{"_index":201,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{}}}],["refreshexpiredin",{"_index":336,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{}}}],["refreshexpiredin.unit",{"_index":341,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["refreshexpiredin.value",{"_index":340,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["region",{"_index":570,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["register",{"_index":614,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["registered",{"_index":754,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/ViewerEntity.html":{}}}],["registerenumtype",{"_index":596,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["registerenumtype(allowuploadfiletype",{"_index":616,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["rejectonnotfound",{"_index":274,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"injectables/SecuritySmsService.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["replace('#code",{"_index":526,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["replace('#expired",{"_index":527,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["reproduce",{"_index":1087,"title":{},"body":{"license.html":{}}}],["req",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["request",{"_index":163,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/ExecutionContext.html":{},"injectables/TencentCloudSmsService.html":{}}}],["request.context",{"_index":411,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["request.context.authorizationtoken?.token",{"_index":412,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["request.header",{"_index":417,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["request.header(key",{"_index":418,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["request.headers",{"_index":420,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["reserved",{"_index":1070,"title":{},"body":{"license.html":{}}}],["reset",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["resolve",{"_index":248,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"injectables/UserProfileService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{}}}],["resolvecontext",{"_index":124,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["resolvecontext(context",{"_index":156,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["resolvefield",{"_index":597,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"classes/ViewerResolver.html":{}}}],["resolvefield(undefined",{"_index":586,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"classes/ViewerResolver.html":{}}}],["resolveprofile",{"_index":835,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["resolveprofile(user",{"_index":837,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["resolver",{"_index":158,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["resolvers",{"_index":679,"title":{},"body":{"modules/TencentCloudModule.html":{}}}],["resolvetype",{"_index":978,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["resolvetype(value",{"_index":1031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resource",{"_index":620,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{}}}],["result",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1082,"title":{},"body":{"license.html":{}}}],["return",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":141,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1069,"title":{},"body":{"license.html":{}}}],["root",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["runner",{"_index":237,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{}}}],["rxjs",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["schema",{"_index":615,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["scofony",{"_index":908,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["sdk",{"_index":696,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"dependencies.html":{}}}],["seconds",{"_index":638,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["seconds').todate",{"_index":520,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["secrect",{"_index":720,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["secuity",{"_index":869,"title":{},"body":{"injectables/UserService.html":{}}}],["secure",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["security",{"_index":270,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/enumerations.html":{}}}],["security.expiredat.gettime",{"_index":540,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["security.id",{"_index":543,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["security.usedat",{"_index":539,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["security/security.module",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["security_compare_failed",{"_index":320,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["securitymodule",{"_index":14,"title":{"modules/SecurityModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SecurityModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["securitysmscode",{"_index":505,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["securitysmsresolver",{"_index":459,"title":{"classes/SecuritySmsResolver.html":{}},"body":{"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"coverage.html":{}}}],["securitysmsservice",{"_index":456,"title":{"injectables/SecuritySmsService.html":{}},"body":{"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["secyrity",{"_index":469,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["send",{"_index":479,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudSmsService.html":{}}}],["send(params",{"_index":688,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["send(phone",{"_index":502,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["senderid",{"_index":708,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["sendsmsrequest",{"_index":698,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["sent",{"_index":495,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["server",{"_index":739,"title":{},"body":{"injectables/TencentCloudStsService.html":{},"dependencies.html":{}}}],["service",{"_index":136,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["services",{"_index":1124,"title":{},"body":{"license.html":{}}}],["set",{"_index":447,"title":{},"body":{"modules/PrismaModule.html":{},"classes/UpdateViewerArgs.html":{},"miscellaneous/variables.html":{}}}],["setmetadata",{"_index":88,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["setmetadata(auth_metadata_has_authorization",{"_index":105,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["setting",{"_index":329,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["setting.expiredin.unit",{"_index":353,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["setting.refreshexpiredin.unit",{"_index":356,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["shall",{"_index":1112,"title":{},"body":{"license.html":{}}}],["sign",{"_index":704,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["size",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sms",{"_index":464,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/UserService.html":{}}}],["sms.resolver",{"_index":460,"title":{},"body":{"modules/SecurityModule.html":{}}}],["sms.resolver.ts",{"_index":463,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"coverage.html":{}}}],["sms.resolver.ts:13",{"_index":468,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["sms.resolver.ts:27",{"_index":472,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["sms.resolver.ts:47",{"_index":475,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["sms.service",{"_index":461,"title":{},"body":{"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/UserService.html":{}}}],["sms.service.ts",{"_index":485,"title":{},"body":{"injectables/SecuritySmsService.html":{},"coverage.html":{}}}],["sms.service.ts:11",{"_index":491,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.service.ts:113",{"_index":506,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.service.ts:26",{"_index":497,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.service.ts:49",{"_index":503,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.service.ts:85",{"_index":493,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.tencentcloudapi.com",{"_index":712,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["sms_code",{"_index":1014,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["smssdkappid",{"_index":702,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["soc.service",{"_index":599,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["socfony",{"_index":155,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["socfonyconfig",{"_index":545,"title":{"interfaces/SocfonyConfig.html":{}},"body":{"interfaces/SocfonyConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["social",{"_index":1041,"title":{},"body":{"index.html":{}}}],["software",{"_index":1038,"title":{},"body":{"index.html":{},"license.html":{}}}],["solve",{"_index":1050,"title":{},"body":{"index.html":{}}}],["source",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"index.html":{},"license.html":{}}}],["special",{"_index":1117,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1098,"title":{},"body":{"license.html":{}}}],["split",{"_index":523,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["src/.../app.config.ts",{"_index":1019,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../authorization.decorator.ts",{"_index":1016,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../context.decorator.ts",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cos.resolver.ts",{"_index":1010,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../enums.ts",{"_index":1011,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../id.helper.ts",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1020,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.middleware.ts",{"_index":1021,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":1017,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../password.helper.ts",{"_index":1018,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prisma.module.ts",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.union.ts",{"_index":1022,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../viewer.resolver.ts",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.config.ts",{"_index":546,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["src/authorization",{"_index":196,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/SecuritySmsResolver.html":{},"classes/UpdateViewerArgs.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/authorization.decorator",{"_index":251,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{}}}],["src/authorization.decorator.ts",{"_index":77,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/authorization.guard.ts",{"_index":116,"title":{},"body":{"guards/AuthorizationGuard.html":{},"coverage.html":{}}}],["src/authorization.guard.ts:101",{"_index":139,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:19",{"_index":130,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:36",{"_index":157,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:48",{"_index":148,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:59",{"_index":151,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:71",{"_index":144,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:88",{"_index":153,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/constants",{"_index":254,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["src/constants.ts",{"_index":964,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/context.decorator",{"_index":255,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/ViewerResolver.html":{}}}],["src/context.decorator.ts",{"_index":965,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/execution",{"_index":256,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"coverage.html":{}}}],["src/helper",{"_index":258,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["src/helper/id.helper.ts",{"_index":966,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/helper/password.helper.ts",{"_index":971,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/main.ts",{"_index":972,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/prisma",{"_index":292,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{}}}],["src/prisma/middleware/logger.middleware.ts",{"_index":973,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":428,"title":{},"body":{"modules/PrismaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/security/security",{"_index":462,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/security/security.module",{"_index":791,"title":{},"body":{"modules/UserModule.html":{}}}],["src/security/security.module.ts",{"_index":457,"title":{},"body":{"modules/SecurityModule.html":{}}}],["src/tencent",{"_index":458,"title":{},"body":{"modules/SecurityModule.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/user/dto",{"_index":390,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["src/user/dto/update",{"_index":743,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"coverage.html":{}}}],["src/user/dto/user",{"_index":881,"title":{},"body":{"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts",{"_index":752,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["src/user/entities/user.interface.ts",{"_index":762,"title":{},"body":{"classes/UserInterface.html":{},"coverage.html":{}}}],["src/user/entities/user.interface.ts:27",{"_index":765,"title":{},"body":{"classes/UserInterface.html":{}}}],["src/user/entities/user.interface.ts:36",{"_index":766,"title":{},"body":{"classes/UserInterface.html":{}}}],["src/user/entities/user.interface.ts:44",{"_index":764,"title":{},"body":{"classes/UserInterface.html":{}}}],["src/user/entities/user.interface.ts:52",{"_index":767,"title":{},"body":{"classes/UserInterface.html":{}}}],["src/user/entities/user.union.ts",{"_index":977,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/user/entities/viewer.entity",{"_index":222,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{}}}],["src/user/entities/viewer.entity.ts",{"_index":889,"title":{},"body":{"classes/ViewerEntity.html":{},"coverage.html":{}}}],["src/user/entities/viewer.entity.ts:22",{"_index":894,"title":{},"body":{"classes/ViewerEntity.html":{}}}],["src/user/entities/viewer.entity.ts:31",{"_index":896,"title":{},"body":{"classes/ViewerEntity.html":{}}}],["src/user/enums",{"_index":260,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{}}}],["src/user/enums.ts",{"_index":1013,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/user/profile/dto/profile",{"_index":842,"title":{},"body":{"classes/UserProfileUpdateInput.html":{},"coverage.html":{}}}],["src/user/profile/entities/profile.entity.ts",{"_index":797,"title":{},"body":{"classes/UserProfileEntity.html":{},"coverage.html":{}}}],["src/user/profile/entities/profile.entity.ts:16",{"_index":810,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:25",{"_index":806,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:34",{"_index":803,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:43",{"_index":804,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:52",{"_index":805,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:61",{"_index":808,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/profile.module.ts",{"_index":815,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["src/user/profile/profile.resolver.ts",{"_index":819,"title":{},"body":{"classes/UserProfileResolver.html":{},"coverage.html":{}}}],["src/user/profile/profile.resolver.ts:13",{"_index":823,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["src/user/profile/profile.resolver.ts:33",{"_index":828,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["src/user/profile/profile.service.ts",{"_index":834,"title":{},"body":{"injectables/UserProfileService.html":{},"coverage.html":{}}}],["src/user/profile/profile.service.ts:19",{"_index":839,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["src/user/profile/profile.service.ts:8",{"_index":836,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["src/user/user",{"_index":774,"title":{},"body":{"classes/UserInterfaceResolver.html":{},"coverage.html":{}}}],["src/user/user.module",{"_index":293,"title":{},"body":{"modules/AuthorizationTokenModule.html":{}}}],["src/user/user.module.ts",{"_index":790,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.resolver.ts",{"_index":849,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["src/user/user.resolver.ts:12",{"_index":851,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.resolver.ts:26",{"_index":853,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.service",{"_index":321,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["src/user/user.service.ts",{"_index":859,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:11",{"_index":862,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":864,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:34",{"_index":868,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/viewer.resolver.ts",{"_index":897,"title":{},"body":{"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/viewer.resolver.ts:38",{"_index":900,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["src/user/viewer.resolver.ts:54",{"_index":904,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["src/user/viewer.resolver.ts:68",{"_index":902,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["src/user/viewer.resolver.ts:85",{"_index":912,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["src/user/viewer.resolver.ts:98",{"_index":907,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["stack",{"_index":1036,"title":{},"body":{"index.html":{}}}],["started",{"_index":1035,"title":{"index.html":{},"license.html":{}},"body":{}}],["statement",{"_index":656,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["statements",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":393,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["status",{"_index":1055,"title":{},"body":{"index.html":{}}}],["storage",{"_index":802,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["strict",{"_index":1133,"title":{},"body":{"license.html":{}}}],["string",{"_index":210,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosCredentials.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["sts",{"_index":572,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{}}}],["sts.tencentcloudapi.com",{"_index":741,"title":{},"body":{"injectables/TencentCloudStsService.html":{}}}],["stsclient",{"_index":643,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["stsclient.getfederationtoken",{"_index":648,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["substitute",{"_index":1122,"title":{},"body":{"license.html":{}}}],["such",{"_index":1142,"title":{},"body":{"license.html":{}}}],["super",{"_index":438,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":1145,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1146,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":874,"title":{},"body":{"injectables/UserService.html":{}}}],["system",{"_index":333,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["table",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["teams",{"_index":1048,"title":{},"body":{"index.html":{}}}],["templateid",{"_index":500,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["templateparamset",{"_index":534,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["temporary",{"_index":631,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["temporarycredentialdurationseconds",{"_index":626,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["tencent",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"miscellaneous/functions.html":{}}}],["tencentcloud",{"_index":695,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"dependencies.html":{}}}],["tencentcloudcoscredentials",{"_index":565,"title":{"classes/TencentCloudCosCredentials.html":{}},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"coverage.html":{}}}],["tencentcloudcosresolver",{"_index":576,"title":{"classes/TencentCloudCosResolver.html":{}},"body":{"classes/TencentCloudCosResolver.html":{},"modules/TencentCloudModule.html":{},"coverage.html":{}}}],["tencentcloudcosservice",{"_index":582,"title":{"injectables/TencentCloudCosService.html":{}},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"coverage.html":{},"overview.html":{}}}],["tencentcloudmodule",{"_index":15,"title":{"modules/TencentCloudModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules.html":{},"overview.html":{}}}],["tencentcloudsmsservice",{"_index":490,"title":{"injectables/TencentCloudSmsService.html":{}},"body":{"injectables/SecuritySmsService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"coverage.html":{},"overview.html":{}}}],["tencentcloudstscredentials",{"_index":716,"title":{"classes/TencentCloudStsCredentials.html":{}},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"coverage.html":{}}}],["tencentcloudstsfederationtoken",{"_index":571,"title":{"classes/TencentCloudStsFederationToken.html":{}},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"coverage.html":{}}}],["tencentcloudstsservice",{"_index":628,"title":{"injectables/TencentCloudStsService.html":{}},"body":{"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudStsService.html":{},"coverage.html":{},"overview.html":{}}}],["text",{"_index":1025,"title":{},"body":{"miscellaneous/functions.html":{}}}],["theory",{"_index":1130,"title":{},"body":{"license.html":{}}}],["this.$connect",{"_index":446,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["this.$disconnect",{"_index":451,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["this.$use(prismaloggermiddleware(this.logger",{"_index":448,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["this.authorizationtokenservice.createtokenwithsecurity",{"_index":282,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["this.authorizationtokenservice.hastokenexpired",{"_index":180,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.authorizationtokenservice.refreshauthorizationtoken",{"_index":286,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["this.baseoptions",{"_index":714,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["this.canactivelytokenhandler(context",{"_index":190,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.comparepassword(user",{"_index":877,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cosservice.createtemporaryreadcredential",{"_index":619,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["this.cosservice.createtemporarywritecredential(idhelper.id(64",{"_index":621,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["this.cosservice.options",{"_index":618,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["this.createclient(region",{"_index":713,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["this.createsecurity(phone",{"_index":484,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["this.createuserauthorizationtoken(authorizationtoken.userid",{"_index":375,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.createuserauthorizationtoken(user",{"_index":364,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.getauthorizationtoken",{"_index":413,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["this.gethasauthorization(context",{"_index":188,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.gethasauthorizationtype(context",{"_index":189,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.gethttpauthorization(request",{"_index":410,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["this.getoptions(haschina",{"_index":517,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.gettokenexpiredin",{"_index":346,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.initializecontext(context",{"_index":185,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.options",{"_index":642,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["this.prisma.$transaction",{"_index":347,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.authorizationtoken.create",{"_index":348,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.authorizationtoken.deletemany",{"_index":357,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.authorizationtoken.update",{"_index":372,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.securitysmscode.create",{"_index":530,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.prisma.securitysmscode.findfirst",{"_index":535,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.prisma.securitysmscode.update",{"_index":542,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.prisma.setting.findunique",{"_index":330,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.user.create",{"_index":277,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["this.prisma.user.findunique",{"_index":266,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["this.prisma.userprofile.create",{"_index":841,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["this.prisma.userprofile.findunique",{"_index":840,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["this.prismaclient",{"_index":183,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.prismaclient.user.findunique",{"_index":858,"title":{},"body":{"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["this.prismaclient.user.update",{"_index":940,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["this.prismaclient.userprofile.update",{"_index":832,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["this.profileservice.resolveprofile(context.user",{"_index":831,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["this.reflector.get",{"_index":175,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.resolvecontext(context",{"_index":179,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.securitysmsservice.comparecode",{"_index":878,"title":{},"body":{"injectables/UserService.html":{}}}],["this.securitysmsservice.send(phone",{"_index":480,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["this.securitysmsservice.updatecodetoused(value",{"_index":880,"title":{},"body":{"injectables/UserService.html":{}}}],["this.sts.createclient(region",{"_index":644,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["this.temporarycredentialdurationseconds",{"_index":651,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["this.tencentcloudsmsservice.send",{"_index":531,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.userprofileservice.resolveprofile(user",{"_index":784,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["this.userservice.comparesecurity",{"_index":362,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/ViewerResolver.html":{}}}],["throw",{"_index":191,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"classes/ViewerResolver.html":{}}}],["time",{"_index":730,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["tmpsecretid",{"_index":718,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["tmpsecretkey",{"_index":719,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["todate",{"_index":354,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token",{"_index":98,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["token.args",{"_index":262,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/UpdateViewerArgs.html":{}}}],["token.args.ts",{"_index":381,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"coverage.html":{}}}],["token.args.ts:16",{"_index":388,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["token.args.ts:24",{"_index":383,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["token.args.ts:32",{"_index":382,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["token.entity",{"_index":264,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.entity.ts",{"_index":198,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"coverage.html":{}}}],["token.entity.ts:23",{"_index":218,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.entity.ts:31",{"_index":215,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.entity.ts:39",{"_index":212,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.entity.ts:47",{"_index":207,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.entity.ts:55",{"_index":209,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.expiredat",{"_index":343,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.length",{"_index":422,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["token.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["token.module.ts",{"_index":291,"title":{},"body":{"modules/AuthorizationTokenModule.html":{}}}],["token.pop",{"_index":425,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["token.refreshexpiredat",{"_index":344,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.resolver",{"_index":294,"title":{},"body":{"modules/AuthorizationTokenModule.html":{}}}],["token.resolver.ts",{"_index":226,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"coverage.html":{}}}],["token.resolver.ts:119",{"_index":245,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.resolver.ts:26",{"_index":230,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.resolver.ts:37",{"_index":247,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.resolver.ts:64",{"_index":236,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.resolver.ts:75",{"_index":241,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.service",{"_index":165,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{}}}],["token.service.ts",{"_index":296,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{}}}],["token.service.ts:107",{"_index":305,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:131",{"_index":316,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:22",{"_index":303,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:31",{"_index":310,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:61",{"_index":314,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:78",{"_index":307,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.userid",{"_index":267,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token/authorization",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"coverage.html":{}}}],["token/constants",{"_index":92,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{}}}],["token/constants.ts",{"_index":954,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["token/dto/create",{"_index":380,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/UpdateViewerArgs.html":{},"coverage.html":{}}}],["token/entities/authorization",{"_index":197,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"coverage.html":{}}}],["token/enums",{"_index":93,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/SecuritySmsResolver.html":{}}}],["token/enums.ts",{"_index":1012,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["token/types.ts",{"_index":376,"title":{},"body":{"interfaces/AuthorizationTokenValidityPeriod.html":{},"coverage.html":{}}}],["tort",{"_index":1134,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerEntity.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":84,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":349,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["types",{"_index":328,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"miscellaneous/variables.html":{}}}],["uid",{"_index":646,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["unauthorized",{"_index":166,"title":{},"body":{"guards/AuthorizationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":235,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{}}}],["union",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unique",{"_index":386,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["unique.input.ts",{"_index":885,"title":{},"body":{"classes/UserWhereUniqueInput.html":{},"coverage.html":{}}}],["unit",{"_index":338,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{}}}],["unittype",{"_index":378,"title":{},"body":{"interfaces/AuthorizationTokenValidityPeriod.html":{}}}],["unix",{"_index":729,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["unknown",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update",{"_index":369,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerResolver.html":{}}}],["update.input",{"_index":750,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{}}}],["update.input.ts",{"_index":843,"title":{},"body":{"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"coverage.html":{}}}],["update.input.ts:25",{"_index":882,"title":{},"body":{"classes/UserUpdateInput.html":{}}}],["updatecodetoused",{"_index":488,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["updatecodetoused(security",{"_index":504,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["updated",{"_index":807,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["updatedat",{"_index":801,"title":{},"body":{"classes/UserProfileEntity.html":{},"classes/UserProfileUpdateInput.html":{}}}],["updateviewer",{"_index":898,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["updateviewer(context",{"_index":905,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["updateviewerargs",{"_index":742,"title":{"classes/UpdateViewerArgs.html":{}},"body":{"classes/UpdateViewerArgs.html":{},"classes/ViewerResolver.html":{},"coverage.html":{}}}],["updateviewerprofile",{"_index":821,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["updateviewerprofile(context",{"_index":825,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["upload",{"_index":601,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["url",{"_index":440,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":1072,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":507,"title":{},"body":{"injectables/SecuritySmsService.html":{},"classes/ViewerResolver.html":{},"license.html":{}}}],["usedat",{"_index":544,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["usefactory(prisma",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":89,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["useguards(authorizationguard",{"_index":109,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["user",{"_index":178,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["user(token",{"_index":246,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["user(where",{"_index":852,"title":{},"body":{"classes/UserResolver.html":{}}}],["user.'})@authorizationwith",{"_index":911,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["user.id",{"_index":350,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/UserProfileService.html":{},"classes/ViewerResolver.html":{}}}],["user.interface",{"_index":761,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["user.password",{"_index":873,"title":{},"body":{"injectables/UserService.html":{}}}],["user.phone",{"_index":879,"title":{},"body":{"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["user.service",{"_index":794,"title":{},"body":{"modules/UserModule.html":{},"classes/ViewerResolver.html":{}}}],["user/user.module",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["user?.password",{"_index":871,"title":{},"body":{"injectables/UserService.html":{}}}],["user_email_field_existed",{"_index":913,"title":{},"body":{"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_login_field_existed",{"_index":914,"title":{},"body":{"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_not_found",{"_index":253,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_not_set_phone",{"_index":477,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_phone_field_existed",{"_index":915,"title":{},"body":{"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userentity",{"_index":751,"title":{"classes/UserEntity.html":{}},"body":{"classes/UserEntity.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":202,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{}}}],["userinterface",{"_index":753,"title":{"classes/UserInterface.html":{}},"body":{"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/ViewerEntity.html":{},"coverage.html":{}}}],["userinterface:27",{"_index":757,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["userinterface:36",{"_index":758,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["userinterface:44",{"_index":756,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["userinterface:52",{"_index":760,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["userinterfaceresolver",{"_index":773,"title":{"classes/UserInterfaceResolver.html":{}},"body":{"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":16,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userprofile",{"_index":759,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserInterface.html":{},"injectables/UserProfileService.html":{},"classes/ViewerEntity.html":{}}}],["userprofileentity",{"_index":769,"title":{"classes/UserProfileEntity.html":{}},"body":{"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"coverage.html":{}}}],["userprofilemodule",{"_index":789,"title":{"modules/UserProfileModule.html":{}},"body":{"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["userprofileresolver",{"_index":816,"title":{"classes/UserProfileResolver.html":{}},"body":{"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"coverage.html":{}}}],["userprofileservice",{"_index":777,"title":{"injectables/UserProfileService.html":{}},"body":{"classes/UserInterfaceResolver.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["userprofileupdateinput",{"_index":826,"title":{"classes/UserProfileUpdateInput.html":{}},"body":{"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"coverage.html":{}}}],["userresolver",{"_index":848,"title":{"classes/UserResolver.html":{}},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["users",{"_index":934,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["usersecuritycomparetype",{"_index":259,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/enumerations.html":{}}}],["usersecuritycomparetype.password",{"_index":876,"title":{},"body":{"injectables/UserService.html":{}}}],["usersecuritycomparetype.sms_code",{"_index":275,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["userservice",{"_index":302,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthorizationTokenService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"overview.html":{}}}],["userunion",{"_index":856,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["userupdateinput",{"_index":746,"title":{"classes/UserUpdateInput.html":{}},"body":{"classes/UpdateViewerArgs.html":{},"classes/UserUpdateInput.html":{},"coverage.html":{}}}],["userwhereuniqueinput",{"_index":384,"title":{"classes/UserWhereUniqueInput.html":{}},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/UserResolver.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{}}}],["validate",{"_index":95,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["validity",{"_index":311,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":334,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1153,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veriables",{"_index":501,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["verification",{"_index":938,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["verified",{"_index":187,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["version",{"_index":654,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["video",{"_index":608,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["viewer",{"_index":214,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/SecuritySmsResolver.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["viewer'})@authorizationwith",{"_index":906,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["viewer(@context",{"_index":925,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["viewer(context",{"_index":910,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["viewer.args",{"_index":917,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["viewer.args.ts",{"_index":744,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"coverage.html":{}}}],["viewer.args.ts:20",{"_index":747,"title":{},"body":{"classes/UpdateViewerArgs.html":{}}}],["viewer.args.ts:29",{"_index":748,"title":{},"body":{"classes/UpdateViewerArgs.html":{}}}],["viewer.resolver",{"_index":796,"title":{},"body":{"modules/UserModule.html":{}}}],["viewerentity",{"_index":221,"title":{"classes/ViewerEntity.html":{}},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["viewerresolver",{"_index":795,"title":{"classes/ViewerResolver.html":{}},"body":{"modules/UserModule.html":{},"classes/ViewerResolver.html":{},"coverage.html":{}}}],["warranties",{"_index":1103,"title":{},"body":{"license.html":{}}}],["wav",{"_index":613,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["way",{"_index":1138,"title":{},"body":{"license.html":{}}}],["where.phone",{"_index":276,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["whether",{"_index":933,"title":{},"body":{"classes/ViewerResolver.html":{},"license.html":{}}}],["without",{"_index":111,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["write",{"_index":593,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"index.html":{}}}],["written",{"_index":1058,"title":{},"body":{"index.html":{},"license.html":{}}}],["yes",{"_index":398,"title":{},"body":{"classes/ExecutionContext.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthorizationTokenModule\n\nAuthorizationTokenModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorizationTokenModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSecurityModule\n\nSecurityModule\n\nAppModule -->\n\nSecurityModule->AppModule\n\n\n\n\n\nTencentCloudModule\n\nTencentCloudModule\n\nAppModule -->\n\nTencentCloudModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Root app module.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthorizationTokenModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SecurityModule\n                        \n                        \n                            TencentCloudModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ExecutionContext } from './execution-context';\nimport { PrismaModule } from './prisma';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { SecurityModule } from './security/security.module';\nimport { getConfig } from './app.config';\nimport { AuthorizationTokenModule } from './authorization-token/authorization-token.module';\nimport { UserModule } from './user/user.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AuthorizationGuard } from './authorization.guard';\nimport { PrismaClient } from '@prisma/client';\nimport { TencentCloudModule } from './tencent-cloud';\n\n/**\n * Root app module.\n */\n@Global()\n@Module({\n  imports: [\n    GraphQLModule.forRootAsync({\n      imports: [PrismaModule],\n      inject: [PrismaClient],\n      useFactory(prisma: PrismaClient) {\n        const options = getConfig();\n        return {\n          autoSchemaFile: true,\n          debug: !options.isProduction,\n          playground: !options.isProduction,\n          path: options.endpoint,\n          context({ req }) {\n            return ExecutionContext.create(prisma, req);\n          },\n        };\n      },\n    }),\n    PrismaModule,\n    AuthorizationTokenModule,\n    UserModule,\n    SecurityModule,\n    TencentCloudModule,\n  ],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: AuthorizationGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthDecoratorOptions.html":{"url":"interfaces/AuthDecoratorOptions.html","title":"interface - AuthDecoratorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthDecoratorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization.decorator.ts\n        \n\n            \n                Description\n            \n            \n                Auth Decorator Options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        hasAuthorization\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasAuthorization\n                                    \n                                \n                                \n                                    \n                                        hasAuthorization:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         HasTokenExpiredType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HasTokenExpiredType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { applyDecorators, SetMetadata, UseGuards } from '@nestjs/common';\nimport {\n  AUTH_METADATA_HAS_AUTHORIZATION,\n  AUTH_METADATA_HAS_AUTHORIZATION_TYPE,\n} from './authorization-token/constants';\nimport { HasTokenExpiredType } from './authorization-token/enums';\nimport { AuthorizationGuard } from './authorization.guard';\n\n/**\n * Auth Decorator Options.\n */\nexport interface AuthDecoratorOptions {\n  hasAuthorization?: boolean;\n  type?: HasTokenExpiredType;\n}\n\n/**\n * Need validate HTTP endpoint `Authorization` token decorator.\n * @param param validate HTTP endpoit `Authorization` token options.\n * @param param.hasAuthorization Has need validate\n * @param param.type validate token type.\n */\nexport function Authorization(options?: AuthDecoratorOptions) {\n  return applyDecorators(\n    SetMetadata(AUTH_METADATA_HAS_AUTHORIZATION, options?.hasAuthorization),\n    SetMetadata(\n      AUTH_METADATA_HAS_AUTHORIZATION_TYPE,\n      options?.type || HasTokenExpiredType.AUTH,\n    ),\n    UseGuards(AuthorizationGuard),\n  );\n}\n\n/**\n * Http auth validate token.\n */\nexport const AuthorizationWith = () =>\n  Authorization({\n    hasAuthorization: true,\n    type: HasTokenExpiredType.AUTH,\n  });\n\n/**\n * Http auth, without validate token.\n */\nexport const AuthorizationWithout = () =>\n  Authorization({\n    hasAuthorization: false,\n    type: HasTokenExpiredType.AUTH,\n  });\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthorizationGuard.html":{"url":"guards/AuthorizationGuard.html","title":"guard - AuthorizationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthorizationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/authorization.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Authorization guard.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                canActivelyTokenHandler\n                            \n                            \n                                getHasAuthorization\n                            \n                            \n                                getHasAuthorizationType\n                            \n                            \n                                    Async\n                                initializeContext\n                            \n                            \n                                resolveContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, authorizationTokenService: AuthorizationTokenService, prismaClient: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/authorization.guard.ts:19\n                            \n                        \n\n                \n                    \n                            Create Authorization guard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                NestJS core reflector.\n\n                                                        \n                                                \n                                                \n                                                        authorizationTokenService\n                                                  \n                                                        \n                                                                        AuthorizationTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Authorization token service.\n\n                                                        \n                                                \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma Client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:101\n                \n            \n\n\n            \n                \n                    Can activate guard.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NestJS execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivelyTokenHandler\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivelyTokenHandler(context: ExecutionContext, type: HasTokenExpiredType)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:71\n                \n            \n\n\n            \n                \n                    Can activel token handler.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NestJS execution context\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                HasTokenExpiredType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token validate type.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHasAuthorization\n                        \n                        \n                    \n                \n            \n            \n                \ngetHasAuthorization(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:48\n                \n            \n\n\n            \n                \n                    Get token has need validate.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NextJS execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHasAuthorizationType\n                        \n                        \n                    \n                \n            \n            \n                \ngetHasAuthorizationType(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:59\n                \n            \n\n\n            \n                \n                    Get token validate type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NestJS execution context\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            initializeContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeContext(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:88\n                \n            \n\n\n            \n                \n                    Initialzd Socfony execution context.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NestJS execution context\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveContext\n                        \n                        \n                    \n                \n            \n            \n                \nresolveContext(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:36\n                \n            \n\n\n            \n                \n                    Resolver context.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NestJS execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IContext\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { GqlContextType, GqlExecutionContext } from '@nestjs/graphql';\nimport { PrismaClient } from '@prisma/client';\nimport { Request } from 'express';\nimport { AuthorizationTokenService } from './authorization-token/authorization-token.service';\nimport {\n  AUTH_METADATA_HAS_AUTHORIZATION,\n  AUTH_METADATA_HAS_AUTHORIZATION_TYPE,\n} from './authorization-token/constants';\nimport { HasTokenExpiredType } from './authorization-token/enums';\nimport { UNAUTHORIZED } from './constants';\nimport { ExecutionContext as IContext } from './execution-context';\n\n/**\n * Authorization guard.\n */\n@Injectable()\nexport class AuthorizationGuard implements CanActivate {\n  /**\n   * Create Authorization guard.\n   * @param reflector NestJS core reflector.\n   * @param authorizationTokenService Authorization token service.\n   * @param prismaClient Prisma Client.\n   */\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly authorizationTokenService: AuthorizationTokenService,\n    private readonly prismaClient: PrismaClient,\n  ) {}\n\n  /**\n   * Resolver context.\n   * @param context NestJS execution context.\n   */\n  resolveContext(context: ExecutionContext): IContext {\n    if (context.getType() === 'graphql') {\n      return GqlExecutionContext.create(context).getContext();\n    }\n\n    return context.switchToHttp().getRequest().context;\n  }\n\n  /**\n   * Get token has need validate.\n   * @param context NextJS execution context.\n   */\n  getHasAuthorization(context: ExecutionContext) {\n    return this.reflector.get(\n      AUTH_METADATA_HAS_AUTHORIZATION,\n      context.getHandler(),\n    );\n  }\n\n  /**\n   * Get token validate type.\n   * @param context NestJS execution context\n   */\n  getHasAuthorizationType(context: ExecutionContext) {\n    return this.reflector.get(\n      AUTH_METADATA_HAS_AUTHORIZATION_TYPE,\n      context.getHandler(),\n    );\n  }\n\n  /**\n   * Can activel token handler.\n   * @param context NestJS execution context\n   * @param type Token validate type.\n   */\n  canActivelyTokenHandler(\n    context: ExecutionContext,\n    type: HasTokenExpiredType,\n  ): boolean {\n    const { authorizationToken, user } = this.resolveContext(context);\n    const has = !this.authorizationTokenService.hasTokenExpired(\n      authorizationToken,\n      type,\n    );\n\n    return user && has;\n  }\n\n  /**\n   * Initialzd Socfony execution context.\n   * @param context NestJS execution context\n   */\n  async initializeContext(context: ExecutionContext) {\n    if (context.getType() === 'http') {\n      return await IContext.create(\n        this.prismaClient,\n        context.switchToHttp().getRequest(),\n      );\n    }\n  }\n\n  /**\n   * Can activate guard.\n   * @param context NestJS execution context.\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    await this.initializeContext(context);\n\n    // If Don't validate or verified\n    if (!this.getHasAuthorization(context)) return true;\n\n    // get `Authorization` token validate type\n    const type = this.getHasAuthorizationType(context);\n\n    if (\n      !this.canActivelyTokenHandler(context, type || HasTokenExpiredType.AUTH)\n    ) {\n      throw new Error(UNAUTHORIZED);\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthorizationTokenEntity.html":{"url":"classes/AuthorizationTokenEntity.html","title":"class - AuthorizationTokenEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthorizationTokenEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/entities/authorization-token.entity.ts\n        \n\n            \n                Description\n            \n            \n                HTTP endpoint authorization entity.\n\n            \n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expiredAt\n                            \n                            \n                                refreshExpiredAt\n                            \n                            \n                                token\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiredAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Token expired date'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:47\n                            \n                        \n\n                \n                    \n                        Token expired date.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshExpiredAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Token on refresh expired date'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:55\n                            \n                        \n\n                \n                    \n                        Token on refresh expired date.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User API endpoit authorization token.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:39\n                            \n                        \n\n                \n                    \n                        User API endpoit authorization token.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Logged Viewer entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:31\n                            \n                        \n\n                \n                    \n                        Logged User\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Login user ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:23\n                            \n                        \n\n                \n                    \n                        Logged user id.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ID, ObjectType } from '@nestjs/graphql';\nimport { Prisma, User } from '@prisma/client';\nimport { ViewerEntity } from 'src/user/entities/viewer.entity';\n/**\n * HTTP endpoint authorization entity.\n */\n@ObjectType({\n  description: 'HTTP endpoint authorization entity.',\n})\nexport class AuthorizationTokenEntity\n  implements\n    Prisma.AuthorizationTokenGetPayload {\n  /**\n   * Logged user id.\n   */\n  @Field((type) => ID, {\n    description: 'Login user ID',\n  })\n  userId: string;\n\n  /**\n   * Logged User\n   */\n  @Field((type) => ViewerEntity, {\n    description: 'Logged Viewer entity',\n  })\n  user: User;\n\n  /**\n   * User API endpoit authorization token.\n   */\n  @Field((type) => String, {\n    description: 'User API endpoit authorization token.',\n  })\n  token: string;\n\n  /**\n   * Token expired date.\n   */\n  @Field((type) => Date, {\n    description: 'Token expired date',\n  })\n  expiredAt: Date;\n\n  /**\n   * Token on refresh expired date.\n   */\n  @Field((type) => Date, {\n    description: 'Token on refresh expired date',\n  })\n  refreshExpiredAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthorizationTokenEntityResolver.html":{"url":"classes/AuthorizationTokenEntityResolver.html","title":"class - AuthorizationTokenEntityResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthorizationTokenEntityResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/authorization-token.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorizationToken\n                            \n                            \n                                    Async\n                                createAuthorizationToken\n                            \n                            \n                                refreshAuthorizationToken\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authorizationTokenService: AuthorizationTokenService, prisma: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/authorization-token/authorization-token.resolver.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorizationTokenService\n                                                  \n                                                        \n                                                                        AuthorizationTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \nauthorizationToken(context: ExecutionContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {description: 'Query HTTP endpoint AuthorizationTokenEntity'})@Authorization({hasAuthorization: true, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/authorization-token/authorization-token.resolver.ts:64\n                \n            \n\n\n            \n                \n                    Query HTTP endpoint AuthorizationTokenEntity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        App runner execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAuthorizationToken(args: CreateAuthorizationTokenArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create AuthorizationTokenEntity'})\n                \n            \n\n            \n                \n                    Defined in src/authorization-token/authorization-token.resolver.ts:75\n                \n            \n\n\n            \n                \n                    Create AuthorizationTokenEntity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                CreateAuthorizationTokenArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Create AuthorizationTokenEntity args.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshAuthorizationToken(context: ExecutionContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Refresh HTTP endpoint authorization token entity.'})@Authorization({hasAuthorization: true, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/authorization-token/authorization-token.resolver.ts:119\n                \n            \n\n\n            \n                \n                    Refresh HTTP endpoint authorization token entity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            user\n                        \n                        \n                    \n                \n            \n            \n                \nuser(token: Prisma.AuthorizationTokenGetPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Field(undefined)\n                \n            \n\n            \n                \n                    Defined in src/authorization-token/authorization-token.resolver.ts:37\n                \n            \n\n\n            \n                \n                    Resolve AuthorizationTokenEntity user field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                Prisma.AuthorizationTokenGetPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HTTP endpoint AuthorizationToken\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Args,\n  Field,\n  Mutation,\n  Parent,\n  Query,\n  Resolver,\n} from '@nestjs/graphql';\nimport { Prisma, PrismaClient } from '@prisma/client';\nimport { Authorization } from 'src/authorization.decorator';\nimport {\n  AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE,\n  USER_NOT_FOUND,\n} from 'src/constants';\nimport { Context } from 'src/context.decorator';\nimport { ExecutionContext } from 'src/execution-context';\nimport { IDHelper } from 'src/helper';\nimport { ViewerEntity } from 'src/user/entities/viewer.entity';\nimport { UserSecurityCompareType } from 'src/user/enums';\nimport { AuthorizationTokenService } from './authorization-token.service';\nimport { CreateAuthorizationTokenArgs } from './dto/create-authorization-token.args';\nimport { AuthorizationTokenEntity } from './entities/authorization-token.entity';\nimport { HasTokenExpiredType } from './enums';\n\n@Resolver(() => AuthorizationTokenEntity)\nexport class AuthorizationTokenEntityResolver {\n  constructor(\n    private readonly authorizationTokenService: AuthorizationTokenService,\n    private readonly prisma: PrismaClient,\n  ) {}\n\n  /**\n   * Resolve AuthorizationTokenEntity user field.\n   * @param token HTTP endpoint AuthorizationToken\n   */\n  @Field(() => ViewerEntity)\n  user(\n    @Parent()\n    token: Prisma.AuthorizationTokenGetPayload,\n  ) {\n    const { user } = token;\n    if (user) {\n      return user;\n    }\n\n    return this.prisma.user.findUnique({\n      where: { id: token.userId },\n    });\n  }\n\n  /**\n   * Query HTTP endpoint AuthorizationTokenEntity\n   * @param context App runner execution context.\n   */\n  @Query(() => AuthorizationTokenEntity, {\n    description: 'Query HTTP endpoint AuthorizationTokenEntity',\n  })\n  @Authorization({\n    hasAuthorization: true,\n    type: HasTokenExpiredType.AUTH,\n  })\n  authorizationToken(@Context() context: ExecutionContext) {\n    return context.authorizationToken;\n  }\n\n  /**\n   * Create AuthorizationTokenEntity\n   * @param args Create `AuthorizationTokenEntity` args.\n   */\n  @Mutation(() => AuthorizationTokenEntity, {\n    description: 'Create AuthorizationTokenEntity',\n  })\n  async createAuthorizationToken(\n    @Args({\n      type: () => CreateAuthorizationTokenArgs,\n    })\n    args: CreateAuthorizationTokenArgs,\n  ) {\n    const { type, user: where, security } = args;\n    if (Object.keys(where).length > 1) {\n      throw new Error(AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE);\n    }\n\n    let user = await this.prisma.user.findUnique({\n      where,\n      rejectOnNotFound: false,\n    });\n    if (type === UserSecurityCompareType.SMS_CODE && !user && where.phone) {\n      user = await this.prisma.user.create({\n        data: {\n          id: IDHelper.id(32),\n          phone: where.phone,\n        },\n      });\n    } else if (!user) {\n      throw new Error(USER_NOT_FOUND);\n    }\n\n    return this.authorizationTokenService.createTokenWithSecurity(\n      user,\n      type,\n      security,\n    );\n  }\n\n  /**\n   * Refresh HTTP endpoint authorization token entity.\n   * @param client token query Prisma client.\n   */\n  @Mutation((returns) => AuthorizationTokenEntity, {\n    description: 'Refresh HTTP endpoint authorization token entity.',\n  })\n  @Authorization({\n    hasAuthorization: true,\n    type: HasTokenExpiredType.REFRESH,\n  })\n  refreshAuthorizationToken(@Context() context: ExecutionContext) {\n    return this.authorizationTokenService.refreshAuthorizationToken(\n      context.authorizationToken,\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationTokenModule.html":{"url":"modules/AuthorizationTokenModule.html","title":"module - AuthorizationTokenModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationTokenModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorizationTokenModule\n\n\n\ncluster_AuthorizationTokenModule_imports\n\n\n\ncluster_AuthorizationTokenModule_exports\n\n\n\ncluster_AuthorizationTokenModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthorizationTokenModule\n\nAuthorizationTokenModule\n\nAuthorizationTokenModule -->\n\nPrismaModule->AuthorizationTokenModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthorizationTokenModule -->\n\nUserModule->AuthorizationTokenModule\n\n\n\n\n\nAuthorizationTokenService \n\nAuthorizationTokenService \n\nAuthorizationTokenService  -->\n\nAuthorizationTokenModule->AuthorizationTokenService \n\n\n\n\n\nAuthorizationTokenService\n\nAuthorizationTokenService\n\nAuthorizationTokenModule -->\n\nAuthorizationTokenService->AuthorizationTokenModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/authorization-token/authorization-token.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Authorization token module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationTokenService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationTokenService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { UserModule } from 'src/user/user.module';\nimport { AuthorizationTokenEntityResolver } from './authorization-token.resolver';\nimport { AuthorizationTokenService } from './authorization-token.service';\n\n/**\n * Authorization token module.\n */\n@Global()\n@Module({\n  imports: [PrismaModule, UserModule],\n  providers: [AuthorizationTokenService, AuthorizationTokenEntityResolver],\n  exports: [AuthorizationTokenService],\n})\nexport class AuthorizationTokenModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationTokenService.html":{"url":"injectables/AuthorizationTokenService.html","title":"injectable - AuthorizationTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/authorization-token.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTokenWithSecurity\n                            \n                            \n                                    Async\n                                createUserAuthorizationToken\n                            \n                            \n                                    Async\n                                getTokenExpiredIn\n                            \n                            \n                                hasTokenExpired\n                            \n                            \n                                    Async\n                                refreshAuthorizationToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaClient, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/authorization-token/authorization-token.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTokenWithSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTokenWithSecurity(user: User, type: UserSecurityCompareType, security: string)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                UserSecurityCompareType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    security\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUserAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserAuthorizationToken(user: User | string)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:78\n                \n            \n\n\n            \n                \n                    Create authorization token object for user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Create authoprization token object user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTokenExpiredIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokenExpiredIn()\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:31\n                \n            \n\n\n            \n                \n                    Get token expired in validity period.\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasTokenExpired\n                        \n                        \n                    \n                \n            \n            \n                \nhasTokenExpired(token: AuthorizationToken, type: HasTokenExpiredType)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:61\n                \n            \n\n\n            \n                \n                    Has authorization token expired.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                AuthorizationToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    type\n                                    \n                                                HasTokenExpiredType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Validate type.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            refreshAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshAuthorizationToken(authorizationToken: AuthorizationToken)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:131\n                \n            \n\n\n            \n                \n                    Refresh authorization token object to database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    authorizationToken\n                                    \n                                                AuthorizationToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Await refresh authorization token object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthorizationToken, PrismaClient, User } from '@prisma/client';\nimport * as dayjs from 'dayjs';\nimport {\n  AUTHORIZATION_TOKEN_NOT_FOUND,\n  SECURITY_COMPARE_FAILED,\n} from 'src/constants';\nimport { IDHelper } from 'src/helper';\nimport { UserService } from 'src/user/user.service';\nimport { UserSecurityCompareType } from 'src/user/enums';\nimport {\n  AUTH_TOKEN_DEFAULT_EXPIRED_IN,\n  AUTH_TOKEN_DEFAULT_EXPIRED_UNIT,\n  AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_IN,\n  AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_UNIT,\n  AUTH_TOKEN_VVALIDITY_PERIOD_KEY,\n} from './constants';\nimport { HasTokenExpiredType } from './enums';\nimport { AuthorizationTokenValidityPeriod } from './types';\n\n@Injectable()\nexport class AuthorizationTokenService {\n  constructor(\n    private readonly prisma: PrismaClient,\n    private readonly userService: UserService,\n  ) {}\n\n  /**\n   * Get token expired in validity period.\n   */\n  async getTokenExpiredIn(): Promise {\n    const setting = await this.prisma.setting.findUnique({\n      where: {\n        namespace_name: {\n          namespace: 'system',\n          name: AUTH_TOKEN_VVALIDITY_PERIOD_KEY,\n        },\n      },\n      rejectOnNotFound: false,\n    });\n    const { value = {} } = setting || {};\n    const { expiredIn = {}, refreshExpiredIn = {} } = value as any;\n\n    return {\n      expiredIn: {\n        value: expiredIn.value || AUTH_TOKEN_DEFAULT_EXPIRED_IN,\n        unit: expiredIn.unit || AUTH_TOKEN_DEFAULT_EXPIRED_UNIT,\n      },\n      refreshExpiredIn: {\n        value: refreshExpiredIn.value || AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_IN,\n        unit: refreshExpiredIn.unit || AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_UNIT,\n      },\n    };\n  }\n\n  /**\n   * Has authorization token expired.\n   * @param client `AuthotizationToken` query Prisma client.\n   * @param type Validate type.\n   */\n  hasTokenExpired(\n    token: AuthorizationToken,\n    type: HasTokenExpiredType,\n  ): boolean {\n    if (!token) return true;\n    const expiredAt =\n      type === HasTokenExpiredType.AUTH\n        ? token.expiredAt\n        : token.refreshExpiredAt;\n\n    return !expiredAt || expiredAt.getTime()  {\n    const setting = await this.getTokenExpiredIn();\n    const [token] = await this.prisma.$transaction([\n      this.prisma.authorizationToken.create({\n        data: {\n          userId: typeof user === 'string' ? user : user.id,\n          token: IDHelper.id(128),\n          expiredAt: dayjs()\n            .add(setting.expiredIn.value, setting.expiredIn.unit)\n            .toDate(),\n          refreshExpiredAt: dayjs()\n            .add(setting.refreshExpiredIn.value, setting.refreshExpiredIn.unit)\n            .toDate(),\n        },\n      }),\n      this.prisma.authorizationToken.deleteMany({\n        where: {\n          refreshExpiredAt: {\n            lte: dayjs().add(10, 'minutes').toDate(),\n          },\n        },\n      }),\n    ]);\n\n    return token;\n  }\n\n  async createTokenWithSecurity(\n    user: User,\n    type: UserSecurityCompareType,\n    security: string,\n  ) {\n    const compared = await this.userService.compareSecurity(\n      user,\n      type,\n      security,\n    );\n    if (compared) {\n      if (compared instanceof Function) {\n        compared();\n      }\n      return this.createUserAuthorizationToken(user);\n    }\n\n    throw new Error(SECURITY_COMPARE_FAILED);\n  }\n\n  /**\n   * Refresh authorization token object to database.\n   * @param authorizationToken Await refresh authorization token object.\n   */\n  async refreshAuthorizationToken(\n    authorizationToken: AuthorizationToken,\n  ): Promise {\n    const setting = await this.getTokenExpiredIn();\n    // If authorization token not found, throw `not found` error.\n    if (!authorizationToken) {\n      throw new Error(AUTHORIZATION_TOKEN_NOT_FOUND);\n\n      // If token is expired, update to new token.\n    } else if (authorizationToken.expiredAt.getTime()  fiveMinutesDate.getTime()) {\n      await this.prisma.authorizationToken.update({\n        where: { token: authorizationToken.token },\n        data: {\n          expiredAt: fiveMinutesDate,\n          refreshExpiredAt: new Date(),\n        },\n      });\n    }\n\n    return this.createUserAuthorizationToken(authorizationToken.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthorizationTokenValidityPeriod.html":{"url":"interfaces/AuthorizationTokenValidityPeriod.html","title":"interface - AuthorizationTokenValidityPeriod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthorizationTokenValidityPeriod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/types.ts\n        \n\n            \n                Description\n            \n            \n                认证Token有效期\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expiredIn\n                                \n                                \n                                        refreshExpiredIn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expiredIn\n                                    \n                                \n                                \n                                    \n                                        expiredIn:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    token 生命有效期\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiredIn\n                                    \n                                \n                                \n                                    \n                                        refreshExpiredIn:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Token 用作刷新生命周期\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { UnitType } from 'dayjs';\n\n/**\n * 认证Token有效期\n */\nexport interface AuthorizationTokenValidityPeriod {\n  /**\n   * token 生命有效期\n   */\n  expiredIn: {\n    value: number;\n    unit: UnitType;\n  };\n\n  /**\n   * Token 用作刷新生命周期\n   */\n  refreshExpiredIn: {\n    value: number;\n    unit: UnitType;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthorizationTokenArgs.html":{"url":"classes/CreateAuthorizationTokenArgs.html","title":"class - CreateAuthorizationTokenArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthorizationTokenArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/dto/create-authorization-token.args.ts\n        \n\n            \n                Description\n            \n            \n                Create authorization token args\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                security\n                            \n                            \n                                type\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            security\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Create AuthorizationToken security value'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/dto/create-authorization-token.args.ts:32\n                            \n                        \n\n                \n                    \n                        Create AuthorizationToken security value\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserSecurityCompareType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Create AuthorizationToken security type'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/dto/create-authorization-token.args.ts:24\n                            \n                        \n\n                \n                    \n                        Create AuthorizationToken security type\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserWhereUniqueInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User find where unique input'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/dto/create-authorization-token.args.ts:16\n                            \n                        \n\n                \n                    \n                        User find where unique input\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field } from '@nestjs/graphql';\nimport { UserWhereUniqueInput } from 'src/user/dto';\nimport { UserSecurityCompareType } from 'src/user/enums';\n\n/**\n * Create authorization token args\n */\n@ArgsType()\nexport class CreateAuthorizationTokenArgs {\n  /**\n   * User find where unique input\n   */\n  @Field(() => UserWhereUniqueInput, {\n    description: 'User find where unique input',\n  })\n  user: UserWhereUniqueInput;\n\n  /**\n   * Create AuthorizationToken security type\n   */\n  @Field(() => UserSecurityCompareType, {\n    description: 'Create AuthorizationToken security type',\n  })\n  type: UserSecurityCompareType;\n\n  /**\n   * Create AuthorizationToken security value\n   */\n  @Field(() => String, {\n    description: 'Create AuthorizationToken security value',\n  })\n  security: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExecutionContext.html":{"url":"classes/ExecutionContext.html","title":"class - ExecutionContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExecutionContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/execution-context.ts\n        \n\n            \n                Description\n            \n            \n                Socfony execution context.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                authorizationToken\n                            \n                            \n                                    Public\n                                request\n                            \n                            \n                                    Public\n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                create\n                            \n                            \n                                    Private\n                                    Static\n                                getAuthorizationToken\n                            \n                            \n                                    Private\n                                    Static\n                                getHttpAuthorization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor(request: Request, authorizationToken?: AuthorizationToken, user?: User)\n                    \n                \n                        \n                            \n                                Defined in src/execution-context.ts:7\n                            \n                        \n\n                \n                    \n                            Create a execution context.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Express request.\n\n                                                        \n                                                \n                                                \n                                                        authorizationToken\n                                                  \n                                                        \n                                                                        AuthorizationToken\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Authorization token\n\n                                                        \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    User\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                User.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            authorizationToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthorizationToken\n\n                        \n                    \n                        \n                            \n                                    Defined in src/execution-context.ts:16\n                            \n                        \n\n                \n                    \n                        Authorization token\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Request\n\n                        \n                    \n                        \n                            \n                                    Defined in src/execution-context.ts:15\n                            \n                        \n\n                \n                    \n                        Express request.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/execution-context.ts:17\n                            \n                        \n\n                \n                    \n                        User.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(prismaClient: PrismaClient, request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/execution-context.ts:24\n                \n            \n\n\n            \n                \n                    Create kernel context.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prismaClient\n                                    \n                                            PrismaClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Express request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthorizationToken(prismaClient: PrismaClient, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/execution-context.ts:73\n                \n            \n\n\n            \n                \n                    Get AuthorizationToken\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prismaClient\n                                    \n                                            PrismaClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token string.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getHttpAuthorization\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHttpAuthorization(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/execution-context.ts:54\n                \n            \n\n\n            \n                \n                    Get HTTP endpoint Authorization header value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Express request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request } from 'express';\nimport { AuthorizationToken, Prisma, PrismaClient, User } from '@prisma/client';\n\n/**\n * Socfony execution context.\n */\nexport class ExecutionContext {\n  /**\n   * Create a execution context.\n   * @param request Express request.\n   * @param authorizationToken Authorization token\n   * @param user User.\n   */\n  private constructor(\n    public request: Request,\n    public authorizationToken?: AuthorizationToken,\n    public user?: User,\n  ) {}\n\n  /**\n   * Create kernel context.\n   * @param request Express request.\n   */\n  static async create(\n    prismaClient: PrismaClient,\n    request: Request,\n  ): Promise {\n    const token = this.getHttpAuthorization(request);\n    if (\n      request.context &&\n      request.context.authorizationToken?.token === token\n    ) {\n      return request.context;\n    }\n\n    const authorizationToken = await this.getAuthorizationToken(\n      prismaClient,\n      token,\n    );\n    const context = new ExecutionContext(\n      request,\n      authorizationToken,\n      authorizationToken?.user,\n    );\n    context.request.context = request.context = context;\n\n    return context;\n  }\n\n  /**\n   * Get HTTP endpoint `Authorization` header value.\n   * @param request Express request.\n   */\n  private static getHttpAuthorization(request: Request): string {\n    const key = 'Authorization';\n    if (request.header instanceof Function) {\n      return request.header(key);\n    }\n\n    const headers = request.headers;\n    let token = headers[key.toLowerCase()];\n    if (!token || !token.length) {\n      token = headers[key];\n    }\n\n    return Array.isArray(token) ? token.pop() : token;\n  }\n\n  /**\n   * Get `AuthorizationToken`\n   * @param token Token string.\n   */\n  private static getAuthorizationToken(\n    prismaClient: PrismaClient,\n    token: string,\n  ): Promise> {\n    if (token)\n      return prismaClient.authorizationToken.findUnique({\n        where: { token: token },\n        include: { user: true },\n        rejectOnNotFound: false,\n      });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Prisma module.\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {\n  ClassProvider,\n  Global,\n  Logger,\n  Module,\n  OnModuleDestroy,\n  OnModuleInit,\n} from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\nimport { PrismaLoggerMiddleware } from './middleware';\n\n/**\n * Prisma class provider\n */\nconst client: ClassProvider = {\n  provide: PrismaClient,\n  useClass: class\n    extends PrismaClient\n    implements OnModuleInit, OnModuleDestroy {\n    private readonly logger = new Logger('Prisma');\n\n    /**\n     * Prisma client constructor\n     */\n    constructor() {\n      super({\n        datasources: {\n          database: { url: process.env.DATABASE_URL },\n        },\n      });\n    }\n\n    /**\n     * NestJS module init hook callback.\n     */\n    async onModuleInit() {\n      // Prisma connect database.\n      await this.$connect();\n\n      // Set Prisma client global logger middleware.\n      this.$use(PrismaLoggerMiddleware(this.logger));\n    }\n\n    /**\n     * NestJS module destory hook callback.\n     */\n    async onModuleDestroy() {\n      // Prisma disconnect database.\n      await this.$disconnect();\n    }\n  },\n};\n\n/**\n * Prisma module.\n */\n@Global()\n@Module({\n  providers: [client],\n  exports: [client],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SecurityModule.html":{"url":"modules/SecurityModule.html","title":"module - SecurityModule","body":"\n                   \n\n\n\n\n    Modules\n    SecurityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SecurityModule\n\n\n\ncluster_SecurityModule_imports\n\n\n\ncluster_SecurityModule_exports\n\n\n\ncluster_SecurityModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSecurityModule\n\nSecurityModule\n\nSecurityModule -->\n\nPrismaModule->SecurityModule\n\n\n\n\n\nTencentCloudModule\n\nTencentCloudModule\n\nSecurityModule -->\n\nTencentCloudModule->SecurityModule\n\n\n\n\n\nSecuritySmsService \n\nSecuritySmsService \n\nSecuritySmsService  -->\n\nSecurityModule->SecuritySmsService \n\n\n\n\n\nSecuritySmsService\n\nSecuritySmsService\n\nSecurityModule -->\n\nSecuritySmsService->SecurityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/security/security.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Security module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SecuritySmsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            TencentCloudModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SecuritySmsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { TencentCloudModule } from 'src/tencent-cloud';\nimport { SecuritySmsResolver } from './security-sms.resolver';\nimport { SecuritySmsService } from './security-sms.service';\n\n/**\n * Security module.\n */\n@Module({\n  imports: [TencentCloudModule, PrismaModule],\n  providers: [SecuritySmsService, SecuritySmsResolver],\n  exports: [SecuritySmsService],\n})\nexport class SecurityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecuritySmsResolver.html":{"url":"classes/SecuritySmsResolver.html","title":"class - SecuritySmsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecuritySmsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/security/security-sms.resolver.ts\n        \n\n            \n                Description\n            \n            \n                Security SMS resolver.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSecurity\n                            \n                            \n                                    Async\n                                createViewerSecurity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(securitySmsService: SecuritySmsService)\n                    \n                \n                        \n                            \n                                Defined in src/security/security-sms.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            Create the resolver.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        securitySmsService\n                                                  \n                                                        \n                                                                        SecuritySmsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Secyrity SMS service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSecurity(phone: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create a security SMS code for phone number'})\n                \n            \n\n            \n                \n                    Defined in src/security/security-sms.resolver.ts:27\n                \n            \n\n\n            \n                \n                    Create a security SMS code for phone number.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Need create Security SMS code phone number.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createViewerSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createViewerSecurity(context: ExecutionContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create the viewer security SMS code'})@Authorization({hasAuthorization: true, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/security/security-sms.resolver.ts:47\n                \n            \n\n\n            \n                \n                    Create the viewer security SMS code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Socfony app execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, GraphQLISODateTime, Mutation, Resolver } from '@nestjs/graphql';\nimport { HasTokenExpiredType } from 'src/authorization-token/enums';\nimport { Authorization } from 'src/authorization.decorator';\nimport { USER_NOT_SET_PHONE } from 'src/constants';\nimport { Context } from 'src/context.decorator';\nimport { ExecutionContext } from 'src/execution-context';\nimport { SecuritySmsService } from './security-sms.service';\n\n/**\n * Security SMS resolver.\n */\n@Resolver()\nexport class SecuritySmsResolver {\n  /**\n   * Create the resolver.\n   * @param securitySmsService Secyrity SMS service.\n   */\n  constructor(private readonly securitySmsService: SecuritySmsService) {}\n\n  /**\n   * Create a security SMS code for phone number.\n   * @param phone Need create Security SMS code phone number.\n   */\n  @Mutation(() => GraphQLISODateTime, {\n    description: 'Create a security SMS code for phone number',\n  })\n  async createSecurity(\n    @Args({\n      name: 'phone',\n      description: 'Need send code phone number',\n      type: () => String,\n    })\n    phone: string,\n  ) {\n    const { expiredAt } = await this.securitySmsService.send(phone);\n    return expiredAt;\n  }\n\n  /**\n   * Create the viewer security SMS code.\n   * @param context Socfony app execution context.\n   */\n  @Mutation(() => GraphQLISODateTime, {\n    description: 'Create the viewer security SMS code',\n  })\n  @Authorization({ hasAuthorization: true, type: HasTokenExpiredType.AUTH })\n  async createViewerSecurity(@Context() context: ExecutionContext) {\n    const { phone } = context.user || {};\n    if (!phone) {\n      throw new Error(USER_NOT_SET_PHONE);\n    }\n\n    return await this.createSecurity(phone);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SecuritySmsService.html":{"url":"injectables/SecuritySmsService.html","title":"injectable - SecuritySmsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SecuritySmsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/security/security-sms.service.ts\n        \n\n            \n                Description\n            \n            \n                Security SMS service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compareCode\n                            \n                            \n                                getOptions\n                            \n                            \n                                    Async\n                                send\n                            \n                            \n                                    Async\n                                updateCodeToUsed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tencentCloudSmsService: TencentCloudSmsService, prisma: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/security/security-sms.service.ts:11\n                            \n                        \n\n                \n                    \n                            Create the service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tencentCloudSmsService\n                                                  \n                                                        \n                                                                        TencentCloudSmsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Tencent Cloud SMS service.\n\n                                                        \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            compareCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    compareCode(phone: string, code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/security/security-sms.service.ts:85\n                \n            \n\n\n            \n                \n                    Compase phone security code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        phone number.\n\n                                    \n                                \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sent phone security SMS code.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions(hasChina: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/security/security-sms.service.ts:26\n                \n            \n\n\n            \n                \n                    Get SMS options.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hasChina\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Has china.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { expiredIn: any; templateID: any; veriables: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(phone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/security/security-sms.service.ts:49\n                \n            \n\n\n            \n                \n                    Send a SMS code to phone.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Send phone number.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateCodeToUsed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCodeToUsed(security: SecuritySmsCode)\n                \n            \n\n\n            \n                \n                    Defined in src/security/security-sms.service.ts:113\n                \n            \n\n\n            \n                \n                    Update security to used.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    security\n                                    \n                                            SecuritySmsCode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Security code.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaClient, SecuritySmsCode } from '@prisma/client';\nimport * as dayjs from 'dayjs';\nimport { IDHelper } from 'src/helper';\nimport { TencentCloudSmsService } from 'src/tencent-cloud/sms';\n\n/**\n * Security SMS service.\n */\n@Injectable()\nexport class SecuritySmsService {\n  /**\n   * Create the service.\n   * @param tencentCloudSmsService Tencent Cloud SMS service.\n   * @param prisma Prisma client.\n   */\n  constructor(\n    private readonly tencentCloudSmsService: TencentCloudSmsService,\n    private readonly prisma: PrismaClient,\n  ) {}\n\n  /**\n   * Get SMS options.\n   * @param hasChina Has china.\n   */\n  getOptions(hasChina: boolean) {\n    const expiredIn = Number.parseInt(\n      process.env.TENCENT_CLOUD_SMS_EXPIRED_IN || '300',\n    );\n    if (hasChina) {\n      return {\n        expiredIn,\n        templateID: process.env.TENCENT_CLOUD_SMS_CHINA_TEMPLATE_ID,\n        veriables: process.env.TENCENT_CLOUD_SMS_CHINA_VERIABLES,\n      };\n    }\n\n    return {\n      expiredIn,\n      templateID: process.env.TENCENT_CLOUD_SMS_OTHER_TEMPLATE_ID,\n      veriables: process.env.TENCENT_CLOUD_SMS_OTHER_VERIABLES,\n    };\n  }\n\n  /**\n   * Send a SMS code to phone.\n   * @param phone Send phone number.\n   */\n  async send(phone: string) {\n    const hasChina = phone.startsWith('+86');\n    const options = this.getOptions(hasChina);\n    const code = IDHelper.numeral(6);\n    const expiredAt = dayjs().add(options.expiredIn, 'seconds').toDate();\n    const paramsSet = options.veriables\n      .split(',')\n      .map((item) =>\n        item\n          .replace('#code#', code)\n          .replace('#expired#', (options.expiredIn / 60).toString()),\n      );\n\n    const security = await this.prisma.securitySmsCode.create({\n      data: {\n        id: IDHelper.id(32),\n        phone,\n        code,\n        expiredAt,\n      },\n    });\n\n    this.tencentCloudSmsService.send({\n      PhoneNumberSet: [phone],\n      TemplateID: options.templateID,\n      TemplateParamSet: paramsSet,\n    });\n\n    return security;\n  }\n\n  /**\n   * Compase phone security code.\n   * @param phone phone number.\n   * @param code The sent phone security SMS code.\n   */\n  async compareCode(\n    phone: string,\n    code: string,\n  ): Promise {\n    if (!phone || !code) {\n      return false;\n    }\n\n    const security = await this.prisma.securitySmsCode.findFirst({\n      where: { phone, code },\n      orderBy: { createdAt: 'desc' },\n      rejectOnNotFound: false,\n    });\n    if (\n      security &&\n      !security.usedAt &&\n      security.expiredAt.getTime() > Date.now()\n    ) {\n      return security;\n    }\n\n    return false;\n  }\n\n  /**\n   * Update security to used.\n   * @param security Security code.\n   */\n  async updateCodeToUsed(security: SecuritySmsCode) {\n    return await this.prisma.securitySmsCode.update({\n      where: { id: security.id },\n      data: { usedAt: new Date() },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SocfonyConfig.html":{"url":"interfaces/SocfonyConfig.html","title":"interface - SocfonyConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SocfonyConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endpoint\n                                \n                                \n                                        isProduction\n                                \n                                \n                                        port\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoint\n                                    \n                                \n                                \n                                    \n                                        endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GraphQL endpoint\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isProduction\n                                    \n                                \n                                \n                                    \n                                        isProduction:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is production.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    App runner port\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { config as dontEnvConfig } from 'dotenv';\n\nexport interface SocfonyConfig {\n  /**\n   * Is production.\n   */\n  isProduction: boolean;\n\n  /**\n   * App runner port\n   */\n  port: string | number;\n\n  /**\n   * GraphQL endpoint\n   */\n  endpoint: string;\n}\n\n/**\n * Load Socfony ENV config file.\n * @param path ENV file path.\n */\nexport function loadConfig(path?: string) {\n  const logger = new Logger('Socfony');\n  const { error } = dontEnvConfig({ path });\n  if (error) {\n    logger.error(error.message);\n    process.exit(1);\n  }\n\n  logger.log(`Loaded \"${path || '.env'}\" dot env config file.`);\n}\n\n/**\n * Get app config.\n * @returns {@like SocfonyConfig}\n */\nexport function getConfig(): SocfonyConfig {\n  return {\n    isProduction: process.env.NODE_ENV === 'production',\n    port: process.env.CLIENT_SERVER_PORT || 3000,\n    endpoint: process.env.CLIENT_GRAPHQL_ENDPOINT || '/',\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TencentCloudCosCredentials.html":{"url":"classes/TencentCloudCosCredentials.html","title":"class - TencentCloudCosCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TencentCloudCosCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/cos/entities/cos.entity.ts\n        \n\n            \n                Description\n            \n            \n                Tencent CLoud COS credential\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                bucket\n                            \n                            \n                                region\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authorization\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TencentCloudStsFederationToken\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud STS authorization token'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/cos/entities/cos.entity.ts:17\n                            \n                        \n\n                \n                    \n                        Tencent Cloud STS authorization token\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bucket\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud COS bucket'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/cos/entities/cos.entity.ts:25\n                            \n                        \n\n                \n                    \n                        Tencent Cloud COS bucket\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            region\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud COS bucket region'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/cos/entities/cos.entity.ts:33\n                            \n                        \n\n                \n                    \n                        Tencent Cloud COS bucket region\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { TencentCloudStsFederationToken } from '../../sts';\n\n/**\n * Tencent CLoud COS credential\n */\n@ObjectType({\n  description: 'Tencent CLoud COS credential',\n})\nexport class TencentCloudCosCredentials {\n  /**\n   * Tencent Cloud STS authorization token\n   */\n  @Field(() => TencentCloudStsFederationToken, {\n    description: 'Tencent Cloud STS authorization token',\n  })\n  authorization: TencentCloudStsFederationToken;\n\n  /**\n   * Tencent Cloud COS bucket\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud COS bucket',\n  })\n  bucket: string;\n\n  /**\n   * Tencent Cloud COS bucket region\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud COS bucket region',\n  })\n  region: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TencentCloudCosResolver.html":{"url":"classes/TencentCloudCosResolver.html","title":"class - TencentCloudCosResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TencentCloudCosResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/cos/cos.resolver.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Cloud COS credentials resolver.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                    Async\n                                createCosTemporaryReadCredential\n                            \n                            \n                                    Async\n                                createCosTemporaryWriteCredential\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cosService: TencentCloudCosService)\n                    \n                \n                        \n                            \n                                Defined in src/tencent-cloud/cos/cos.resolver.ts:43\n                            \n                        \n\n                \n                    \n                            Create the resolver.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cosService\n                                                  \n                                                        \n                                                                        TencentCloudCosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Tencent Cloud COS service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorization\n                        \n                        \n                    \n                \n            \n            \n                \nauthorization(undefined: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/tencent-cloud/cos/cos.resolver.ts:55\n                \n            \n\n\n            \n                \n                    Resolve Tencent Cloud STS federation token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createCosTemporaryReadCredential\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCosTemporaryReadCredential()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create Tencent Cloud COS read credential'})\n                \n            \n\n            \n                \n                    Defined in src/tencent-cloud/cos/cos.resolver.ts:72\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud COS read credential\n\n\n                    \n                        Returns :     Promise<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createCosTemporaryWriteCredential\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCosTemporaryWriteCredential(type: AllowUploadFileType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create Tencent Cloud COS write credential'})@AuthorizationWith()\n                \n            \n\n            \n                \n                    Defined in src/tencent-cloud/cos/cos.resolver.ts:90\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud COS write credential\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AllowUploadFileType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        AllowUploadFileType item.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Args,\n  Mutation,\n  Parent,\n  registerEnumType,\n  ResolveField,\n  Resolver,\n} from '@nestjs/graphql';\nimport { AuthorizationWith } from 'src/authorization.decorator';\nimport { IDHelper } from 'src/helper';\nimport { TencentCloudStsFederationToken } from '../sts';\nimport { TencentCloudCosCredentials } from './entities/cos.entity';\nimport { TencentCloudCosService } from './soc.service';\n\n/**\n * Allow upload File MIME-type.\n */\nexport enum AllowUploadFileType {\n  // Images\n  JPG = '.jpg',\n  PNG = '.png',\n  GIF = '.gif',\n  // Video\n  MP4 = '.mp4',\n  OGG = '.ogg',\n  // Audio\n  MP3 = '.mp3',\n  WAV = '.wav',\n}\n\n/**\n * Register `AllowUploadFileType` to GraphQL schema.\n */\nregisterEnumType(AllowUploadFileType, {\n  name: 'AllowUploadFileType',\n  description: 'Allow upload File MIME-type',\n});\n\n/**\n * Tencent Cloud COS credentials resolver.\n */\n@Resolver(() => TencentCloudCosCredentials)\nexport class TencentCloudCosResolver {\n  /**\n   * Create the resolver.\n   * @param cosService Tencent Cloud COS service.\n   */\n  constructor(private readonly cosService: TencentCloudCosService) {}\n\n  /**\n   * Resolve Tencent Cloud STS federation token.\n   * @param param SOcfony runner execution context.\n   */\n  @ResolveField(() => TencentCloudStsFederationToken)\n  authorization(\n    @Parent()\n    {\n      authorization,\n    }: {\n      authorization: () => Promise;\n    },\n  ) {\n    return authorization();\n  }\n\n  /**\n   * Create Tencent Cloud COS read credential\n   */\n  @Mutation(() => TencentCloudCosCredentials, {\n    description: 'Create Tencent Cloud COS read credential',\n  })\n  async createCosTemporaryReadCredential(): Promise & {\n      authorization: () => Promise;\n    }\n  > {\n    return Object.assign({}, this.cosService.options, {\n      authorization: () => this.cosService.createTemporaryReadCredential(),\n    });\n  }\n\n  /**\n   * Create Tencent Cloud COS write credential\n   * @param type `AllowUploadFileType` item.\n   */\n  @Mutation(() => TencentCloudCosCredentials, {\n    description: 'Create Tencent Cloud COS write credential',\n  })\n  @AuthorizationWith()\n  async createCosTemporaryWriteCredential(\n    @Args({\n      name: 'type',\n      type: () => AllowUploadFileType,\n      description: 'create resource type.',\n    })\n    type: AllowUploadFileType,\n  ): Promise & {\n      authorization: () => Promise;\n    }\n  > {\n    return Object.assign({}, this.cosService.options, {\n      authorization: () =>\n        this.cosService.createTemporaryWriteCredential(IDHelper.id(64) + type),\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TencentCloudCosService.html":{"url":"injectables/TencentCloudCosService.html","title":"injectable - TencentCloudCosService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TencentCloudCosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/cos/soc.service.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Cloud COS service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTemporaryReadCredential\n                            \n                            \n                                    Async\n                                createTemporaryWriteCredential\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                                \n                                    temporaryCredentialDurationSeconds\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sts: TencentCloudStsService)\n                    \n                \n                        \n                            \n                                Defined in src/tencent-cloud/cos/soc.service.ts:9\n                            \n                        \n\n                \n                    \n                            Create the COS service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sts\n                                                  \n                                                        \n                                                                        TencentCloudStsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Tencent Cloud STS service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTemporaryReadCredential\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTemporaryReadCredential()\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/cos/soc.service.ts:36\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud COS temporary read credential.\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTemporaryWriteCredential\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTemporaryWriteCredential(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/cos/soc.service.ts:64\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud COS temporary write credential.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tencent Cloud COS object key.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in src/tencent-cloud/cos/soc.service.ts:19\n                                \n                            \n                    \n                        \n                                Get COS options.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        temporaryCredentialDurationSeconds\n                    \n                \n\n                \n                    \n                        gettemporaryCredentialDurationSeconds()\n                    \n                \n                            \n                                \n                                    Defined in src/tencent-cloud/cos/soc.service.ts:29\n                                \n                            \n                    \n                        \n                                get temporary credential duration seconds.\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { IDHelper } from 'src/helper';\nimport { TencentCloudStsService } from '../sts';\n\n/**\n * Tencent Cloud COS service.\n */\n@Injectable()\nexport class TencentCloudCosService {\n  /**\n   * Create the COS service.\n   * @param sts Tencent Cloud STS service.\n   */\n  constructor(private readonly sts: TencentCloudStsService) {}\n\n  /**\n   * Get COS options.\n   */\n  get options() {\n    return {\n      bucket: process.env.TENCENT_CLOUD_COS_BUCKET,\n      region: process.env.TENCENT_CLOUD_COS_REGION,\n    };\n  }\n\n  /**\n   * get temporary credential duration seconds.\n   */\n  get temporaryCredentialDurationSeconds() {\n    return 7200;\n  }\n\n  /**\n   * Create Tencent Cloud COS temporary read credential.\n   */\n  async createTemporaryReadCredential() {\n    const { bucket, region } = this.options;\n    const stsClient = this.sts.createClient(region);\n    const [_, uid] = bucket.split('-');\n    return await stsClient.GetFederationToken({\n      Name: IDHelper.alphabet(32),\n      DurationSeconds: this.temporaryCredentialDurationSeconds,\n      Policy: JSON.stringify({\n        version: '2.0',\n        statement: [\n          {\n            effect: 'allow',\n            action: [\n              'name/cos:GetObject',\n              'name/cos:HeadObject',\n              'name/cos:OptionsObject',\n            ],\n            resource: [`qcs::cos:${region}:uid/${uid}:${bucket}/*`],\n          },\n        ],\n      }),\n    });\n  }\n\n  /**\n   * Create Tencent Cloud COS temporary write credential.\n   * @param name Tencent Cloud COS object key.\n   */\n  async createTemporaryWriteCredential(name: string) {\n    const { bucket, region } = this.options;\n    const stsClient = this.sts.createClient(region);\n    const [_, uid] = bucket.split('-');\n    return await stsClient.GetFederationToken({\n      Name: IDHelper.alphabet(32),\n      DurationSeconds: this.temporaryCredentialDurationSeconds,\n      Policy: JSON.stringify({\n        version: '2.0',\n        statement: [\n          {\n            effect: 'allow',\n            action: [\n              //简单上传操作\n              'name/cos:PutObject',\n              //表单上传对象\n              'name/cos:PostObject',\n              //分块上传：初始化分块操作\n              'name/cos:InitiateMultipartUpload',\n              //分块上传：List 进行中的分块上传\n              'name/cos:ListMultipartUploads',\n              //分块上传：List 已上传分块操作\n              'name/cos:ListParts',\n              //分块上传：上传分块块操作\n              'name/cos:UploadPart',\n              //分块上传：完成所有分块上传操作\n              'name/cos:CompleteMultipartUpload',\n              //取消分块上传操作\n              'name/cos:AbortMultipartUpload',\n            ],\n            resource: [`qcs::cos:${region}:uid/${uid}:${bucket}/${name}`],\n          },\n        ],\n      }),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TencentCloudModule.html":{"url":"modules/TencentCloudModule.html","title":"module - TencentCloudModule","body":"\n                   \n\n\n\n\n    Modules\n    TencentCloudModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TencentCloudModule\n\n\n\ncluster_TencentCloudModule_providers\n\n\n\ncluster_TencentCloudModule_exports\n\n\n\n\nTencentCloudCosService \n\nTencentCloudCosService \n\n\n\nTencentCloudSmsService \n\nTencentCloudSmsService \n\n\n\nTencentCloudStsService \n\nTencentCloudStsService \n\n\n\nTencentCloudModule\n\nTencentCloudModule\n\nTencentCloudCosService  -->\n\nTencentCloudModule->TencentCloudCosService \n\n\n\nTencentCloudSmsService  -->\n\nTencentCloudModule->TencentCloudSmsService \n\n\n\nTencentCloudStsService  -->\n\nTencentCloudModule->TencentCloudStsService \n\n\n\n\n\nTencentCloudCosService\n\nTencentCloudCosService\n\nTencentCloudModule -->\n\nTencentCloudCosService->TencentCloudModule\n\n\n\n\n\nTencentCloudSmsService\n\nTencentCloudSmsService\n\nTencentCloudModule -->\n\nTencentCloudSmsService->TencentCloudModule\n\n\n\n\n\nTencentCloudStsService\n\nTencentCloudStsService\n\nTencentCloudModule -->\n\nTencentCloudStsService->TencentCloudModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tencent-cloud/tencent-cloud.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Tencent Cloud module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TencentCloudCosService\n                        \n                        \n                            TencentCloudSmsService\n                        \n                        \n                            TencentCloudStsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TencentCloudCosService\n                        \n                        \n                            TencentCloudSmsService\n                        \n                        \n                            TencentCloudStsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TencentCloudCosService } from './cos';\nimport { TencentCloudCosResolver } from './cos/cos.resolver';\nimport { TencentCloudSmsService } from './sms';\nimport { TencentCloudStsService } from './sts';\n\n/**\n * Tencent Cloud module.\n */\n@Module({\n  providers: [\n    TencentCloudStsService,\n    TencentCloudCosService,\n    TencentCloudSmsService,\n\n    // Resolvers\n    TencentCloudCosResolver,\n  ],\n  exports: [\n    TencentCloudStsService,\n    TencentCloudCosService,\n    TencentCloudSmsService,\n  ],\n})\nexport class TencentCloudModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TencentCloudSmsService.html":{"url":"injectables/TencentCloudSmsService.html","title":"injectable - TencentCloudSmsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TencentCloudSmsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/sms/sms.service.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Cloud SMS service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createClient\n                            \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createClient\n                        \n                        \n                    \n                \n            \n            \n                \ncreateClient(region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/sms/sms.service.ts:29\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud SMS client.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'ap-guangzhou'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Client\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(params: Pick, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/sms/sms.service.ts:45\n                \n            \n\n\n            \n                \n                    Send SMS.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Pick\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Send SMS params.\n\n                                    \n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'ap-guangzhou'\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseOptions\n                    \n                \n\n                \n                    \n                        getbaseOptions()\n                    \n                \n                            \n                                \n                                    Defined in src/tencent-cloud/sms/sms.service.ts:14\n                                \n                            \n                    \n                        \n                                Get SMS base options.\n\n\n                                \n                                    Returns :         Pick\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Client } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sms/v20190711/sms_client';\nimport { SendSmsRequest } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sms/v20190711/sms_models';\nimport { getCredential } from '../common';\n\n/**\n * Tencent Cloud SMS service.\n */\n@Injectable()\nexport class TencentCloudSmsService {\n  /**\n   * Get SMS base options.\n   */\n  get baseOptions(): Pick {\n    return {\n      SmsSdkAppid: process.env.TENCENT_CLOUD_SMS_APP_ID,\n      Sign: process.env.TENCENT_CLOUD_SMS_SIGN,\n      ExtendCode: process.env.TENCENT_CLOUD_SMS_EXTEND_CODE,\n      SenderId: process.env.TENCENT_CLOUD_SMS_SENDER_ID,\n    };\n  }\n\n  /**\n   * Create Tencent Cloud SMS client.\n   */\n  createClient(region: string = 'ap-guangzhou'): Client {\n    return new Client({\n      credential: getCredential(),\n      region,\n      profile: {\n        httpProfile: {\n          endpoint: 'sms.tencentcloudapi.com',\n        },\n      },\n    });\n  }\n\n  /**\n   * Send SMS.\n   * @param params Send SMS params.\n   */\n  async send(\n    params: Pick,\n    region: string = 'ap-guangzhou',\n  ) {\n    const client = this.createClient(region);\n    const request = Object.assign({}, this.baseOptions, params);\n    return await client.SendSms(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TencentCloudStsCredentials.html":{"url":"classes/TencentCloudStsCredentials.html","title":"class - TencentCloudStsCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TencentCloudStsCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/sts/entities/sts.entity.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Cloud STS credentials.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Credentials\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                TmpSecretId\n                            \n                            \n                                TmpSecretKey\n                            \n                            \n                                Token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TmpSecretId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials secrect id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:26\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials secrect id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TmpSecretKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials secrect key'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:34\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials secrect key\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials token'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:18\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials token\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Int, ObjectType } from '@nestjs/graphql';\nimport { GetFederationTokenResponse } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_models';\nimport { Credentials } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_models';\n\n/**\n * Tencent Cloud STS credentials.\n */\n@ObjectType({\n  description: 'Tencent Cloud STS credentials.',\n})\nexport class TencentCloudStsCredentials implements Credentials {\n  /**\n   * Tencent Cloud credentials token\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials token',\n  })\n  Token: string;\n\n  /**\n   * Tencent Cloud credentials secrect id\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials secrect id',\n  })\n  TmpSecretId: string;\n\n  /**\n   * Tencent Cloud credentials secrect key\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials secrect key',\n  })\n  TmpSecretKey: string;\n}\n\n/**\n * Tencent Clous STS federation token\n */\n@ObjectType({\n  description: 'Tencent Clous STS federation token',\n})\nexport class TencentCloudStsFederationToken\n  implements GetFederationTokenResponse {\n  /**\n   * Tencent Cloud credentials\n   */\n  @Field(() => TencentCloudStsCredentials, {\n    description: 'Tencent Cloud credentials',\n    nullable: true,\n  })\n  Credentials?: TencentCloudStsCredentials;\n\n  /**\n   * Tencent Cloud credentials expired Unix time\n   */\n  @Field(() => Int, {\n    description: 'Tencent Cloud credentials expired Unix time.',\n    nullable: true,\n  })\n  ExpiredTime?: number;\n\n  /**\n   * Tencent Cloud credentials expired ISO8601 date\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials expired ISO8601 date.',\n    nullable: true,\n  })\n  Expiration?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TencentCloudStsFederationToken.html":{"url":"classes/TencentCloudStsFederationToken.html","title":"class - TencentCloudStsFederationToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TencentCloudStsFederationToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/sts/entities/sts.entity.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Clous STS federation token\n\n            \n\n\n            \n                Implements\n            \n            \n                        GetFederationTokenResponse\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                Credentials\n                            \n                            \n                                    Optional\n                                Expiration\n                            \n                            \n                                    Optional\n                                ExpiredTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            Credentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TencentCloudStsCredentials\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:52\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            Expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials expired ISO8601 date.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:70\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials expired ISO8601 date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ExpiredTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials expired Unix time.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:61\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials expired Unix time\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Int, ObjectType } from '@nestjs/graphql';\nimport { GetFederationTokenResponse } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_models';\nimport { Credentials } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_models';\n\n/**\n * Tencent Cloud STS credentials.\n */\n@ObjectType({\n  description: 'Tencent Cloud STS credentials.',\n})\nexport class TencentCloudStsCredentials implements Credentials {\n  /**\n   * Tencent Cloud credentials token\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials token',\n  })\n  Token: string;\n\n  /**\n   * Tencent Cloud credentials secrect id\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials secrect id',\n  })\n  TmpSecretId: string;\n\n  /**\n   * Tencent Cloud credentials secrect key\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials secrect key',\n  })\n  TmpSecretKey: string;\n}\n\n/**\n * Tencent Clous STS federation token\n */\n@ObjectType({\n  description: 'Tencent Clous STS federation token',\n})\nexport class TencentCloudStsFederationToken\n  implements GetFederationTokenResponse {\n  /**\n   * Tencent Cloud credentials\n   */\n  @Field(() => TencentCloudStsCredentials, {\n    description: 'Tencent Cloud credentials',\n    nullable: true,\n  })\n  Credentials?: TencentCloudStsCredentials;\n\n  /**\n   * Tencent Cloud credentials expired Unix time\n   */\n  @Field(() => Int, {\n    description: 'Tencent Cloud credentials expired Unix time.',\n    nullable: true,\n  })\n  ExpiredTime?: number;\n\n  /**\n   * Tencent Cloud credentials expired ISO8601 date\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials expired ISO8601 date.',\n    nullable: true,\n  })\n  Expiration?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TencentCloudStsService.html":{"url":"injectables/TencentCloudStsService.html","title":"injectable - TencentCloudStsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TencentCloudStsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/sts/sts.service.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Cloud STS service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createClient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createClient\n                        \n                        \n                    \n                \n            \n            \n                \ncreateClient(region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/sts/sts.service.ts:14\n                \n            \n\n\n            \n                \n                    Create STS client for region.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'ap-guangzhou'\n                                    \n\n                                    \n                                        server region.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Client\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Client } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_client';\nimport { getCredential } from '../common';\n\n/**\n * Tencent Cloud STS service.\n */\n@Injectable()\nexport class TencentCloudStsService {\n  /**\n   * Create STS client for region.\n   * @param region server region.\n   */\n  createClient(region: string = 'ap-guangzhou'): Client {\n    return new Client({\n      credential: getCredential(),\n      region,\n      profile: {\n        httpProfile: {\n          endpoint: 'sts.tencentcloudapi.com',\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateViewerArgs.html":{"url":"classes/UpdateViewerArgs.html","title":"class - UpdateViewerArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateViewerArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-viewer.args.ts\n        \n\n            \n                Description\n            \n            \n                Update viewer args.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                newPhoneSecurity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserUpdateInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User update input'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-viewer.args.ts:20\n                            \n                        \n\n                \n                    \n                        User update input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            newPhoneSecurity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Update phone need set new phone security code'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-viewer.args.ts:29\n                            \n                        \n\n                \n                    \n                        Update phone need set new phone security code\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field, PickType } from '@nestjs/graphql';\nimport { CreateAuthorizationTokenArgs } from 'src/authorization-token/dto/create-authorization-token.args';\nimport { UserUpdateInput } from './user-update.input';\n\n/**\n * Update viewer args.\n */\n@ArgsType()\nexport class UpdateViewerArgs extends PickType(\n  CreateAuthorizationTokenArgs,\n  ['security', 'type'] as const,\n  ArgsType,\n) {\n  /**\n   * User update input\n   */\n  @Field(() => UserUpdateInput, {\n    description: 'User update input',\n  })\n  data: UserUpdateInput;\n\n  /**\n   * Update phone need set new phone security code\n   */\n  @Field(() => String, {\n    nullable: true,\n    description: 'Update phone need set new phone security code',\n  })\n  newPhoneSecurity?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n            \n                Description\n            \n            \n                User entity.\n\n            \n\n            \n                Extends\n            \n            \n                        UserInterface\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User registered date at.'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:44\n\n                            \n                        \n\n                \n                    \n                        User registered date at.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User ID'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:27\n\n                            \n                        \n\n                \n                    \n                        User ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User login name'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:36\n\n                            \n                        \n\n                \n                    \n                        User login name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UserProfile\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'The user profile'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:52\n\n                            \n                        \n\n                \n                    \n                        User profile.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType } from '@nestjs/graphql';\nimport { UserInterface } from './user.interface';\n\n/**\n * User entity.\n */\n@ObjectType({\n  implements: [UserInterface],\n  description: 'User entity',\n})\nexport class UserEntity extends UserInterface {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInterface.html":{"url":"classes/UserInterface.html","title":"class - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                User interface.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User registered date at.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.interface.ts:44\n                            \n                        \n\n                \n                    \n                        User registered date at.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.interface.ts:27\n                            \n                        \n\n                \n                    \n                        User ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User login name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.interface.ts:36\n                            \n                        \n\n                \n                    \n                        User login name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UserProfile\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'The user profile'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.interface.ts:52\n                            \n                        \n\n                \n                    \n                        User profile.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, GraphQLISODateTime, ID, InterfaceType } from '@nestjs/graphql';\nimport { Prisma, UserProfile } from '@prisma/client';\nimport { UserProfileEntity } from '../profile/entities/profile.entity';\n\n/**\n * User interface.\n */\n@InterfaceType({\n  description: 'User interface.',\n})\nexport class UserInterface\n  implements\n    Omit,\n      'phone' | 'email' | 'password'\n    > {\n  /**\n   * User ID\n   */\n  @Field((type) => ID, {\n    description: 'User ID',\n  })\n  id: string;\n\n  /**\n   * User login name\n   */\n  @Field((type) => String, {\n    nullable: true,\n    description: 'User login name',\n  })\n  login: string;\n\n  /**\n   * User registered date at.\n   */\n  @Field((type) => GraphQLISODateTime, {\n    description: 'User registered date at.',\n  })\n  createdAt: Date;\n\n  /**\n   * User profile.\n   */\n  @Field((type) => UserProfileEntity, {\n    description: 'The user profile',\n  })\n  profile: UserProfile;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInterfaceResolver.html":{"url":"classes/UserInterfaceResolver.html","title":"class - UserInterfaceResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInterfaceResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user-interface.resolver.ts\n        \n\n            \n                Description\n            \n            \n                GraphQL user interface resolver.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userProfileService: UserProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user-interface.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            Create GraphQL user interface resolver\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userProfileService\n                                                  \n                                                        \n                                                                        UserProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User profile service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            profile\n                        \n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user/user-interface.resolver.ts:23\n                \n            \n\n\n            \n                \n                    Resolve user profile field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent context user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Parent, ResolveField, Resolver } from '@nestjs/graphql';\nimport { User } from '@prisma/client';\nimport { UserInterface } from './entities/user.interface';\nimport { UserProfileEntity } from './profile/entities/profile.entity';\nimport { UserProfileService } from './profile/profile.service';\n\n/**\n * GraphQL user interface resolver.\n */\n@Resolver(() => UserInterface)\nexport class UserInterfaceResolver {\n  /**\n   * Create GraphQL user interface resolver\n   * @param userProfileService User profile service.\n   */\n  constructor(private readonly userProfileService: UserProfileService) {}\n\n  /**\n   * Resolve user profile field.\n   * @param user Parent context user.\n   */\n  @ResolveField(() => UserProfileEntity)\n  profile(@Parent() user: User) {\n    return this.userProfileService.resolveProfile(user);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nSecurityModule\n\nSecurityModule\n\nUserModule -->\n\nSecurityModule->UserModule\n\n\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserModule -->\n\nUserProfileModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n        \n            Description\n        \n        \n            User module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            SecurityModule\n                        \n                        \n                            UserProfileModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { SecurityModule } from 'src/security/security.module';\nimport { UserProfileModule } from './profile/profile.module';\nimport { UserInterfaceResolver } from './user-interface.resolver';\nimport { UserService } from './user.service';\nimport { ViewerResolver } from './viewer.resolver';\n\n/**\n * User module.\n */\n@Module({\n  imports: [PrismaModule, UserProfileModule, SecurityModule],\n  providers: [UserService, UserInterfaceResolver, ViewerResolver],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileEntity.html":{"url":"classes/UserProfileEntity.html","title":"class - UserProfileEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/entities/profile.entity.ts\n        \n\n            \n                Description\n            \n            \n                User profile entity.\n\n            \n\n\n            \n                Implements\n            \n            \n                            UserProfileEntity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                bio\n                            \n                            \n                                location\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User avatar storage path.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:34\n                            \n                        \n\n                \n                    \n                        User avatar storage path\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User bio.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:43\n                            \n                        \n\n                \n                    \n                        User bio\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User location string.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:52\n                            \n                        \n\n                \n                    \n                        User location string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User name.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:25\n                            \n                        \n\n                \n                    \n                        User name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User profile updated at.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:61\n                            \n                        \n\n                \n                    \n                        User profile updated at\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Profile owner ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:16\n                            \n                        \n\n                \n                    \n                        Profile owner ID\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, GraphQLISODateTime, ID, ObjectType } from '@nestjs/graphql';\n\n/**\n * User profile entity.\n */\n@ObjectType({\n  description: 'User profile entity',\n})\nexport class UserProfileEntity implements UserProfileEntity {\n  /**\n   * Profile owner ID\n   */\n  @Field(() => ID, {\n    description: 'Profile owner ID',\n  })\n  userId: string;\n\n  /**\n   * User name\n   */\n  @Field((type) => String, {\n    description: 'User name.',\n    nullable: true,\n  })\n  name: string;\n\n  /**\n   * User avatar storage path\n   */\n  @Field((type) => String, {\n    description: 'User avatar storage path.',\n    nullable: true,\n  })\n  avatar: string;\n\n  /**\n   * User bio\n   */\n  @Field((type) => String, {\n    description: 'User bio.',\n    nullable: true,\n  })\n  bio: string;\n\n  /**\n   * User location string\n   */\n  @Field((type) => String, {\n    description: 'User location string.',\n    nullable: true,\n  })\n  location: string;\n\n  /**\n   * User profile updated at\n   */\n  @Field((type) => GraphQLISODateTime, {\n    description: 'User profile updated at.',\n    nullable: true,\n  })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserProfileModule.html":{"url":"modules/UserProfileModule.html","title":"module - UserProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    UserProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserProfileModule\n\n\n\ncluster_UserProfileModule_exports\n\n\n\ncluster_UserProfileModule_imports\n\n\n\ncluster_UserProfileModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserProfileModule -->\n\nPrismaModule->UserProfileModule\n\n\n\n\n\nUserProfileService \n\nUserProfileService \n\nUserProfileService  -->\n\nUserProfileModule->UserProfileService \n\n\n\n\n\nUserProfileService\n\nUserProfileService\n\nUserProfileModule -->\n\nUserProfileService->UserProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/profile/profile.module.ts\n        \n\n\n        \n            Description\n        \n        \n            User profile module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserProfileService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserProfileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { UserProfileResolver } from './profile.resolver';\nimport { UserProfileService } from './profile.service';\n\n/**\n * User profile module.\n */\n@Module({\n  imports: [PrismaModule],\n  providers: [UserProfileService, UserProfileResolver],\n  exports: [UserProfileService],\n})\nexport class UserProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileResolver.html":{"url":"classes/UserProfileResolver.html","title":"class - UserProfileResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/profile.resolver.ts\n        \n\n            \n                Description\n            \n            \n                User prifle entity resolver.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                updateViewerProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileService: UserProfileService, prismaClient: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/user/profile/profile.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            Create user prifle entity resolver\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        UserProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User profile service.\n\n                                                        \n                                                \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateViewerProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViewerProfile(context: ExecutionContext, data: UserProfileUpdateInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Update viewer profile'})@AuthorizationWith()\n                \n            \n\n            \n                \n                    Defined in src/user/profile/profile.resolver.ts:33\n                \n            \n\n\n            \n                \n                    Update viewer profile.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Socfony execution context.\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                UserProfileUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User profile update input.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Mutation, Resolver } from '@nestjs/graphql';\nimport { PrismaClient } from '@prisma/client';\nimport { AuthorizationWith } from 'src/authorization.decorator';\nimport { ExecutionContext } from 'src/execution-context';\nimport { UserProfileUpdateInput } from './dto/profile-update.input';\nimport { UserProfileEntity } from './entities/profile.entity';\nimport { UserProfileService } from './profile.service';\n\n/**\n * User prifle entity resolver.\n */\n@Resolver(() => UserProfileEntity)\nexport class UserProfileResolver {\n  /**\n   * Create user prifle entity resolver\n   * @param profileService User profile service.\n   * @param prismaClient Prisma client.\n   */\n  constructor(\n    private readonly profileService: UserProfileService,\n    private readonly prismaClient: PrismaClient,\n  ) {}\n\n  /**\n   * Update viewer profile.\n   * @param context Socfony execution context.\n   * @param data User profile update input.\n   */\n  @Mutation(() => UserProfileEntity, {\n    description: 'Update viewer profile',\n  })\n  @AuthorizationWith()\n  async updateViewerProfile(\n    @Context() context: ExecutionContext,\n    @Args({\n      name: 'data',\n      type: () => UserProfileUpdateInput,\n      description: 'Viewer profile update data.',\n    })\n    data: UserProfileUpdateInput,\n  ) {\n    const profile = await this.profileService.resolveProfile(context.user);\n    return await this.prismaClient.userProfile.update({\n      where: { userId: profile.userId },\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserProfileService.html":{"url":"injectables/UserProfileService.html","title":"injectable - UserProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/profile.service.ts\n        \n\n            \n                Description\n            \n            \n                User profile service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolveProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/user/profile/profile.service.ts:8\n                            \n                        \n\n                \n                    \n                            Create the user profile service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resolveProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveProfile(user: User | Prisma.UserGetPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/user/profile/profile.service.ts:19\n                \n            \n\n\n            \n                \n                    Resolve user profile.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User | Prisma.UserGetPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        need resolve profile user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma, PrismaClient, User, UserProfile } from '@prisma/client';\n\n/**\n * User profile service.\n */\n@Injectable()\nexport class UserProfileService {\n  /**\n   * Create the user profile service.\n   * @param prisma Prisma client.\n   */\n  constructor(private readonly prisma: PrismaClient) {}\n\n  /**\n   * Resolve user profile.\n   * @param user need resolve profile user.\n   */\n  async resolveProfile(\n    user:\n      | User\n      | Prisma.UserGetPayload,\n  ): Promise {\n    let { profile } = user as Prisma.UserGetPayload;\n    if (profile) {\n      return profile;\n    }\n    profile = await this.prisma.userProfile.findUnique({\n      where: { userId: user.id },\n      rejectOnNotFound: false,\n    });\n    if (profile) {\n      return profile;\n    }\n\n    return await this.prisma.userProfile.create({\n      data: { userId: user.id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileUpdateInput.html":{"url":"classes/UserProfileUpdateInput.html","title":"class - UserProfileUpdateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileUpdateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/dto/profile-update.input.ts\n        \n\n            \n                Description\n            \n            \n                User profile update input\n\n            \n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, OmitType, PartialType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { UserProfileEntity } from '../entities/profile.entity';\n\n/**\n * User profile update input\n */\n@InputType({\n  description: 'User profile update input',\n})\nexport class UserProfileUpdateInput\n  extends OmitType(\n    PartialType(UserProfileEntity),\n    ['updatedAt', 'userId'] as const,\n    InputType,\n  )\n  implements Omit {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.resolver.ts\n        \n\n            \n                Description\n            \n            \n                User entity resolver\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaClient: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.resolver.ts:12\n                            \n                        \n\n                \n                    \n                            Create user entity resolver.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            user\n                        \n                        \n                    \n                \n            \n            \n                \nuser(where: UserWhereUniqueInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {description: 'query where.'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.resolver.ts:26\n                \n            \n\n\n            \n                \n                    Query a user where unique\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                                UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Query a user where unique\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Query, Resolver } from '@nestjs/graphql';\nimport { PrismaClient } from '@prisma/client';\nimport { USER_NOT_FOUND } from 'src/constants';\nimport { UserWhereUniqueInput } from './dto';\nimport { UserEntity } from './entities/user.entity';\nimport { UserUnion } from './entities/user.union';\n\n/**\n * User entity resolver\n */\n@Resolver(() => UserEntity)\nexport class UserResolver {\n  /**\n   * Create user entity resolver.\n   * @param prismaClient Prisma client.\n   */\n  constructor(private readonly prismaClient: PrismaClient) {}\n\n  /**\n   * Query a user where unique\n   * @param where Query a user where unique\n   */\n  @Query(() => UserUnion, {\n    description: 'query where.',\n  })\n  user(\n    @Args({\n      name: 'where',\n      type: () => UserWhereUniqueInput,\n      description: 'query where',\n    })\n    where: UserWhereUniqueInput,\n  ) {\n    return this.prismaClient.user.findUnique({\n      where,\n      rejectOnNotFound: () => new Error(USER_NOT_FOUND),\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n            \n                Description\n            \n            \n                User service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                comparePassword\n                            \n                            \n                                    Async\n                                compareSecurity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(securitySmsService: SecuritySmsService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            Create user service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        securitySmsService\n                                                  \n                                                        \n                                                                        SecuritySmsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Security SMS service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            comparePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    comparePassword(user: User, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:23\n                \n            \n\n\n            \n                \n                    Compore user password.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Need compare password user.\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        input password.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            compareSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    compareSecurity(user: User, type: UserSecurityCompareType, security: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:34\n                \n            \n\n\n            \n                \n                    Compare secuity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Need compare user.\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                UserSecurityCompareType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        compare type.\n\n                                    \n                                \n                                \n                                    security\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Security object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { User } from '@prisma/client';\nimport { PasswordHelper } from 'src/helper';\nimport { SecuritySmsService } from 'src/security/security-sms.service';\nimport { UserSecurityCompareType } from './enums';\n\n/**\n * User service.\n */\n@Injectable()\nexport class UserService {\n  /**\n   * Create user service.\n   * @param securitySmsService Security SMS service.\n   */\n  constructor(private readonly securitySmsService: SecuritySmsService) {}\n\n  /**\n   * Compore user password.\n   * @param user Need compare password user.\n   * @param password input password.\n   */\n  async comparePassword(user: User, password: string): Promise {\n    if (!user?.password) return false;\n    return await PasswordHelper.compare(password, user.password);\n  }\n\n  /**\n   * Compare secuity.\n   * @param user Need compare user.\n   * @param type compare type.\n   * @param security Security object.\n   */\n  async compareSecurity(\n    user: User,\n    type: UserSecurityCompareType,\n    security: string,\n  ): Promise {\n    switch (type) {\n      case UserSecurityCompareType.PASSWORD:\n        return await this.comparePassword(user, security);\n      case UserSecurityCompareType.SMS_CODE:\n        const value = await this.securitySmsService.compareCode(\n          user.phone,\n          security,\n        );\n        if (value) {\n          return () => this.securitySmsService.updateCodeToUsed(value);\n        }\n        return false;\n      default:\n        return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserUpdateInput.html":{"url":"classes/UserUpdateInput.html","title":"class - UserUpdateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserUpdateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user-update.input.ts\n        \n\n            \n                Description\n            \n            \n                User update input.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Pick\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User new password', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-update.input.ts:25\n                            \n                        \n\n                \n                    \n                        User new password.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, PartialType, PickType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { ViewerEntity } from '../entities/viewer.entity';\n\n/**\n * User update input.\n */\n@InputType({\n  description: 'User update input',\n})\nexport class UserUpdateInput\n  extends PartialType(\n    PickType(ViewerEntity, ['email', 'login', 'phone']),\n    InputType,\n  )\n  implements\n    Pick {\n  /**\n   * User new password.\n   */\n  @Field(() => String, {\n    description: 'User new password',\n    nullable: true,\n  })\n  password?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserWhereUniqueInput.html":{"url":"classes/UserWhereUniqueInput.html","title":"class - UserWhereUniqueInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserWhereUniqueInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user-where-unique.input.ts\n        \n\n            \n                Description\n            \n            \n                User where inique input\n\n            \n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ID, InputType, PartialType, PickType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { ViewerEntity } from '../entities/viewer.entity';\n\n/**\n * User where inique input\n */\n@InputType({\n  description: 'User where inique input',\n})\nexport class UserWhereUniqueInput\n  extends PickType(\n    PartialType(ViewerEntity),\n    ['id', 'login', 'email', 'phone'] as const,\n    InputType,\n  )\n  implements Prisma.UserWhereUniqueInput {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewerEntity.html":{"url":"classes/ViewerEntity.html","title":"class - ViewerEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewerEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/viewer.entity.ts\n        \n\n            \n                Description\n            \n            \n                Viewer entity.\n\n            \n\n            \n                Extends\n            \n            \n                        UserInterface\n            \n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                phone\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User bound E-Mail address.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/viewer.entity.ts:22\n                            \n                        \n\n                \n                    \n                        User bound E-Mail address.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User bound Phone full number.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/viewer.entity.ts:31\n                            \n                        \n\n                \n                    \n                        User bound Phone full number.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User registered date at.'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:44\n\n                            \n                        \n\n                \n                    \n                        User registered date at.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User ID'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:27\n\n                            \n                        \n\n                \n                    \n                        User ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User login name'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:36\n\n                            \n                        \n\n                \n                    \n                        User login name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UserProfile\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'The user profile'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:52\n\n                            \n                        \n\n                \n                    \n                        User profile.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { User } from '@prisma/client';\nimport { UserInterface } from './user.interface';\n\n/**\n * Viewer entity.\n */\n@ObjectType({\n  implements: [UserInterface],\n  description: 'Viewer entity.',\n})\nexport class ViewerEntity\n  extends UserInterface\n  implements Omit {\n  /**\n   * User bound E-Mail address.\n   */\n  @Field((type) => String, {\n    nullable: true,\n    description: 'User bound E-Mail address.',\n  })\n  email: string;\n\n  /**\n   * User bound Phone full number.\n   */\n  @Field((type) => String, {\n    nullable: true,\n    description: 'User bound Phone full number.',\n  })\n  phone: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewerResolver.html":{"url":"classes/ViewerResolver.html","title":"class - ViewerResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewerResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/viewer.resolver.ts\n        \n\n            \n                Description\n            \n            \n                Viewer entity resolver.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                phone\n                            \n                            \n                                    Async\n                                updateViewer\n                            \n                            \n                                viewer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, prismaClient: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/user/viewer.resolver.ts:38\n                            \n                        \n\n                \n                    \n                            Create viewer entity resolver.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User service.\n\n                                                        \n                                                \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            email\n                        \n                        \n                    \n                \n            \n            \n                \nemail(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user/viewer.resolver.ts:68\n                \n            \n\n\n            \n                \n                    Resolve viewer email field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent context user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            phone\n                        \n                        \n                    \n                \n            \n            \n                \nphone(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user/viewer.resolver.ts:54\n                \n            \n\n\n            \n                \n                    Resolver viewer phone field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent context user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateViewer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViewer(context: ExecutionContext, args: UpdateViewerArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Update viewer'})@AuthorizationWith()\n                \n            \n\n            \n                \n                    Defined in src/user/viewer.resolver.ts:98\n                \n            \n\n\n            \n                \n                    Update viewer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Scofony exection context\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                                UpdateViewerArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Update viewer args.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            viewer\n                        \n                        \n                    \n                \n            \n            \n                \nviewer(context: ExecutionContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {description: 'Query the HTTP endpoint Authorization user.'})@AuthorizationWith()\n                \n            \n\n            \n                \n                    Defined in src/user/viewer.resolver.ts:85\n                \n            \n\n\n            \n                \n                    Query the HTTP endpoint Authorization user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Socfony execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Args,\n  Mutation,\n  Parent,\n  Query,\n  ResolveField,\n  Resolver,\n} from '@nestjs/graphql';\nimport { PrismaClient, User } from '@prisma/client';\nimport { AuthorizationWith } from 'src/authorization.decorator';\nimport {\n  SECURITY_COMPARE_FAILED,\n  USER_EMAIL_FIELD_EXISTED,\n  USER_LOGIN_FIELD_EXISTED,\n  USER_PHONE_FIELD_EXISTED,\n} from 'src/constants';\nimport { Context } from 'src/context.decorator';\nimport { ExecutionContext } from 'src/execution-context';\nimport { PasswordHelper } from 'src/helper';\nimport { UpdateViewerArgs } from './dto/update-viewer.args';\nimport { ViewerEntity } from './entities/viewer.entity';\nimport { UserSecurityCompareType } from './enums';\nimport { UserService } from './user.service';\n\n/**\n * User error codes.\n */\nconst constants = {\n  USER_LOGIN_FIELD_EXISTED,\n  USER_PHONE_FIELD_EXISTED,\n  USER_EMAIL_FIELD_EXISTED,\n};\n\n/**\n * Viewer entity resolver.\n */\n@Resolver(() => ViewerEntity)\nexport class ViewerResolver {\n  /**\n   * Create viewer entity resolver.\n   * @param userService User service.\n   * @param prismaClient Prisma client.\n   */\n  constructor(\n    private readonly userService: UserService,\n    private readonly prismaClient: PrismaClient,\n  ) {}\n\n  /**\n   * Resolver viewer phone field.\n   * @param user Parent context user.\n   */\n  @ResolveField(() => String)\n  phone(@Parent() user: User) {\n    const { phone } = user;\n    if (phone) {\n      return phone.replace(/(.*)\\d{4}(\\d{4})/, '$1****$2');\n    }\n\n    return phone;\n  }\n\n  /**\n   * Resolve viewer email field.\n   * @param user Parent context user.\n   */\n  @ResolveField(() => String)\n  email(@Parent() user: User) {\n    const { email } = user;\n    if (email) {\n      return email.replace(/^(\\w{1}).*?(\\w{1}?)\\@(.*)$/, '$1***$2@$3');\n    }\n\n    return email;\n  }\n\n  /**\n   * Query the HTTP endpoint Authorization user.\n   * @param context Socfony execution context.\n   */\n  @Query(() => ViewerEntity, {\n    description: 'Query the HTTP endpoint Authorization user.',\n  })\n  @AuthorizationWith()\n  viewer(@Context() context: ExecutionContext) {\n    return context.user;\n  }\n\n  /**\n   * Update viewer.\n   * @param context Scofony exection context\n   * @param args Update viewer args.\n   */\n  @Mutation(() => ViewerEntity, {\n    description: 'Update viewer',\n  })\n  @AuthorizationWith()\n  async updateViewer(\n    @Context() context: ExecutionContext,\n    @Args({\n      type: () => UpdateViewerArgs,\n      description: 'Update viewer args.',\n    })\n    args: UpdateViewerArgs,\n  ) {\n    const { data, security, type, newPhoneSecurity } = args;\n    const { user } = context;\n    for await (const key of Object.keys(data)) {\n      // Convert to password hash\n      if (key === 'password') {\n        data[key] = await PasswordHelper.hash(data[key]);\n        continue;\n      }\n\n      // Check whether the unique field is used by other users\n      const other = await this.prismaClient.user.findUnique({\n        where: { [key]: data[key] },\n        rejectOnNotFound: false,\n      });\n      if (other && other.id !== user.id) {\n        throw new Error(constants[`USER_${key.toUpperCase()}_FIELD_EXISTED`]);\n      }\n\n      // Check whether the new mobile phone number verification code matches\n      if (key === 'phone' && data[key] !== user.phone) {\n        const compared = await this.userService.compareSecurity(\n          Object.assign({}, user, { phone: data[key] }),\n          UserSecurityCompareType.SMS_CODE,\n          newPhoneSecurity,\n        );\n        if (compared) {\n          if (compared instanceof Function) {\n            compared();\n          }\n          continue;\n        }\n\n        throw new Error(SECURITY_COMPARE_FAILED);\n      }\n    }\n    const compared = await this.userService.compareSecurity(\n      user,\n      type,\n      security,\n    );\n    if (compared) {\n      if (compared instanceof Function) {\n        compared();\n      }\n      return (context.user = await this.prismaClient.user.update({\n        where: { id: user.id },\n        data,\n      }));\n    }\n\n    throw new Error(SECURITY_COMPARE_FAILED);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.config.ts\n            \n            interface\n            SocfonyConfig\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            function\n            getConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            function\n            loadConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/authorization-token.resolver.ts\n            \n            class\n            AuthorizationTokenEntityResolver\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/authorization-token/authorization-token.service.ts\n            \n            injectable\n            AuthorizationTokenService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_METADATA_HAS_AUTHORIZATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_METADATA_HAS_AUTHORIZATION_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_DEFAULT_EXPIRED_IN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_DEFAULT_EXPIRED_UNIT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_IN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_UNIT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_VVALIDITY_PERIOD_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authorization-token/dto/create-authorization-token.args.ts\n            \n            class\n            CreateAuthorizationTokenArgs\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/authorization-token/entities/authorization-token.entity.ts\n            \n            class\n            AuthorizationTokenEntity\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/authorization-token/types.ts\n            \n            interface\n            AuthorizationTokenValidityPeriod\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/authorization.decorator.ts\n            \n            interface\n            AuthDecoratorOptions\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/authorization.decorator.ts\n            \n            function\n            Authorization\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization.decorator.ts\n            \n            variable\n            AuthorizationWith\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization.decorator.ts\n            \n            variable\n            AuthorizationWithout\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization.guard.ts\n            \n            guard\n            AuthorizationGuard\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            AUTHORIZATION_TOKEN_NOT_FOUND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            SECURITY_COMPARE_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            UNAUTHORIZED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_EMAIL_FIELD_EXISTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_LOGIN_FIELD_EXISTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_NOT_FOUND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_NOT_SET_PHONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_PHONE_FIELD_EXISTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/context.decorator.ts\n            \n            variable\n            Context\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/execution-context.ts\n            \n            class\n            ExecutionContext\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            alphabet\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            custom\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            id\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            numeral\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            readability\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/password.helper.ts\n            \n            function\n            compare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/password.helper.ts\n            \n            function\n            hash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/middleware/logger.middleware.ts\n            \n            function\n            PrismaLoggerMiddleware\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.module.ts\n            \n            variable\n            client\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/security/security-sms.resolver.ts\n            \n            class\n            SecuritySmsResolver\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/security/security-sms.service.ts\n            \n            injectable\n            SecuritySmsService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/tencent-cloud/common/index.ts\n            \n            function\n            getCredential\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tencent-cloud/cos/cos.resolver.ts\n            \n            class\n            TencentCloudCosResolver\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/tencent-cloud/cos/entities/cos.entity.ts\n            \n            class\n            TencentCloudCosCredentials\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/tencent-cloud/cos/soc.service.ts\n            \n            injectable\n            TencentCloudCosService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/tencent-cloud/sms/sms.service.ts\n            \n            injectable\n            TencentCloudSmsService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/tencent-cloud/sts/entities/sts.entity.ts\n            \n            class\n            TencentCloudStsCredentials\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/tencent-cloud/sts/entities/sts.entity.ts\n            \n            class\n            TencentCloudStsFederationToken\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/tencent-cloud/sts/sts.service.ts\n            \n            injectable\n            TencentCloudStsService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/user/dto/update-viewer.args.ts\n            \n            class\n            UpdateViewerArgs\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/dto/user-update.input.ts\n            \n            class\n            UserUpdateInput\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/user/dto/user-where-unique.input.ts\n            \n            class\n            UserWhereUniqueInput\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            UserEntity\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/user/entities/user.interface.ts\n            \n            class\n            UserInterface\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/user/entities/user.union.ts\n            \n            function\n            resolveType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.union.ts\n            \n            variable\n            UserUnion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/entities/viewer.entity.ts\n            \n            class\n            ViewerEntity\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/user/profile/dto/profile-update.input.ts\n            \n            class\n            UserProfileUpdateInput\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/profile/entities/profile.entity.ts\n            \n            class\n            UserProfileEntity\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/user/profile/profile.resolver.ts\n            \n            class\n            UserProfileResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/profile/profile.service.ts\n            \n            injectable\n            UserProfileService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/user-interface.resolver.ts\n            \n            class\n            UserInterfaceResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/user/viewer.resolver.ts\n            \n            class\n            ViewerResolver\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/user/viewer.resolver.ts\n            \n            variable\n            constants\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.5\n        \n            @nestjs/core : ^7.6.5\n        \n            @nestjs/graphql : ^7.9.8\n        \n            @nestjs/platform-express : ^7.6.5\n        \n            @prisma/client : ^2.15.0\n        \n            apollo-server-express : ^2.19.2\n        \n            bcrypt : ^5.0.0\n        \n            class-transformer : ^0.3.2\n        \n            class-validator : ^0.13.1\n        \n            dayjs : ^1.10.4\n        \n            dotenv : ^8.2.0\n        \n            express : ^4.17.1\n        \n            graphql : ^15.4.0\n        \n            nanoid : ^3.1.20\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^6.6.3\n        \n            tencentcloud-sdk-nodejs : ^4.0.55\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllowUploadFileType   (src/.../cos.resolver.ts)\n                        \n                        \n                            HasTokenExpiredType   (src/.../enums.ts)\n                        \n                        \n                            UserSecurityCompareType   (src/.../enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tencent-cloud/cos/cos.resolver.ts\n    \n        \n            \n                \n                    \n                        \n                        AllowUploadFileType\n                    \n                \n                    \n                        \n                            Allow upload File MIME-type.\n\n                        \n                    \n                        \n                            \n                                 JPG\n                            \n                        \n                        \n                            \n                                Value : .jpg\n                            \n                        \n                        \n                            \n                                 PNG\n                            \n                        \n                        \n                            \n                                Value : .png\n                            \n                        \n                        \n                            \n                                 GIF\n                            \n                        \n                        \n                            \n                                Value : .gif\n                            \n                        \n                        \n                            \n                                 MP4\n                            \n                        \n                        \n                            \n                                Value : .mp4\n                            \n                        \n                        \n                            \n                                 OGG\n                            \n                        \n                        \n                            \n                                Value : .ogg\n                            \n                        \n                        \n                            \n                                 MP3\n                            \n                        \n                        \n                            \n                                Value : .mp3\n                            \n                        \n                        \n                            \n                                 WAV\n                            \n                        \n                        \n                            \n                                Value : .wav\n                            \n                        \n            \n        \n\n    src/authorization-token/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        HasTokenExpiredType\n                    \n                \n                    \n                        \n                            AuthorizationToken has expired type.\n\n                        \n                    \n                        \n                            \n                                 AUTH\n                            \n                        \n                        \n                            \n                                 REFRESH\n                            \n                        \n            \n        \n\n    src/user/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        UserSecurityCompareType\n                    \n                \n                    \n                        \n                            User security compare type.\n\n                        \n                    \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                 SMS_CODE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Authorization   (src/.../authorization.decorator.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            compare   (src/.../password.helper.ts)\n                        \n                        \n                            getConfig   (src/.../app.config.ts)\n                        \n                        \n                            getCredential   (src/.../index.ts)\n                        \n                        \n                            hash   (src/.../password.helper.ts)\n                        \n                        \n                            loadConfig   (src/.../app.config.ts)\n                        \n                        \n                            PrismaLoggerMiddleware   (src/.../logger.middleware.ts)\n                        \n                        \n                            resolveType   (src/.../user.union.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/authorization.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Authorization\n                        \n                        \n                    \n                \n            \n            \n                \nAuthorization(options?)\n                \n            \n\n\n\n\n            \n                \n                    Need validate HTTP endpoint Authorization token decorator.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Create SOcfony bootstrap.\n\n\n                \n            \n        \n    \n    src/helper/password.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            compare\n                        \n                        \n                    \n                \n            \n            \n                \ncompare(password, encrypted)\n                \n            \n\n\n\n\n            \n                \n                    Compare password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        password text.\n\n                                    \n                                \n                                \n                                    encrypted\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        encrpyted password text.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hash\n                        \n                        \n                    \n                \n            \n            \n                \nhash(password)\n                \n            \n\n\n\n\n            \n                \n                    Create a password encrpyted hash text.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        password text.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n\n\n            \n                \n                    Get app config.\n\n\n                    \n                    \n                    \n                        Returns :         SocfonyConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConfig\n                        \n                        \n                    \n                \n            \n            \n                \nloadConfig(path?)\n                \n            \n\n\n\n\n            \n                \n                    Load Socfony ENV config file.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        ENV file path.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/tencent-cloud/common/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getCredential\n                        \n                        \n                    \n                \n            \n            \n                \ngetCredential()\n                \n            \n\n\n\n\n            \n                \n                    Get Tencent Cloud common credential.\n\n\n                    \n                        Returns :     Credential\n\n                    \n                \n            \n        \n    \n    src/prisma/middleware/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PrismaLoggerMiddleware\n                        \n                        \n                    \n                \n            \n            \n                \nPrismaLoggerMiddleware(logger)\n                \n            \n\n\n\n\n            \n                \n                    Create Prisma logger middleware helper.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    logger\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Logger\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Prisma.Middleware\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/user/entities/user.union.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            resolveType\n                        \n                        \n                    \n                \n            \n            \n                \nresolveType(value, context)\n                \n            \n\n\n\n\n            \n                \n                    resolve UserUnion real type\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User object.\n\n                                    \n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Application context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSocfony\nSocfony is a full-stack open source software that builds full-platform application with social networking as the core. Socfony plugin mechanism allows more developers or teams to write more functions for it, can help you solve the complexity of developing full-platform software.\n\n\n\n\nEcosystem\n\n\n\nProject\nStatus\nDescription\n\n\n\n\nSocfony App\n\nSocfony App with Flutter\n\n\n\nDocumentation\nNo document has been written yet.\nLicense\nSocfony is BSD-3-Clause licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBSD 3-Clause License\nCopyright (c) 2021, Byte Gem\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\nNeither the name of the copyright holder nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationTokenModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SecurityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TencentCloudModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthorizationTokenModule\n\n\n\ncluster_AuthorizationTokenModule_exports\n\n\n\ncluster_AuthorizationTokenModule_providers\n\n\n\ncluster_SecurityModule\n\n\n\ncluster_SecurityModule_exports\n\n\n\ncluster_SecurityModule_providers\n\n\n\ncluster_TencentCloudModule\n\n\n\ncluster_TencentCloudModule_exports\n\n\n\ncluster_TencentCloudModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserProfileModule\n\n\n\ncluster_UserProfileModule_exports\n\n\n\ncluster_UserProfileModule_providers\n\n\n\n\nAuthorizationTokenModule\n\nAuthorizationTokenModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorizationTokenModule->AppModule\n\n\n\n\n\nAuthorizationTokenService \n\nAuthorizationTokenService \n\nAuthorizationTokenService  -->\n\nAuthorizationTokenModule->AuthorizationTokenService \n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthorizationTokenModule -->\n\nPrismaModule->AuthorizationTokenModule\n\n\n\n\n\nSecurityModule\n\nSecurityModule\n\nSecurityModule -->\n\nPrismaModule->SecurityModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserProfileModule -->\n\nPrismaModule->UserProfileModule\n\n\n\nUserModule -->\n\nSecurityModule->UserModule\n\n\n\nAppModule -->\n\nSecurityModule->AppModule\n\n\n\n\n\nSecuritySmsService \n\nSecuritySmsService \n\nSecuritySmsService  -->\n\nSecurityModule->SecuritySmsService \n\n\n\n\n\nTencentCloudModule\n\nTencentCloudModule\n\nSecurityModule -->\n\nTencentCloudModule->SecurityModule\n\n\n\nAppModule -->\n\nTencentCloudModule->AppModule\n\n\n\n\n\nTencentCloudCosService \n\nTencentCloudCosService \n\nTencentCloudCosService  -->\n\nTencentCloudModule->TencentCloudCosService \n\n\n\n\n\nTencentCloudSmsService \n\nTencentCloudSmsService \n\nTencentCloudSmsService  -->\n\nTencentCloudModule->TencentCloudSmsService \n\n\n\n\n\nTencentCloudStsService \n\nTencentCloudStsService \n\nTencentCloudStsService  -->\n\nTencentCloudModule->TencentCloudStsService \n\n\n\nAuthorizationTokenModule -->\n\nUserModule->AuthorizationTokenModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthorizationTokenService\n\nAuthorizationTokenService\n\nAuthorizationTokenModule -->\n\nAuthorizationTokenService->AuthorizationTokenModule\n\n\n\n\n\nSecuritySmsService\n\nSecuritySmsService\n\nSecurityModule -->\n\nSecuritySmsService->SecurityModule\n\n\n\n\n\nTencentCloudCosService\n\nTencentCloudCosService\n\nTencentCloudModule -->\n\nTencentCloudCosService->TencentCloudModule\n\n\n\n\n\nTencentCloudSmsService\n\nTencentCloudSmsService\n\nTencentCloudModule -->\n\nTencentCloudSmsService->TencentCloudModule\n\n\n\n\n\nTencentCloudStsService\n\nTencentCloudStsService\n\nTencentCloudModule -->\n\nTencentCloudStsService->TencentCloudModule\n\n\n\nUserModule -->\n\nUserProfileModule->UserModule\n\n\n\n\n\nUserProfileService \n\nUserProfileService \n\nUserProfileService  -->\n\nUserProfileModule->UserProfileService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nUserProfileService\n\nUserProfileService\n\nUserProfileModule -->\n\nUserProfileService->UserProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    21 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            alphabet   (src/.../id.helper.ts)\n                        \n                        \n                            AUTH_METADATA_HAS_AUTHORIZATION   (src/.../constants.ts)\n                        \n                        \n                            AUTH_METADATA_HAS_AUTHORIZATION_TYPE   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_DEFAULT_EXPIRED_IN   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_DEFAULT_EXPIRED_UNIT   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_IN   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_UNIT   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_VVALIDITY_PERIOD_KEY   (src/.../constants.ts)\n                        \n                        \n                            AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE   (src/.../constants.ts)\n                        \n                        \n                            AUTHORIZATION_TOKEN_NOT_FOUND   (src/.../constants.ts)\n                        \n                        \n                            AuthorizationWith   (src/.../authorization.decorator.ts)\n                        \n                        \n                            AuthorizationWithout   (src/.../authorization.decorator.ts)\n                        \n                        \n                            client   (src/.../prisma.module.ts)\n                        \n                        \n                            constants   (src/.../viewer.resolver.ts)\n                        \n                        \n                            Context   (src/.../context.decorator.ts)\n                        \n                        \n                            custom   (src/.../id.helper.ts)\n                        \n                        \n                            id   (src/.../id.helper.ts)\n                        \n                        \n                            numeral   (src/.../id.helper.ts)\n                        \n                        \n                            readability   (src/.../id.helper.ts)\n                        \n                        \n                            SECURITY_COMPARE_FAILED   (src/.../constants.ts)\n                        \n                        \n                            UNAUTHORIZED   (src/.../constants.ts)\n                        \n                        \n                            USER_EMAIL_FIELD_EXISTED   (src/.../constants.ts)\n                        \n                        \n                            USER_LOGIN_FIELD_EXISTED   (src/.../constants.ts)\n                        \n                        \n                            USER_NOT_FOUND   (src/.../constants.ts)\n                        \n                        \n                            USER_NOT_SET_PHONE   (src/.../constants.ts)\n                        \n                        \n                            USER_PHONE_FIELD_EXISTED   (src/.../constants.ts)\n                        \n                        \n                               (src/.../main.ts)\n                        \n                        \n                            UserUnion   (src/.../user.union.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/helper/id.helper.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            alphabet\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n    customAlphabet('qwertyuiopasdfghjklzxcvbnm', size)()\n                        \n                    \n\n                \n                    \n                        Generate alphabet(a-z) ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            custom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (alphabet: string, size: number) =>\n    customAlphabet(alphabet, size)()\n                        \n                    \n\n                \n                    \n                        Generate a custom alphabet ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string => nanoid(size)\n                        \n                    \n\n                \n                    \n                        Generate secure URL-friendly unique ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numeral\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n    customAlphabet('0123456789', size)()\n                        \n                    \n\n                \n                    \n                        Generate numeral ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readability\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n    customAlphabet('23456789qwertyupasdfghjklzxcvbnm', size)()\n                        \n                    \n\n                \n                    \n                        Generate readability(23456789qwertyupasdfghjklzxcvbnm) ID.\n\n                    \n                \n\n            \n        \n\n    src/authorization-token/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_METADATA_HAS_AUTHORIZATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'metadata has authorization'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_METADATA_HAS_AUTHORIZATION_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'metadata has authorization type'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_DEFAULT_EXPIRED_IN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_DEFAULT_EXPIRED_UNIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'days'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_IN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_UNIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'months'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_VVALIDITY_PERIOD_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'auth token validity period key'\n                        \n                    \n\n\n            \n        \n\n    src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTHORIZATION_TOKEN_NOT_FOUND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'AUTHORIZATION_TOKEN_NOT_FOUND'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SECURITY_COMPARE_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SECURITY_COMPARE_FAILED'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UNAUTHORIZED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'UNAUTHORIZED'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_EMAIL_FIELD_EXISTED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_EMAIL_FIELD_EXISTED'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_LOGIN_FIELD_EXISTED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_LOGIN_FIELD_EXISTED'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NOT_FOUND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_NOT_FOUND'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NOT_SET_PHONE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_NOT_SET_PHONE'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_PHONE_FIELD_EXISTED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_PHONE_FIELD_EXISTED'\n                        \n                    \n\n\n            \n        \n\n    src/authorization.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthorizationWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () =>\n  Authorization({\n    hasAuthorization: true,\n    type: HasTokenExpiredType.AUTH,\n  })\n                        \n                    \n\n                \n                    \n                        Http auth validate token.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AuthorizationWithout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () =>\n  Authorization({\n    hasAuthorization: false,\n    type: HasTokenExpiredType.AUTH,\n  })\n                        \n                    \n\n                \n                    \n                        Http auth, without validate token.\n\n                    \n                \n\n            \n        \n\n    src/prisma/prisma.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassProvider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: PrismaClient,\n  useClass: class\n    extends PrismaClient\n    implements OnModuleInit, OnModuleDestroy {\n    private readonly logger = new Logger('Prisma');\n\n    /**\n     * Prisma client constructor\n     */\n    constructor() {\n      super({\n        datasources: {\n          database: { url: process.env.DATABASE_URL },\n        },\n      });\n    }\n\n    /**\n     * NestJS module init hook callback.\n     */\n    async onModuleInit() {\n      // Prisma connect database.\n      await this.$connect();\n\n      // Set Prisma client global logger middleware.\n      this.$use(PrismaLoggerMiddleware(this.logger));\n    }\n\n    /**\n     * NestJS module destory hook callback.\n     */\n    async onModuleDestroy() {\n      // Prisma disconnect database.\n      await this.$disconnect();\n    }\n  },\n}\n                        \n                    \n\n                \n                    \n                        Prisma class provider\n\n                    \n                \n\n            \n        \n\n    src/user/viewer.resolver.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            constants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  USER_LOGIN_FIELD_EXISTED,\n  USER_PHONE_FIELD_EXISTED,\n  USER_EMAIL_FIELD_EXISTED,\n}\n                        \n                    \n\n                \n                    \n                        User error codes.\n\n                    \n                \n\n            \n        \n\n    src/context.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator(function (\n  _data: unknown,\n  context: ExecutionContext,\n): IContext {\n  if (context.getType() === 'graphql') {\n    return GqlExecutionContext.create(context).getContext();\n  }\n\n  return context.switchToHttp().getRequest().context;\n})\n                        \n                    \n\n                \n                    \n                        Get Socfony execution context decorator.\n\n                    \n                \n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.argv\n                        \n                    \n\n\n            \n        \n\n    src/user/entities/user.union.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserUnion\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createUnionType({\n  name: 'userUnion',\n  types: () => [UserEntity, ViewerEntity],\n  resolveType,\n  description: 'User union type.',\n})\n                        \n                    \n\n                \n                    \n                        User union type.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
