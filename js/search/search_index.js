var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.354,1,2.792]],["body/modules/AppModule.html",[0,2.481,1,5.716,2,2.09,3,2.195,4,2.44,5,2.44,6,2.195,7,3.029,8,2.311,9,3.856,10,3.856,11,4.865,12,0.015,13,4.865,14,3.455,15,4.546,16,4.546,17,4.546,18,3.198,19,2.44,20,2.311,21,0.169,22,0.131,23,0.113,24,4.447,25,0.15,26,5.828,27,3.605,28,3.388,29,0.294,30,1.479,31,0.853,32,4.447,33,1.604,34,2.75,35,4.447,36,4.447,37,5.828,38,3.467,39,3.858,40,3.856,41,2.09,42,1.994,43,4.447,44,4.543,45,2.585,46,3.467,47,3.467,48,0.169,49,0.313,50,0.008,51,0.011,52,0.008]],["title/interfaces/AuthDecoratorOptions.html",[53,2.032,54,3.048]],["body/interfaces/AuthDecoratorOptions.html",[12,0.015,21,0.162,22,0.126,23,0.108,25,0.143,29,0.257,30,1.417,33,2.776,39,2.819,40,3.693,48,0.257,50,0.008,51,0.011,52,0.008,53,2.214,54,4.962,55,3.042,56,3.042,57,5.288,58,4.962,59,3.936,60,0.298,61,1.086,62,1.199,63,5.186,64,0.581,65,4.213,66,2.99,67,4.196,68,5.665,69,5.665,70,4.26,71,3.042,72,4.046,73,3.693,74,3.32,75,3.293,76,4.807,77,3.722,78,2.214,79,2.256,80,3.693,81,4.26,82,4.26,83,2.634,84,3.693,85,1.164,86,4.26,87,4.26,88,4.26,89,3.936,90,4.26,91,1.548,92,2.634,93,0.817,94,3.32,95,3.32,96,2.103]],["title/guards/AuthorizationGuard.html",[39,2.588,97,2.792]],["body/guards/AuthorizationGuard.html",[12,0.015,21,0.101,22,0.078,23,0.067,25,0.224,29,0.263,30,0.884,31,0.776,33,2.504,34,1.644,38,2.073,39,2.678,45,1.545,48,0.101,49,0.187,50,0.005,51,0.008,52,0.005,60,0.186,62,1.139,64,0.568,65,2.678,66,2.768,67,3.384,71,2.889,72,2.889,73,2.306,74,2.073,75,2.351,76,4.398,77,1.459,79,2.309,85,1.815,89,1.644,91,1.338,93,0.776,97,4.429,98,2.659,99,2.306,100,1.459,101,2.433,102,5.473,103,4.897,104,4.046,105,4.046,106,4.046,107,4.046,108,1.459,109,2.659,110,6.806,111,3.862,112,2.979,113,0.686,114,2.659,115,1.345,116,2.232,117,1.236,118,5.578,119,3.508,120,1.657,121,1.733,122,4.046,123,3.962,124,2.659,125,4.046,126,3.704,127,4.05,128,2.063,129,2.351,130,2.659,131,2.659,132,4.046,133,4.046,134,4.046,135,2.659,136,4.046,137,4.046,138,2.659,139,4.046,140,2.659,141,4.046,142,1.997,143,4.046,144,2.659,145,2.103,146,4.246,147,1.521,148,2.659,149,2.659,150,0.345,151,0.47,152,2.073,153,1.899,154,2.073,155,2.073,156,1.76,157,0.531,158,2.545,159,1.841,160,3.508,161,2.306,162,2.306,163,4.046,164,4.046,165,2.502,166,0.808,167,2.659,168,2.659,169,1.657,170,2.659,171,2.659,172,2.659,173,2.659,174,2.306,175,2.659,176,2.659,177,2.659,178,2.659,179,1.313,180,0.817,181,2.659]],["title/classes/AuthorizationTokenEntity.html",[49,0.275,182,2.792]],["body/classes/AuthorizationTokenEntity.html",[12,0.015,21,0.142,22,0.11,23,0.095,25,0.258,29,0.226,31,0.718,33,2.585,48,0.142,49,0.263,50,0.007,51,0.01,52,0.007,60,0.262,61,0.995,64,0.506,66,3.06,77,3.267,78,3.095,80,5.576,113,0.719,150,0.486,151,0.661,157,1.036,166,1.565,182,3.705,183,0.486,184,3.284,185,6.06,186,3.245,187,3.51,188,4.253,189,5.164,190,3.267,191,3.322,192,1.144,193,1.519,194,4.518,195,3.743,196,4.257,197,3.743,198,1.519,199,6.431,200,3.743,201,6.988,202,3.209,203,3.743,204,2.697,205,2.147,206,3.743,207,0.747,208,2.326,209,2.697,210,3.245,211,3.245,212,4.823]],["title/classes/AuthorizationTokenEntityResolver.html",[49,0.275,213,2.792]],["body/classes/AuthorizationTokenEntityResolver.html",[12,0.015,21,0.099,22,0.077,23,0.066,25,0.237,27,2.473,29,0.274,31,1.268,33,2.603,34,3.812,48,0.099,49,0.184,50,0.005,51,0.007,52,0.005,60,0.183,62,1.033,63,2.855,64,0.54,66,2.758,67,1.619,77,3.793,78,3.593,79,2.05,85,1.597,89,1.619,91,1.092,93,1.041,96,1.293,100,1.442,101,1.903,108,1.442,111,3.727,112,2.434,113,0.622,115,2.199,116,2.025,117,1.121,120,1.638,121,2.325,123,3.333,126,3.185,127,2.194,128,1.806,145,3.204,150,0.34,151,0.463,154,2.041,158,2.078,159,1.504,165,3.358,166,1.456,169,1.638,179,1.974,180,1.228,182,5.372,183,0.34,184,2.897,187,2.521,192,0.92,193,0.589,196,3.594,205,1.228,207,1.084,209,2.078,210,2.27,211,4.206,213,2.855,214,2.27,215,4.851,216,3.467,217,2.618,218,2.618,219,2.618,220,1.87,221,3.727,222,2.618,223,3.467,224,2.618,225,3.117,226,2.618,227,3.871,228,2.647,229,2.618,230,3.436,231,2.618,232,2.618,233,2.618,234,2.618,235,2.618,236,2.324,237,2.647,238,2.647,239,1.733,240,2.041,241,1.733,242,1.293,243,2.041,244,1.619,245,1.733,246,1.522,247,1.619,248,2.041,249,2.618,250,2.27,251,2.618,252,2.618,253,1.87,254,3.998,255,2.618,256,2.618,257,3.998,258,1.879,259,2.618,260,2.041,261,2.618,262,1.361,263,2.041,264,3.998,265,2.618,266,1.436,267,2.27,268,1.174,269,2.041,270,2.618,271,2.618,272,2.618,273,2.618,274,2.618]],["title/modules/AuthorizationTokenModule.html",[0,1.354,11,2.588]],["body/modules/AuthorizationTokenModule.html",[0,2.551,2,2.287,3,2.402,4,2.67,5,2.67,6,2.402,7,3.527,8,3.527,11,5.245,12,0.015,14,3.539,17,4.656,18,3.389,19,2.67,20,2.529,21,0.185,22,0.143,23,0.123,25,0.164,28,3.59,29,0.28,30,1.618,33,2.575,34,3.009,48,0.185,49,0.342,50,0.009,51,0.012,52,0.009,66,2.423,111,4.629,154,3.793,184,2.287,213,4.411,275,4.219,276,4.866,277,4.219,278,4.219,279,4.866,280,4.815,281,3.221,282,4.866,283,4.866]],["title/injectables/AuthorizationTokenService.html",[111,2.272,147,1.47]],["body/injectables/AuthorizationTokenService.html",[12,0.015,21,0.09,22,0.07,23,0.06,25,0.2,29,0.256,30,0.792,31,1.138,33,2.43,34,3.833,48,0.09,49,0.168,50,0.004,51,0.007,52,0.004,60,0.167,62,0.989,64,0.558,65,2.461,66,3.04,67,3.194,76,2.461,79,2.132,83,1.473,85,1.621,89,1.473,91,1.752,93,0.457,96,1.176,100,1.341,101,2.693,108,1.341,111,2.161,112,2.315,113,0.632,115,1.973,116,1.939,117,1.138,120,2.431,121,2.212,128,1.862,129,3.255,147,1.398,151,0.421,156,1.577,158,1.932,159,1.398,165,4.245,166,1.488,169,2.627,179,2.257,180,1.586,184,2.913,188,3.688,189,3.964,190,1.307,191,1.02,194,3.463,196,3.418,198,1.334,216,3.964,221,1.385,242,1.176,245,1.577,246,1.385,247,3.194,248,1.857,253,1.701,258,3.226,262,1.238,266,2.04,284,1.307,285,2.066,286,4.571,287,3.717,288,5.164,289,4.571,290,2.066,291,3.727,292,2.382,293,3.717,294,2.382,295,2.382,296,3.717,297,3.717,298,2.461,299,3.965,300,2.382,301,2.382,302,2.382,303,2.382,304,3.223,305,3.223,306,2.382,307,2.382,308,2.382,309,2.382,310,2.898,311,3.688,312,1.857,313,1.701,314,2.382,315,2.898,316,2.898,317,2.898,318,2.898,319,2.898,320,1.701,321,1.473,322,5.164,323,2.382,324,2.382,325,2.382,326,2.382,327,2.427,328,2.898,329,3.223,330,2.382,331,2.898,332,2.382,333,2.382,334,2.382,335,2.382,336,2.382,337,2.382,338,2.382,339,3.717,340,2.382,341,2.382,342,2.382,343,1.857,344,2.382,345,2.382,346,2.382,347,3.717,348,2.382,349,2.382,350,2.382,351,1.857,352,2.382,353,2.382,354,4.478,355,2.066,356,1.857,357,2.382,358,2.066,359,3.223,360,1.701,361,2.382,362,1.385,363,2.382,364,2.382,365,2.382,366,2.382,367,2.382,368,2.382]],["title/interfaces/AuthorizationTokenValidityPeriod.html",[53,2.032,320,2.792]],["body/interfaces/AuthorizationTokenValidityPeriod.html",[12,0.015,21,0.201,22,0.156,23,0.134,25,0.178,29,0.201,48,0.201,50,0.01,51,0.012,52,0.01,53,2.752,55,3.781,60,0.37,61,1.249,64,0.576,66,3.017,184,2.488,311,3.781,320,4.65,327,3.06,328,5.735,329,6.379,331,5.076,369,4.591,370,6.379,371,7.052,372,3.214]],["title/classes/CreateAuthorizationTokenArgs.html",[49,0.275,227,2.588]],["body/classes/CreateAuthorizationTokenArgs.html",[12,0.015,21,0.163,22,0.127,23,0.109,25,0.25,29,0.243,33,2.627,48,0.163,49,0.302,50,0.008,51,0.011,52,0.008,60,0.301,61,1.093,64,0.577,66,2.237,113,0.681,115,2.564,150,0.558,165,4.665,166,1.483,183,0.558,184,3.201,192,1.084,193,1.438,198,1.438,207,1.36,227,3.774,230,2.963,247,4.212,248,3.353,258,3.653,327,3.201,373,5.309,374,3.729,375,4.301,376,4.301,377,4.508,378,4.508,379,4.212,380,2.672,381,4.301,382,4.071,383,4.301]],["title/classes/DateTimeFilter.html",[49,0.275,384,2.588]],["body/classes/DateTimeFilter.html",[12,0.015,21,0.136,22,0.105,23,0.091,25,0.265,29,0.191,31,0.685,48,0.136,49,0.251,50,0.007,51,0.009,52,0.007,60,0.25,61,0.964,62,1.376,64,0.541,93,1.494,113,0.769,150,0.464,151,0.631,157,1.003,183,0.464,191,3.477,192,1.224,193,1.624,207,1.466,351,5.177,384,4.396,385,6.365,386,3.099,387,3.846,388,2.868,389,5.758,390,5.758,391,5.758,392,5.758,393,5.038,394,1.969,395,3.574,396,3.574,397,3.574,398,3.574,399,3.574,400,3.574,401,3.574,402,3.574,403,4.78,404,1.971,405,3.574]],["title/classes/ExecutionContext.html",[49,0.275,123,2.032]],["body/classes/ExecutionContext.html",[12,0.015,21,0.116,22,0.09,23,0.077,25,0.21,29,0.17,31,0.584,33,2.353,48,0.116,49,0.214,50,0.006,51,0.008,52,0.006,60,0.213,61,0.859,62,1.222,64,0.505,66,3.033,77,2.457,78,2.327,79,2.169,83,1.883,85,1.704,91,1.704,93,0.584,96,1.503,100,1.615,101,2.083,108,1.615,112,3.301,113,0.718,115,2.243,116,2.027,117,1.123,123,2.76,126,3.319,127,3.212,128,1.766,129,3.403,142,2.21,151,0.538,152,6.222,153,4.941,158,3.596,165,4.675,166,1.509,169,1.248,180,0.935,183,0.395,198,1.516,244,4.279,262,1.583,327,2.104,356,2.374,406,2.641,407,7.061,408,7.061,409,5.31,410,4.478,411,3.045,412,3.045,413,3.883,414,3.045,415,3.045,416,3.045,417,3.045,418,3.045,419,4.478,420,3.045,421,3.045,422,4.478,423,3.045,424,4.478,425,3.045,426,5.31,427,3.045,428,3.045,429,3.045,430,3.045,431,1.883,432,3.045,433,3.045,434,3.045,435,3.045,436,3.045,437,3.045,438,3.045,439,3.045,440,3.045,441,3.045,442,3.045]],["title/classes/MomentAudioMedia.html",[49,0.275,443,2.272]],["body/classes/MomentAudioMedia.html",[12,0.016,21,0.128,22,0.099,23,0.085,25,0.26,29,0.183,48,0.256,49,0.432,50,0.006,51,0.009,52,0.006,60,0.236,61,0.924,62,0.851,64,0.567,85,1.536,91,0.92,93,0.924,113,0.599,117,0.924,150,0.437,157,1.123,179,1.663,180,1.035,183,0.437,192,0.953,193,1.265,198,1.689,207,1.388,208,2.751,242,1.663,321,2.083,394,1.218,443,3.567,444,1.958,445,4.598,446,4.353,447,2.514,448,4.269,449,5.246,450,3.972,451,3.368,452,4.478,453,3.368,454,4.298,455,2.23,456,2.626,457,3.189,458,3.189,459,1.958,460,2.083,461,2.083,462,3.723,463,2.406,464,2.8,465,3.269,466,3.269,467,3.189,468,2.063,469,2.23,470,2.8,471,2.083,472,2.083,473,2.23,474,3.478,475,2.23,476,2.23,477,2.23,478,1.751,479,2.23]],["title/classes/MomentEntity.html",[49,0.275,480,2.588]],["body/classes/MomentEntity.html",[12,0.015,21,0.129,22,0.1,23,0.086,25,0.263,29,0.234,31,0.65,48,0.129,49,0.238,50,0.006,51,0.009,52,0.006,60,0.237,61,0.928,64,0.533,93,1.18,113,0.758,150,0.44,151,0.599,157,0.966,166,1.127,183,0.44,187,2.933,191,2.636,192,1.207,193,1.602,198,1.654,205,2.346,207,1.448,208,2.169,394,1.556,403,3.735,446,3.822,468,3.472,470,2.812,480,3.203,481,2.939,482,5.431,483,2.933,484,4.893,485,4.927,486,4.399,487,5.431,488,3.389,489,4.195,490,4.798,491,3.389,492,6.155,493,3.389,494,3.389,495,4.839,496,3.389,497,3.389,498,3.389,499,3.389,500,2.992,501,2.939,502,3.389,503,3.389]],["title/classes/MomentFindFirstArgs.html",[49,0.275,504,2.792]],["body/classes/MomentFindFirstArgs.html",[12,0.015,21,0.207,22,0.161,23,0.139,29,0.271,31,1.048,48,0.207,49,0.384,50,0.01,51,0.012,52,0.01,60,0.382,61,1.273,91,1.493,96,3.53,113,0.582,150,0.709,151,0.965,157,1.325,183,0.709,262,3.716,327,2.568,378,4.733,382,5.106,447,2.238,468,2.34,478,2.84,504,4.74,505,3.642,506,4.738,507,3.858,508,5.464,509,4.738,510,3.617,511,4.738,512,5.464,513,4.738,514,4.738]],["title/classes/MomentFindManyArgs.html",[49,0.275,510,2.588]],["body/classes/MomentFindManyArgs.html",[12,0.015,21,0.128,22,0.099,23,0.086,25,0.255,29,0.247,31,0.647,48,0.128,49,0.237,50,0.006,51,0.009,52,0.006,60,0.236,61,0.925,62,1.327,64,0.506,93,1.44,113,0.719,117,0.647,150,0.438,151,0.596,157,0.963,183,0.438,192,1.145,193,1.52,207,1.421,221,2.803,372,3.032,378,4.605,382,3.444,388,2.381,394,1.899,459,1.961,461,2.086,468,2.63,505,3.817,510,3.192,513,6.033,514,6.033,515,2.925,516,3.759,517,6.958,518,6.497,519,4.881,520,4.065,521,6.758,522,7.115,523,6.142,524,6.024,525,3.374,526,5.629,527,3.374,528,4.386,529,4.823,530,3.726,531,6.142,532,3.374,533,5.326,534,7.115,535,6.142,536,4.182,537,3.374,538,4.823,539,3.374,540,4.065,541,3.374,542,4.388,543,2.63,544,2.925,545,2.409,546,3.374,547,3.374,548,3.374]],["title/classes/MomentImageMedia.html",[49,0.275,466,2.272]],["body/classes/MomentImageMedia.html",[12,0.016,21,0.133,22,0.103,23,0.089,25,0.26,29,0.188,48,0.26,49,0.439,50,0.007,51,0.009,52,0.007,60,0.245,61,0.948,64,0.566,85,1.568,91,0.955,93,0.67,113,0.526,117,0.948,150,0.454,157,1.146,179,1.726,180,1.074,183,0.454,192,0.838,193,1.112,198,1.684,207,1.404,208,2.798,242,1.726,321,2.162,394,0.884,443,3.336,444,2.032,445,4.229,446,4.345,447,2.557,448,4.303,449,4.883,450,3.752,452,4.441,454,4.359,455,2.314,456,2.725,457,3.274,458,3.274,459,2.032,460,2.162,461,2.162,462,4.131,463,2.496,464,2.875,465,3.336,466,3.627,467,4.359,468,2.118,469,2.314,470,2.875,471,2.162,472,2.162,473,2.314,474,3.55,475,2.314,476,2.314,477,2.314,478,1.817,479,2.314,549,3.496]],["title/classes/MomentListRelationFilter.html",[49,0.275,550,2.792]],["body/classes/MomentListRelationFilter.html",[12,0.015,21,0.169,22,0.132,23,0.113,25,0.253,29,0.247,31,0.856,48,0.169,49,0.314,50,0.008,51,0.011,52,0.008,60,0.312,61,1.121,62,1.3,64,0.488,93,1.411,113,0.693,150,0.58,151,0.789,157,1.167,183,0.58,192,1.104,193,1.465,207,1.38,380,2.887,388,3.701,394,1.86,404,2.293,468,3.257,505,3.792,540,5.137,545,3.189,550,4.173,551,5.176,552,3.189,553,7.173,554,5.354,555,3.871,556,4.465,557,3.871,558,4.465]],["title/classes/MomentMediaCommon.html",[49,0.275,448,2.272]],["body/classes/MomentMediaCommon.html",[12,0.016,21,0.136,22,0.106,23,0.091,25,0.26,29,0.191,48,0.262,49,0.444,50,0.007,51,0.009,52,0.007,60,0.251,61,0.966,64,0.563,85,1.59,91,0.98,93,0.688,113,0.382,117,0.966,150,0.466,157,1.162,179,1.77,180,1.101,183,0.466,192,0.608,193,0.806,198,1.674,207,1.414,208,2.83,242,1.77,321,2.218,394,0.906,443,3.383,444,2.084,445,4.264,446,4.357,447,2.384,448,4.27,449,4.924,450,3.783,452,4.47,454,4.401,457,3.333,458,3.333,459,2.084,460,2.218,461,2.218,462,3.853,463,2.561,464,3.383,465,3.383,466,3.383,467,3.333,468,2.157,469,2.374,470,2.927,471,2.218,472,2.218,473,2.374,474,3.6,475,2.374,476,2.374,477,2.374,478,1.864,479,2.374,559,3.586]],["title/modules/MomentModule.html",[0,1.354,13,2.588]],["body/modules/MomentModule.html",[0,2.489,2,2.6,3,2.731,4,3.035,5,3.035,6,2.731,7,3.476,8,2.875,12,0.015,13,5.143,14,3.652,18,3.669,19,3.035,20,2.875,21,0.21,22,0.163,23,0.14,28,3.887,29,0.273,30,1.84,48,0.21,49,0.389,50,0.01,51,0.012,52,0.01,281,3.662,560,5.532,561,5.532,562,5.532,563,4.776,564,5.532]],["title/classes/MomentOrderByInput.html",[49,0.275,528,2.792]],["body/classes/MomentOrderByInput.html",[12,0.015,21,0.129,22,0.1,23,0.086,25,0.262,29,0.214,31,0.651,48,0.129,49,0.239,50,0.006,51,0.009,52,0.006,60,0.237,61,0.929,62,1.366,64,0.533,93,1.483,113,0.759,150,0.441,151,0.6,157,0.967,183,0.441,192,1.208,193,1.602,205,1.735,207,1.593,380,1.332,394,1.955,404,1.9,446,3.099,468,1.454,482,4.403,483,2.935,484,4.897,485,3.738,486,4.403,487,4.403,505,3.979,528,3.459,530,5.303,543,2.646,565,2.424,566,6.154,567,6.029,568,2.943,569,2.943,570,2.943,571,2.943,572,2.943,573,4.398,574,3.394,575,2.943,576,2.943,577,1.764,578,3.394]],["title/classes/MomentResolver.html",[49,0.275,563,2.792]],["body/classes/MomentResolver.html",[12,0.015,21,0.117,22,0.091,23,0.078,25,0.246,29,0.263,48,0.117,49,0.217,50,0.006,51,0.008,52,0.006,60,0.216,62,1.108,64,0.52,79,1.959,85,1.609,93,0.867,100,1.63,108,1.112,112,2.937,113,0.667,116,2.171,117,1.256,128,1.959,145,2.348,150,0.4,151,0.545,159,1.159,180,1.388,183,0.4,192,0.998,205,0.947,207,0.902,220,3.82,221,3.423,230,3.908,236,2.626,238,3.898,241,2.041,242,1.522,262,2.348,269,2.404,299,2.795,378,5.168,379,3.308,388,3.645,394,1.142,468,3.265,480,4.15,485,3.898,500,2.795,501,2.673,504,4.478,510,4.15,511,2.673,520,4.15,524,5.108,533,5.107,544,2.673,563,3.227,579,2.673,580,5.349,581,5.349,582,5.349,583,2.673,584,3.083,585,3.083,586,6.402,587,3.083,588,3.083,589,6.943,590,5.107,591,3.083,592,3.083,593,5.107,594,3.083,595,4.519,596,2.202,597,3.083,598,3.227,599,2.404,600,5.349,601,3.083,602,2.673,603,1.692,604,3.083,605,3.083,606,3.083,607,3.083,608,2.404,609,3.083]],["title/classes/MomentVideoMedia.html",[49,0.275,465,2.272]],["body/classes/MomentVideoMedia.html",[12,0.016,21,0.129,22,0.1,23,0.086,25,0.26,29,0.184,48,0.257,49,0.433,50,0.006,51,0.009,52,0.006,60,0.237,61,0.928,64,0.568,85,1.542,91,0.926,93,0.65,113,0.601,117,0.928,150,0.44,157,1.127,179,1.673,180,1.041,183,0.44,192,0.956,193,1.269,198,1.69,207,1.391,208,2.759,242,1.673,321,2.096,394,0.857,443,3.28,444,1.97,445,4.186,446,4.355,447,2.521,448,4.275,449,5.253,450,3.978,452,4.724,454,4.308,455,2.243,456,2.642,457,3.203,458,3.203,459,1.97,460,2.096,461,2.096,462,3.735,463,2.42,464,2.812,465,3.577,466,3.28,467,3.203,468,2.072,469,2.243,470,2.812,471,2.096,472,2.096,473,2.243,474,3.49,475,2.243,476,2.243,477,2.243,478,1.761,479,2.243,610,3.389,611,3.389]],["title/classes/MomentWhereInput.html",[49,0.275,540,2.588]],["body/classes/MomentWhereInput.html",[12,0.015,21,0.129,22,0.1,23,0.086,25,0.263,29,0.234,31,0.652,48,0.129,49,0.239,50,0.006,51,0.009,52,0.006,60,0.238,61,0.93,62,1.38,64,0.543,93,1.498,113,0.772,150,0.441,151,0.601,157,0.968,183,0.441,191,2.077,192,1.229,193,1.631,198,1.523,205,2.142,207,1.469,384,3.742,387,3.21,388,3.713,394,1.974,404,1.902,482,5.08,483,2.938,485,4.616,486,4.406,487,5.08,490,3.78,505,4.038,507,2.818,540,4.93,577,1.767,612,2.428,613,3.399,614,4.727,615,2.65,616,2.948,617,2.948,618,2.948,619,2.65,620,4.08,621,2.948,622,2.948,623,2.948,624,2.65,625,2.65]],["title/classes/MomentWhereUniqueInput.html",[49,0.275,520,2.588]],["body/classes/MomentWhereUniqueInput.html",[12,0.015,21,0.216,22,0.168,23,0.145,25,0.192,29,0.276,31,1.094,48,0.216,49,0.401,50,0.011,51,0.013,52,0.011,91,1.558,150,0.74,151,1.007,157,1.36,183,0.74,205,1.752,379,3.527,380,2.237,404,2.857,447,2.336,468,2.442,480,3.775,505,3.129,520,4.508,602,4.944,626,4.445,627,4.072,628,4.072,629,5.702,630,5.702]],["title/modules/PrismaModule.html",[0,1.354,14,1.837]],["body/modules/PrismaModule.html",[0,2.567,2,2.155,7,2.383,8,2.383,12,0.015,14,2.794,21,0.174,22,0.135,23,0.116,25,0.154,29,0.25,30,1.525,31,1.447,46,3.574,47,3.574,48,0.174,49,0.464,50,0.009,51,0.011,52,0.009,91,1.252,101,2.332,108,2.145,112,2.958,118,4.635,121,3.098,151,0.81,157,0.915,158,2.383,159,1.724,169,2.436,180,1.408,280,5.143,310,5.143,447,1.878,631,3.574,632,5.155,633,4.712,634,5.721,635,5.721,636,3.574,637,4.635,638,3.975,639,3.975,640,3.975,641,3.975,642,3.975,643,3.975,644,3.975,645,5.155,646,5.155,647,3.975,648,3.975,649,3.574,650,3.975,651,3.975,652,3.975,653,3.975]],["title/modules/SecurityModule.html",[0,1.354,15,2.418]],["body/modules/SecurityModule.html",[0,2.56,2,2.312,3,2.429,4,2.699,5,2.699,6,2.429,7,3.545,8,3.545,12,0.015,14,3.549,15,4.908,16,4.67,18,3.413,19,2.699,20,2.557,21,0.187,22,0.145,23,0.125,25,0.166,28,3.615,29,0.281,30,1.636,42,2.205,48,0.187,49,0.346,50,0.009,51,0.012,52,0.009,258,3.368,281,3.256,654,4.266,655,4.266,656,4.92,657,4.266,658,4.636,659,4.92,660,2.107,661,4.442,662,4.92,663,3.835]],["title/classes/SecuritySmsResolver.html",[49,0.275,661,2.792]],["body/classes/SecuritySmsResolver.html",[12,0.015,21,0.13,22,0.101,23,0.087,25,0.245,27,3.012,29,0.265,33,1.757,48,0.13,49,0.241,50,0.006,51,0.009,52,0.006,60,0.239,62,1.002,63,2.443,64,0.508,67,2.115,74,2.666,75,3.297,79,1.886,85,1.33,89,2.115,91,1.33,93,0.934,100,1.757,101,2.663,108,1.234,113,0.604,115,2.505,116,1.964,117,1.185,120,1.995,123,3.212,126,3.283,127,2.672,128,1.62,142,2.404,145,3.528,150,0.444,159,1.286,169,1.995,179,1.688,180,1.051,183,0.444,184,1.607,188,3.478,192,0.825,198,1.39,202,3.822,223,2.966,228,3.224,230,2.531,237,3.754,239,2.264,242,1.688,243,2.666,244,2.115,258,3.569,268,3.405,372,3.449,403,3.754,603,1.876,658,4.06,661,3.478,663,2.666,664,4.414,665,2.966,666,5.064,667,5.672,668,4.87,669,2.966,670,3.42,671,4.87,672,3.42,673,4.558,674,3.42,675,3.42,676,3.42,677,3.42,678,2.666,679,2.666,680,3.42,681,3.42,682,2.966,683,3.42,684,3.42]],["title/injectables/SecuritySmsService.html",[147,1.47,658,2.272]],["body/injectables/SecuritySmsService.html",[12,0.015,21,0.108,22,0.084,23,0.072,25,0.215,29,0.23,30,0.949,31,1.222,41,2.005,42,1.913,48,0.108,49,0.201,50,0.005,51,0.008,52,0.005,59,3.161,60,0.2,62,1.073,64,0.454,65,3.383,79,2.196,85,1.804,91,1.855,96,2.523,100,1.539,101,2.723,108,1.539,112,2.543,113,0.646,115,1.419,116,2.102,117,1.164,120,2.61,121,1.827,128,1.886,129,2.48,147,1.605,151,0.504,158,2.218,159,1.605,169,2.094,180,0.877,188,3.047,191,1.222,198,1.561,205,1.311,245,1.889,246,1.659,258,3.562,262,1.483,266,2.341,267,2.474,268,3.435,284,1.566,311,3.047,328,4.421,362,2.48,372,2.8,483,1.483,519,2.474,658,2.48,660,1.222,664,4.549,666,4.678,673,4.688,679,4.966,685,2.474,686,5.111,687,3.7,688,4.267,689,2.854,690,4.084,691,2.854,692,2.854,693,2.854,694,4.267,695,4.267,696,4.267,697,2.854,698,5.672,699,4.267,700,5.672,701,5.111,702,4.267,703,2.854,704,4.267,705,5.672,706,2.854,707,3.326,708,2.854,709,2.854,710,2.854,711,2.854,712,2.854,713,2.854,714,2.854,715,2.854,716,2.854,717,2.854,718,2.854,719,2.854,720,2.854,721,4.267,722,2.854,723,2.854,724,2.854,725,2.474,726,2.854,727,2.854,728,2.854,729,2.854,730,2.854,731,2.854,732,2.854,733,2.854,734,2.854,735,2.854,736,2.854,737,2.854,738,2.854,739,2.854,740,2.854,741,2.854,742,2.854]],["title/interfaces/SocfonyConfig.html",[53,2.032,743,2.792]],["body/interfaces/SocfonyConfig.html",[12,0.015,21,0.165,22,0.128,23,0.173,25,0.146,27,4.396,29,0.218,30,1.444,45,3.335,48,0.244,50,0.008,51,0.011,52,0.008,53,2.257,55,3.101,60,0.304,61,1.1,64,0.481,65,4.254,78,3.87,79,1.444,83,3.549,85,1.186,91,1.568,128,1.444,142,3.172,180,1.334,198,1.675,225,4.473,360,4.098,372,3.172,450,3.751,633,4.098,743,4.882,744,3.385,745,6.332,746,7.109,747,7.447,748,6.426,749,5.738,750,3.766,751,3.766,752,5.329,753,3.766,754,4.343,755,4.343,756,4.343,757,4.343,758,4.343,759,3.101,760,4.343,761,4.343,762,4.343,763,4.343]],["title/classes/StringFilter.html",[49,0.275,614,2.418]],["body/classes/StringFilter.html",[12,0.015,21,0.116,22,0.09,23,0.077,25,0.267,29,0.17,31,0.585,48,0.116,49,0.214,50,0.006,51,0.008,52,0.006,60,0.213,61,0.86,62,1.391,64,0.551,93,1.51,113,0.784,117,0.585,150,0.396,151,0.539,157,0.895,183,0.396,192,1.248,193,1.656,198,1.84,207,1.485,221,2.605,351,4.866,388,2.624,389,5.412,390,5.412,391,5.412,392,5.412,393,4.608,394,1.99,404,1.758,459,1.772,614,3.86,764,2.644,765,6.242,766,5.315,767,6.242,768,5.315,769,3.049,770,4.482,771,3.049,772,3.049,773,3.049,774,3.049,775,3.049,776,3.049,777,3.049,778,5.315,779,3.049,780,3.049,781,3.049,782,4.482,783,3.049,784,3.049,785,3.049,786,3.049]],["title/classes/TencentCloudCosCredentials.html",[49,0.275,787,2.792]],["body/classes/TencentCloudCosCredentials.html",[12,0.015,21,0.163,22,0.127,23,0.109,25,0.254,29,0.216,33,2.679,41,3.732,42,3.56,48,0.163,49,0.302,50,0.008,51,0.011,52,0.008,60,0.3,61,1.092,64,0.478,66,2.67,113,0.68,150,0.557,183,0.557,192,1.083,193,1.437,198,1.637,207,1.359,208,2.553,660,2.914,787,4.066,788,3.722,789,5.549,790,3.952,791,6.737,792,5.303,793,4.209,794,4.116,795,4.292,796,4.292,797,4.292]],["title/classes/TencentCloudCosResolver.html",[49,0.275,798,2.792]],["body/classes/TencentCloudCosResolver.html",[12,0.016,21,0.113,22,0.088,23,0.133,25,0.237,29,0.246,33,2.577,41,3.513,42,3.351,45,1.734,48,0.167,49,0.21,50,0.006,51,0.008,52,0.006,60,0.209,62,0.927,64,0.56,66,1.731,79,1.928,85,1.434,92,2.728,100,1.591,101,2.541,108,1.076,113,0.617,115,2.41,116,1.817,117,1.186,120,1.807,126,1.402,127,1.637,128,1.745,129,3.894,142,1.473,145,3.365,150,0.387,159,1.122,183,0.387,192,0.889,225,2.326,228,2.92,230,2.292,236,2.564,237,3.473,238,2.92,239,1.975,245,1.975,246,1.734,370,3.825,445,1.845,452,1.845,459,1.734,461,1.845,467,1.975,596,2.131,598,3.15,603,1.637,660,2.649,725,3.825,787,4.14,789,5.238,790,4.143,793,2.728,794,3.05,798,3.15,799,2.326,800,3.439,801,5.797,802,5.248,803,2.984,804,3.585,805,2.984,806,5.248,807,2.984,808,2.984,809,3.439,810,5.027,811,2.984,812,2.984,813,6.09,814,4.519,815,2.984,816,2.984,817,2.984,818,2.984,819,3.15,820,3.825,821,3.825,822,3.825,823,3.825,824,3.825,825,3.825,826,3.825,827,3.825,828,3.825,829,2.984,830,2.984,831,2.984,832,3.439,833,4.411,834,2.984,835,2.587,836,2.984]],["title/injectables/TencentCloudCosService.html",[147,1.47,804,2.418]],["body/injectables/TencentCloudCosService.html",[12,0.015,21,0.126,22,0.098,23,0.084,25,0.188,29,0.212,30,1.105,41,3.442,42,3.283,48,0.126,49,0.234,50,0.006,51,0.009,52,0.006,59,3.995,60,0.232,62,0.843,64,0.357,79,1.587,85,1.666,91,1.837,100,1.721,101,2.638,108,1.199,113,0.688,115,2.236,116,1.652,117,1.289,120,2.755,128,1.587,147,1.794,159,1.25,169,1.954,198,1.255,245,2.2,246,1.931,284,1.823,299,2.951,431,2.951,551,3.158,603,1.823,660,2.88,687,2.881,789,5.349,790,4.158,791,4.84,792,3.986,794,3.908,804,2.951,810,4.137,814,3.719,819,3.407,835,4.137,837,2.881,838,6.1,839,4.771,840,4.137,841,5.582,842,3.323,843,3.772,844,3.323,845,3.323,846,6.724,847,4.771,848,3.323,849,3.323,850,3.323,851,3.323,852,4.771,853,4.771,854,3.323,855,3.323,856,3.323,857,4.771,858,4.771,859,4.771,860,4.771,861,4.771,862,4.771,863,4.771,864,4.771,865,4.771,866,4.771,867,4.771,868,4.771,869,4.771,870,4.771,871,4.771,872,4.771,873,4.771,874,3.323,875,3.323,876,3.323,877,3.323,878,3.323,879,3.323,880,3.323,881,3.323,882,3.323,883,3.323,884,3.323,885,3.323,886,3.323]],["title/modules/TencentCloudModule.html",[0,1.354,16,2.418]],["body/modules/TencentCloudModule.html",[0,2.526,2,2.214,3,2.326,4,2.585,5,2.585,6,2.326,7,3.474,8,3.474,12,0.015,16,4.928,18,3.32,19,2.585,20,2.448,21,0.179,22,0.139,23,0.119,25,0.159,29,0.277,30,1.567,41,2.844,42,2.712,48,0.179,49,0.331,50,0.009,51,0.011,52,0.009,660,2.018,666,3.118,690,4.904,789,3.364,794,2.738,798,4.321,804,4.904,843,4.904,887,4.085,888,4.085,889,4.085,890,4.711,891,4.711,892,4.711,893,4.711]],["title/injectables/TencentCloudSmsService.html",[147,1.47,690,2.418]],["body/injectables/TencentCloudSmsService.html",[12,0.015,21,0.15,22,0.117,23,0.101,25,0.182,29,0.25,30,1.318,41,3.096,42,2.953,48,0.15,49,0.279,50,0.007,51,0.01,52,0.007,59,3.338,60,0.277,62,0.953,64,0.404,78,2.06,79,1.318,85,1.676,91,1.474,100,1.947,101,2.407,113,0.653,115,1.795,116,1.869,117,1.035,120,2.211,121,3.116,128,2.041,147,2.029,152,3.089,169,1.624,180,1.217,198,1.599,284,2.174,327,2.536,464,2.303,478,2.805,516,5.373,660,2.821,666,5.027,679,5.672,690,3.338,790,2.451,792,4.922,832,3.089,840,4.679,894,3.436,895,4.679,896,6.137,897,4.679,898,3.963,899,5.712,900,5.712,901,3.963,902,3.963,903,7.111,904,3.963,905,3.963,906,5.397,907,3.572,908,3.572,909,3.963,910,3.963,911,3.963,912,3.854,913,3.963,914,3.963,915,3.963,916,3.963,917,3.963,918,3.963,919,3.963,920,3.963,921,1.43,922,3.436,923,3.963,924,3.963,925,3.963,926,3.963]],["title/classes/TencentCloudStsCredentials.html",[49,0.275,927,2.792]],["body/classes/TencentCloudStsCredentials.html",[12,0.015,21,0.135,22,0.105,23,0.09,25,0.256,29,0.22,41,3.75,42,3.557,48,0.19,49,0.353,50,0.007,51,0.009,52,0.007,60,0.249,61,0.961,64,0.434,66,2.878,93,1.112,113,0.617,150,0.463,157,1.158,183,0.463,191,2.147,192,0.983,193,1.304,194,3.893,198,1.69,205,1.933,207,1.411,208,2.6,372,1.759,387,3.318,394,1.466,431,3.893,542,3.908,660,2.696,793,2.203,794,3.855,800,6.248,809,3.908,907,3.318,908,3.318,927,4.495,928,2.777,929,5.029,930,5.029,931,6.257,932,3.563,933,3.563,934,3.563,935,4.347,936,4.347,937,4.347,938,4.347,939,3.089,940,4.347,941,3.089]],["title/classes/TencentCloudStsFederationToken.html",[49,0.275,793,2.418]],["body/classes/TencentCloudStsFederationToken.html",[12,0.015,21,0.132,22,0.103,23,0.088,25,0.254,29,0.217,41,3.741,42,3.537,48,0.187,49,0.347,50,0.006,51,0.009,52,0.006,60,0.243,61,0.945,62,1.206,64,0.429,66,2.678,93,1.309,113,0.609,150,0.452,157,1.143,183,0.452,191,2.667,192,0.97,193,1.287,194,4.436,198,1.64,205,1.514,207,1.402,208,2.567,372,2.434,387,4.122,394,1.726,431,3.049,542,3.843,660,2.667,793,3.049,794,3.821,800,6.234,809,4.463,907,3.263,908,3.263,927,4.448,928,2.712,929,3.017,930,3.017,931,5.4,935,4.964,936,4.274,937,4.964,938,5.4,939,4.964,940,5.4,941,4.964,942,3.479,943,3.479,944,3.479]],["title/injectables/TencentCloudStsService.html",[147,1.47,843,2.418]],["body/injectables/TencentCloudStsService.html",[12,0.015,21,0.185,22,0.144,23,0.124,25,0.208,29,0.258,30,1.622,41,2.907,42,2.773,48,0.185,49,0.343,50,0.009,51,0.012,52,0.009,60,0.341,62,0.862,64,0.365,78,2.534,79,1.622,85,1.332,100,2.231,113,0.519,115,2.057,116,1.689,117,0.935,120,2.534,121,3.226,128,1.622,147,2.326,180,1.498,198,1.527,284,2.675,327,2.292,464,2.834,478,2.534,660,2.649,790,3.016,792,5.465,794,4.152,843,3.825,895,5.363,897,5.363,899,5.363,900,5.363,907,3.228,908,3.228,912,4.417,921,1.759,922,4.228,945,4.228,946,4.876,947,5.363,948,4.876,949,4.876]],["title/classes/UpdateViewerArgs.html",[49,0.275,950,2.792]],["body/classes/UpdateViewerArgs.html",[12,0.015,21,0.169,22,0.131,23,0.113,25,0.241,29,0.247,33,1.607,48,0.169,49,0.313,50,0.008,51,0.011,52,0.008,60,0.312,61,1.119,62,1.031,64,0.487,75,4.014,91,1.217,93,1.119,113,0.621,150,0.579,166,1.431,180,2.121,183,0.579,184,2.094,192,0.989,193,1.312,198,1.463,202,3.609,207,1.299,227,3.863,230,3.033,250,3.864,258,3.369,266,3.571,268,3.408,362,4.509,373,3.474,380,2.709,382,4.648,394,1.475,447,1.825,628,4.168,649,5.383,673,4.271,950,4.168,951,5.643,952,3.864,953,5.643,954,4.931,955,4.456,956,4.456,957,3.864]],["title/classes/UserEntity.html",[49,0.275,958,2.588]],["body/classes/UserEntity.html",[12,0.015,21,0.182,22,0.141,23,0.122,25,0.253,29,0.232,48,0.182,49,0.337,50,0.009,51,0.011,52,0.009,60,0.335,61,1.173,64,0.531,93,0.919,113,0.756,117,1.173,150,0.622,157,0.957,166,1.578,183,0.622,187,3.502,191,2.886,192,1.203,193,1.596,198,1.375,204,3.689,205,2.18,208,2.742,394,1.211,447,2.506,455,4.699,483,3.179,921,2.561,958,4.049,959,4.155,960,4.773,961,4.769,962,4.155,963,4.155,964,4.155,965,3.422,966,4.155,967,4.155]],["title/classes/UserInterface.html",[49,0.275,960,2.418]],["body/classes/UserInterface.html",[12,0.015,21,0.157,22,0.122,23,0.105,25,0.258,29,0.238,31,0.795,48,0.157,49,0.292,50,0.008,51,0.01,52,0.008,53,3.264,60,0.29,61,1.067,64,0.502,93,1.067,113,0.714,117,1.287,150,0.539,151,0.733,157,1.111,166,1.601,183,0.539,191,3.087,192,1.137,193,1.509,198,1.574,204,3.826,205,2.328,207,0.828,212,4.794,268,1.86,394,1.407,403,3.684,458,3.684,483,3.264,507,3.235,921,2.656,960,3.442,961,5.233,965,4.486,968,3.597,969,4.148,970,4.148,971,4.148,972,4.148,973,3.235,974,3.597,975,2.276,976,2.411]],["title/classes/UserInterfaceResolver.html",[49,0.275,977,2.792]],["body/classes/UserInterfaceResolver.html",[12,0.015,21,0.17,22,0.132,23,0.114,25,0.22,29,0.273,45,4.023,48,0.17,49,0.315,50,0.008,51,0.011,52,0.008,53,3.597,60,0.314,62,1.035,64,0.439,79,1.949,85,1.225,100,2.114,108,1.617,113,0.624,115,1.949,116,2.029,117,1.124,120,2.4,126,2.754,128,1.491,145,3.829,150,0.582,151,0.792,159,1.686,166,1.604,183,0.582,192,0.76,207,1.17,236,3.405,238,4.32,596,3.201,598,4.184,603,2.46,921,2.657,960,3.624,973,3.405,974,3.887,977,4.184,978,5.659,979,3.887,980,4.483,981,4.362,982,4.483,983,4.483,984,4.483,985,4.483,986,4.483,987,4.483,988,4.483]],["title/modules/UserModule.html",[0,1.354,17,2.418]],["body/modules/UserModule.html",[0,2.531,2,2.228,3,2.341,4,2.601,5,2.601,6,2.341,7,3.484,8,3.484,12,0.015,14,3.515,15,4.625,17,4.932,18,3.333,19,2.601,20,2.464,21,0.18,22,0.14,23,0.12,25,0.16,28,3.531,29,0.289,30,1.577,48,0.18,49,0.333,50,0.009,51,0.011,52,0.009,166,1.339,281,3.138,291,4.613,977,4.339,989,4.111,990,4.111,991,4.111,992,4.111,993,4.95,994,4.741,995,4.741,996,4.741,997,4.741,998,4.111,999,4.339,1000,4.741]],["title/classes/UserOrderByInput.html",[49,0.275,573,2.792]],["body/classes/UserOrderByInput.html",[12,0.015,21,0.135,22,0.105,23,0.09,25,0.261,29,0.22,31,0.684,48,0.135,49,0.251,50,0.007,51,0.009,52,0.007,60,0.25,61,0.962,62,1.361,64,0.529,93,1.477,113,0.753,150,0.463,151,0.63,157,1.002,166,0.712,183,0.463,192,1.198,193,1.59,204,3.017,205,1.783,207,1.589,268,2.602,380,1.4,394,1.947,404,1.969,483,3.017,530,5.294,543,2.782,565,2.548,566,6.125,567,6.003,568,3.094,569,3.094,570,3.094,571,3.094,572,3.094,573,3.584,575,3.094,576,3.094,577,3.752,921,2.272,975,3.185,976,3.374,1001,4.498,1002,3.094,1003,3.569]],["title/classes/UserProfileEntity.html",[49,0.275,973,2.272]],["body/classes/UserProfileEntity.html",[12,0.015,21,0.138,22,0.107,23,0.092,25,0.26,29,0.138,48,0.138,49,0.256,50,0.007,51,0.01,52,0.007,60,0.255,61,0.977,64,0.519,93,1.432,113,0.738,117,1.364,150,0.473,157,1.017,166,1.596,183,0.473,187,3.051,190,3.221,191,2.181,192,1.174,193,1.558,198,1.771,205,2.129,207,1.017,208,2.283,212,4.777,394,1.888,403,3.372,450,3.488,485,4.208,921,2.723,973,3.695,1004,3.16,1005,5.545,1006,5.545,1007,5.545,1008,4.577,1009,6.357,1010,3.645,1011,3.645,1012,3.645,1013,3.645,1014,6.357,1015,3.645,1016,3.645]],["title/modules/UserProfileModule.html",[0,1.354,993,2.588]],["body/modules/UserProfileModule.html",[0,2.584,2,2.386,3,2.506,4,2.785,5,2.785,6,2.506,7,3.596,8,3.596,12,0.015,14,3.577,18,3.481,19,2.785,20,2.639,21,0.193,22,0.15,23,0.129,25,0.171,28,3.687,29,0.275,30,1.688,48,0.193,49,0.357,50,0.009,51,0.012,52,0.009,166,1.267,281,3.361,921,2.289,981,4.656,993,5.211,1017,4.402,1018,4.402,1019,5.077,1020,4.402,1021,5.077,1022,4.531,1023,5.077,1024,4.402]],["title/classes/UserProfileOrderByInput.html",[49,0.275,1001,2.792]],["body/classes/UserProfileOrderByInput.html",[12,0.015,21,0.143,22,0.111,23,0.096,25,0.26,29,0.198,31,0.723,48,0.143,49,0.265,50,0.007,51,0.01,52,0.007,60,0.264,61,1,62,1.353,64,0.524,93,1.469,113,0.745,117,1.146,150,0.489,151,0.666,157,1.041,166,0.752,183,0.489,190,3.279,192,1.187,193,1.575,207,1.584,380,1.478,394,1.936,404,2.045,530,5.269,565,2.691,566,6.165,567,5.972,921,2.64,1001,3.723,1005,4.659,1006,4.659,1007,4.659,1008,4.659,1025,5.127,1026,3.768,1027,3.768,1028,3.768,1029,3.768,1030,3.768,1031,3.768,1032,3.768]],["title/classes/UserProfileRelationFilter.html",[49,0.275,1033,2.792]],["body/classes/UserProfileRelationFilter.html",[12,0.015,21,0.189,22,0.147,23,0.126,25,0.25,29,0.26,31,0.956,48,0.189,49,0.351,50,0.009,51,0.012,52,0.009,60,0.349,61,1.203,62,1.272,64,0.47,93,1.381,113,0.668,150,0.647,151,0.881,157,1.252,166,1.252,183,0.647,192,1.063,193,1.41,207,1.37,380,2.825,388,2.461,394,1.82,404,2.461,545,3.561,552,3.561,555,4.323,557,4.323,921,2.677,1025,4.901,1033,4.48,1034,5.951,1035,5.492,1036,4.986]],["title/classes/UserProfileResolver.html",[49,0.275,1022,2.792]],["body/classes/UserProfileResolver.html",[12,0.015,21,0.145,22,0.113,23,0.097,25,0.237,29,0.274,31,1.012,48,0.145,49,0.27,50,0.007,51,0.01,52,0.007,60,0.268,62,0.932,64,0.451,79,2.161,85,1.047,91,1.047,92,3.262,100,1.903,101,2.366,108,1.903,112,3.294,113,0.561,115,1.754,116,1.827,117,1.157,120,2.161,121,2.259,123,3.376,126,3.453,127,2.894,128,1.275,142,2.604,145,3.659,150,0.498,151,0.677,158,2.741,159,1.984,166,1.467,169,2.161,183,0.498,187,3.376,190,2.103,192,0.65,202,4.213,228,2.537,230,2.741,237,3.492,239,2.537,244,2.371,266,3.957,362,4.192,380,2.069,921,2.69,957,3.324,973,3.505,981,3.776,1022,3.767,1024,3.324,1037,3.324,1038,6.497,1039,6.031,1040,3.833,1041,3.833,1042,6.031,1043,3.833,1044,4.865,1045,3.833,1046,3.833,1047,3.833,1048,3.324,1049,3.833,1050,3.833,1051,3.833]],["title/injectables/UserProfileService.html",[147,1.47,981,2.272]],["body/injectables/UserProfileService.html",[12,0.015,21,0.165,22,0.128,23,0.11,25,0.216,29,0.218,30,1.444,31,1.4,48,0.165,49,0.305,50,0.008,51,0.011,52,0.008,60,0.304,62,1.014,64,0.43,75,3.335,79,1.908,85,1.756,96,2.144,100,2.07,101,2.521,108,1.567,112,3.065,113,0.611,115,1.908,116,1.987,117,1.1,120,2.801,121,2.457,128,1.444,129,3.335,147,2.158,151,0.767,159,1.633,166,1.594,169,2.351,190,3.148,236,3.973,262,2.257,266,2.383,284,2.383,290,3.766,343,4.473,603,2.383,921,2.857,965,3.101,981,3.335,1052,3.766,1053,6.426,1054,4.343,1055,4.343,1056,6.836,1057,4.343,1058,4.343,1059,4.343]],["title/classes/UserProfileUpdateInput.html",[49,0.275,1044,2.792]],["body/classes/UserProfileUpdateInput.html",[12,0.015,21,0.207,22,0.161,23,0.139,25,0.224,29,0.271,31,1.048,48,0.207,49,0.384,50,0.01,51,0.012,52,0.01,91,1.493,150,0.709,151,0.965,157,1.325,166,1.428,183,0.709,190,2.998,362,4.156,380,2.805,404,2.805,447,2.238,507,3.858,509,5.756,627,3.902,921,2.579,973,3.176,1008,4.259,1044,4.74,1048,4.738,1060,4.738,1061,4.259,1062,5.464]],["title/classes/UserProfileWhereInput.html",[49,0.275,1035,2.792]],["body/classes/UserProfileWhereInput.html",[12,0.015,21,0.127,22,0.098,23,0.085,25,0.264,29,0.232,31,0.64,48,0.127,49,0.235,50,0.006,51,0.009,52,0.006,60,0.233,61,0.918,62,1.377,64,0.541,93,1.494,113,0.769,117,1.073,150,0.433,151,0.59,157,0.956,166,1.54,183,0.433,190,3.07,192,1.224,193,1.624,205,2.252,207,1.464,380,1.31,388,3.701,394,1.969,404,1.878,507,2.782,554,3.418,577,1.735,612,2.384,614,4.772,615,2.602,616,2.894,619,2.602,620,4.046,621,2.894,622,2.894,623,2.894,624,2.602,625,2.602,921,2.677,1005,4.362,1006,4.362,1007,4.362,1025,5.235,1035,5.299,1063,2.894,1064,2.894,1065,2.894]],["title/classes/UserRelationFilter.html",[49,0.275,620,2.588]],["body/classes/UserRelationFilter.html",[12,0.015,21,0.188,22,0.146,23,0.125,25,0.249,29,0.259,31,0.948,48,0.188,49,0.348,50,0.009,51,0.012,52,0.009,60,0.346,61,1.196,62,1.268,64,0.467,93,1.377,113,0.664,150,0.642,151,0.873,157,1.245,166,1.509,183,0.642,192,1.057,193,1.402,207,1.365,388,3.654,394,1.814,404,2.447,545,3.529,552,3.529,554,5.286,577,3.552,620,4.129,1034,5.926,1066,5.481,1067,4.942,1068,4.942,1069,4.942]],["title/classes/UserResolver.html",[49,0.275,1070,3.048]],["body/classes/UserResolver.html",[12,0.015,21,0.166,22,0.129,23,0.111,25,0.246,29,0.278,31,1.105,48,0.166,49,0.307,50,0.008,51,0.011,52,0.008,60,0.306,62,1.018,64,0.482,79,1.916,85,1.193,100,2.078,108,1.576,112,3.343,113,0.613,115,1.916,116,1.995,117,1.236,121,2.467,128,1.453,145,3.801,150,0.567,151,0.772,159,1.643,166,1.556,180,1.342,183,0.567,187,3.561,192,0.74,220,3.12,221,4.451,230,2.994,241,2.891,242,2.156,262,2.27,269,3.405,377,4.714,379,4.238,500,3.563,583,3.788,603,2.397,608,3.405,958,3.813,1070,4.49,1071,3.788,1072,4.368,1073,4.368,1074,4.368,1075,4.368,1076,4.368,1077,4.368]],["title/injectables/UserService.html",[147,1.47,291,2.272]],["body/injectables/UserService.html",[12,0.015,21,0.141,22,0.109,23,0.094,25,0.216,29,0.256,30,1.234,48,0.141,49,0.261,50,0.007,51,0.01,52,0.007,60,0.26,62,1.048,64,0.561,75,3.724,79,2.318,85,1.904,91,1.014,96,2.927,100,1.861,101,2.734,108,1.339,113,0.631,115,1.716,116,2.053,117,1.137,120,2.855,128,1.716,129,3.724,147,1.94,151,0.656,159,1.396,166,1.595,169,2.429,198,1.567,246,2.157,247,3.963,253,2.651,258,3.523,263,2.893,284,2.036,291,2.998,298,4.825,299,3.19,327,2.424,380,2.024,472,2.295,474,3.19,478,1.929,603,2.036,658,4.155,663,2.893,664,2.651,666,3.415,669,3.218,976,4.357,1078,3.218,1079,5.159,1080,5.929,1081,3.712,1082,5.159,1083,3.712,1084,5.159,1085,3.712,1086,3.712,1087,5.159,1088,3.218,1089,3.712,1090,3.712,1091,3.712,1092,3.712,1093,3.712,1094,3.712,1095,3.218,1096,3.712]],["title/classes/UserUpdateInput.html",[49,0.275,954,2.792]],["body/classes/UserUpdateInput.html",[12,0.015,21,0.188,22,0.146,23,0.125,25,0.242,29,0.259,31,0.948,48,0.188,49,0.348,50,0.009,51,0.012,52,0.009,60,0.346,61,1.196,62,1.102,64,0.37,93,1.196,113,0.526,150,0.642,151,0.873,157,1.245,166,1.532,180,2.205,183,0.642,192,0.837,193,1.111,198,1.537,204,2.568,207,1.245,209,2.568,268,2.215,362,3.973,380,2.681,394,1.577,404,2.681,447,2.024,516,4.862,577,3.242,627,4.454,628,3.529,954,4.454,975,2.711,976,4.461,1061,3.852,1097,4.942,1098,3.852,1099,4.942]],["title/classes/UserWhereInput.html",[49,0.275,1066,2.792]],["body/classes/UserWhereInput.html",[12,0.015,21,0.12,22,0.093,23,0.08,25,0.264,29,0.241,31,0.607,48,0.12,49,0.223,50,0.006,51,0.009,52,0.006,60,0.222,61,0.884,62,1.379,64,0.542,93,1.496,113,0.771,117,0.884,150,0.411,151,0.559,157,0.92,166,1.363,183,0.411,191,1.973,192,1.228,193,1.629,204,3.294,205,1.947,207,1.466,268,2.841,380,1.242,384,3.948,387,3.05,388,3.664,394,1.972,404,1.808,468,1.973,483,2.823,490,3.592,505,1.737,507,2.678,524,4.234,550,3.879,551,3.595,554,4.26,577,3.815,612,2.262,614,4.634,615,2.469,617,2.746,618,2.746,619,2.469,624,2.469,625,3.592,921,2.386,975,2.98,1002,2.746,1033,4.526,1063,2.746,1064,2.746,1065,2.746,1066,5.242,1100,3.995,1101,3.995,1102,3.167,1103,3.167,1104,4.608,1105,3.167]],["title/classes/UserWhereUniqueInput.html",[49,0.275,377,2.588]],["body/classes/UserWhereUniqueInput.html",[12,0.015,21,0.207,22,0.161,23,0.139,25,0.224,29,0.271,31,1.048,48,0.207,49,0.384,50,0.01,51,0.012,52,0.01,91,1.493,150,0.709,151,0.965,157,1.325,166,1.428,183,0.709,204,2.84,205,2.039,207,1.091,209,2.84,268,2.449,377,4.394,380,2.805,404,2.805,447,2.238,577,2.84,626,4.259,627,3.902,628,4.74,975,2.998,1098,4.259,1106,7.15,1107,5.464,1108,5.464]],["title/classes/ViewerEntity.html",[49,0.275,209,2.032]],["body/classes/ViewerEntity.html",[12,0.015,21,0.149,22,0.116,23,0.099,25,0.255,29,0.232,48,0.149,49,0.276,50,0.007,51,0.01,52,0.007,60,0.274,61,1.027,64,0.531,93,1.317,113,0.755,117,1.027,150,0.509,151,0.693,157,1.218,166,1.58,183,0.509,187,3.172,191,2.614,192,1.201,193,1.594,198,1.661,202,3.774,204,3.409,205,2.015,207,0.783,208,2.402,209,2.784,212,3.826,268,3.253,372,3.238,394,1.736,447,2.195,455,4.341,483,2.784,507,3.114,921,2.366,960,4.569,961,4.176,962,3.4,963,3.4,964,3.4,965,2.8,966,3.4,967,3.4,975,3.348,1100,5.687,1101,5.687,1109,3.4,1110,7.387,1111,6.559,1112,3.921,1113,5.687,1114,3.921]],["title/classes/ViewerResolver.html",[49,0.275,999,2.792]],["body/classes/ViewerResolver.html",[12,0.016,21,0.092,22,0.071,23,0.061,25,0.232,29,0.262,31,0.721,33,1.878,48,0.092,49,0.17,50,0.005,51,0.007,52,0.005,60,0.169,62,0.996,64,0.482,77,2.856,78,2.706,79,2.073,83,2.326,85,1.631,91,1.808,92,2.854,96,1.194,100,1.357,101,1.811,108,1.357,112,2.889,113,0.6,115,1.251,116,1.953,117,1.082,120,1.541,121,1.611,123,3.239,126,3.49,127,2.064,128,1.732,142,1.857,145,3.349,150,0.314,151,0.427,156,1.601,158,1.955,159,1.414,166,1.55,169,2.446,179,2.278,180,1.599,183,0.314,187,2.706,192,0.882,198,0.846,202,4.523,205,0.743,207,1.126,209,2.706,220,1.727,221,3.471,228,1.601,230,3.516,236,2.186,237,2.49,238,3.733,239,1.601,242,1.194,243,1.885,244,1.496,246,1.406,247,1.496,253,1.727,258,1.768,262,1.257,263,1.885,266,2.064,268,3.033,291,3.623,313,1.727,343,2.932,354,5.588,355,3.261,356,2.932,358,3.261,360,1.727,362,3.623,372,1.194,379,1.496,431,3.22,586,2.097,596,2.686,598,3.296,608,1.885,673,1.496,682,3.261,707,1.885,832,1.885,950,4.028,953,3.261,975,3.42,976,2.186,998,2.097,999,2.686,1088,2.097,1095,2.097,1098,1.885,1115,1.885,1116,4.615,1117,2.419,1118,2.419,1119,2.419,1120,2.419,1121,2.419,1122,2.419,1123,2.419,1124,2.419,1125,2.419,1126,3.761,1127,3.761,1128,2.419,1129,2.419,1130,2.419,1131,2.932,1132,2.932,1133,2.932,1134,2.419,1135,2.419,1136,2.097,1137,2.419,1138,2.419,1139,2.419,1140,2.419,1141,2.419,1142,2.419,1143,2.419,1144,2.419,1145,2.419,1146,1.885,1147,5.207,1148,2.419,1149,3.761,1150,3.761,1151,3.261,1152,2.419,1153,2.419,1154,2.419,1155,2.419,1156,2.419,1157,2.419]],["title/coverage.html",[1158,4.636]],["body/coverage.html",[6,1.132,12,0.015,23,0.058,33,1.302,34,2.232,39,1.518,44,1.788,49,0.558,50,0.004,51,0.007,52,0.004,53,2.318,54,1.788,56,3.612,64,0.172,71,1.638,72,1.638,83,4.027,92,1.419,95,1.788,97,1.638,99,1.989,111,1.333,121,0.982,123,1.192,126,1.078,147,2.298,155,1.788,156,1.518,180,0.705,182,1.638,184,3.247,185,1.989,186,1.989,205,0.705,209,1.192,213,1.638,214,1.989,227,1.518,240,1.788,241,1.518,244,1.419,285,1.989,291,1.333,298,1.518,312,1.788,313,1.638,315,1.788,316,1.788,317,1.788,318,1.788,319,1.788,320,1.638,369,1.989,373,1.788,374,1.989,377,1.518,378,2.389,384,1.518,385,1.989,386,1.989,406,1.989,443,1.333,444,3.197,448,1.333,460,1.419,465,1.333,466,1.333,470,1.333,480,1.518,481,1.989,500,1.419,504,1.638,505,3.204,506,1.989,510,1.518,515,1.989,520,1.518,528,1.638,530,2.953,536,5.99,540,1.518,550,1.638,551,1.518,552,3.186,563,1.638,565,3.186,573,1.638,577,2.858,579,1.989,599,1.788,612,3.186,614,1.419,620,1.518,626,2.813,631,1.788,636,1.788,658,1.333,660,2.711,661,1.638,664,2.577,665,1.989,678,1.788,685,1.989,690,1.419,743,1.638,744,3.477,759,1.638,764,1.989,787,1.638,788,1.989,793,1.419,798,1.638,799,1.788,804,1.419,837,1.989,843,1.419,894,1.989,912,1.638,921,1.609,927,1.638,928,2.813,945,1.989,950,1.638,951,1.989,952,1.989,954,1.638,958,1.518,959,1.989,960,1.419,968,1.989,973,1.333,977,1.638,978,1.989,979,1.989,981,1.333,999,1.638,1001,1.638,1004,1.989,1022,1.638,1025,3.186,1033,1.638,1035,1.638,1037,1.989,1044,1.638,1052,1.989,1060,1.989,1061,2.813,1066,1.638,1070,1.788,1071,1.989,1078,1.989,1109,1.989,1115,2.813,1131,1.788,1132,1.788,1133,1.788,1146,1.788,1158,1.989,1159,1.788,1160,2.294,1161,2.294,1162,8.166,1163,6.665,1164,7.947,1165,1.989,1166,5.058,1167,4.461,1168,5.298,1169,7.8,1170,6.33,1171,3.609,1172,5.892,1173,1.989,1174,2.294,1175,2.294,1176,1.989,1177,2.294,1178,1.989,1179,3.609,1180,4.769,1181,1.989,1182,1.989,1183,1.989,1184,1.989,1185,3.129,1186,2.813,1187,2.294,1188,2.294,1189,2.294,1190,2.294,1191,2.294,1192,3.609,1193,3.609,1194,2.294,1195,4.461,1196,2.294,1197,2.294,1198,1.989,1199,1.989,1200,4.461,1201,2.294,1202,3.609,1203,2.294,1204,2.813,1205,1.788,1206,2.294,1207,2.294,1208,2.294]],["title/dependencies.html",[3,2.323,1209,3.26]],["body/dependencies.html",[3,2.691,12,0.015,30,1.813,38,4.249,45,3.168,49,0.466,50,0.01,51,0.012,52,0.01,150,0.708,151,0.963,153,5.101,311,3.892,750,4.726,907,3.608,908,3.608,947,4.726,1210,7.143,1211,5.451,1212,5.451,1213,5.451,1214,5.451,1215,5.451,1216,5.451,1217,5.451,1218,5.451,1219,5.451,1220,5.451,1221,5.451,1222,5.451,1223,5.451,1224,5.451,1225,5.451,1226,5.451,1227,5.451,1228,5.451,1229,4.726,1230,5.451,1231,5.451,1232,5.451,1233,5.451,1234,5.451]],["title/miscellaneous/enumerations.html",[1235,2.016,1236,4.08]],["body/miscellaneous/enumerations.html",[12,0.015,23,0.135,50,0.01,51,0.012,52,0.01,57,4.147,60,0.372,64,0.552,67,4.039,165,3.29,166,1.062,184,2.5,194,3.29,196,3.521,247,4.039,258,2.5,298,3.521,327,3.665,444,3.092,445,3.29,446,2.919,452,3.29,454,4.323,462,3.521,660,2.278,799,4.147,813,5.663,819,3.799,820,4.613,821,4.613,822,5.663,823,5.663,824,5.663,825,5.663,826,5.663,827,5.663,828,5.663,976,3.092,1235,3.29,1236,4.613,1237,5.32,1238,6.531,1239,4.613,1240,5.32,1241,5.32,1242,5.32]],["title/miscellaneous/functions.html",[1235,2.016,1243,3.668]],["body/miscellaneous/functions.html",[6,3.414,12,0.015,23,0.148,25,0.242,27,2.767,31,0.858,33,2.352,41,2.103,42,2.006,50,0.008,51,0.011,52,0.008,56,3.195,58,3.488,59,2.767,60,0.313,62,1.301,64,0.335,66,1.755,75,2.6,76,2.961,77,2.455,78,2.325,84,3.879,115,2.169,116,2.55,117,1.412,126,3.065,128,2.169,142,2.889,166,0.893,236,2.6,298,4.316,299,2.767,327,2.103,413,5.074,450,3.21,464,2.6,471,2.767,489,5.997,500,2.767,633,4.657,636,4.561,637,3.488,660,1.916,743,3.195,744,3.488,745,5.074,751,3.879,752,4.561,753,3.879,759,4.657,790,3.619,912,4.657,976,4.36,1146,5.083,1165,5.074,1185,3.879,1186,3.488,1198,3.879,1199,3.879,1204,3.488,1205,4.561,1235,2.767,1243,3.488,1244,3.879,1245,3.879,1246,5.851,1247,5.851,1248,4.474,1249,4.474,1250,3.879,1251,4.474,1252,5.851,1253,5.851,1254,4.474,1255,4.474,1256,4.474,1257,4.474,1258,4.474,1259,3.879]],["title/index.html",[60,0.228,1260,2.826,1261,2.826]],["body/index.html",[12,0.013,22,0.165,25,0.189,27,4.168,50,0.01,51,0.013,52,0.01,119,4.857,142,3.847,590,5.843,814,4.367,1113,6.267,1159,4.367,1243,4.367,1259,4.857,1262,5.602,1263,5.602,1264,5.843,1265,5.602,1266,6.739,1267,5.602,1268,5.602,1269,5.602,1270,5.602,1271,5.602,1272,5.602,1273,5.602,1274,5.602,1275,5.602,1276,5.602,1277,5.602,1278,5.602,1279,5.602,1280,5.602,1281,5.602,1282,5.602,1283,4.857,1284,4.367,1285,4.857,1286,4.367,1287,4.857,1288,5.602]],["title/license.html",[1260,2.826,1261,2.826,1284,2.541]],["body/license.html",[12,0.011,20,2.423,22,0.177,50,0.009,51,0.011,52,0.009,94,4.685,117,0.894,153,3.329,266,2.558,551,3.978,673,2.883,707,3.634,1151,4.042,1159,3.634,1264,5.767,1283,4.042,1284,3.634,1285,4.042,1286,3.634,1287,4.042,1289,7.445,1290,4.662,1291,4.662,1292,4.662,1293,4.662,1294,4.662,1295,4.662,1296,4.662,1297,6.651,1298,6.01,1299,4.662,1300,4.662,1301,4.662,1302,6.651,1303,6.651,1304,6.651,1305,4.662,1306,6.01,1307,4.662,1308,6.01,1309,6.01,1310,6.01,1311,4.662,1312,4.662,1313,4.662,1314,4.662,1315,4.662,1316,6.01,1317,4.662,1318,6.651,1319,4.662,1320,4.662,1321,4.662,1322,4.662,1323,4.662,1324,4.662,1325,4.662,1326,4.662,1327,6.01,1328,6.01,1329,6.651,1330,6.01,1331,4.662,1332,4.662,1333,4.662,1334,4.662,1335,4.662,1336,4.662,1337,4.662,1338,4.662,1339,4.662,1340,4.662,1341,4.662,1342,4.662,1343,4.662,1344,4.662,1345,4.662,1346,4.662,1347,4.662,1348,4.662,1349,4.662,1350,4.662,1351,4.662,1352,4.662,1353,4.662,1354,4.662,1355,4.662,1356,6.01,1357,4.662,1358,4.662,1359,4.662,1360,4.662,1361,4.662,1362,4.662,1363,4.662,1364,4.662,1365,4.662,1366,4.662,1367,4.662,1368,4.662]],["title/modules.html",[2,2.513]],["body/modules.html",[1,4.093,2,2.694,11,3.794,12,0.013,13,3.794,14,2.694,15,3.545,16,3.545,17,3.545,50,0.011,51,0.013,52,0.011,993,3.794,1369,7.917,1370,7.917,1371,7.917,1372,7.981,1373,5.732,1374,5.732]],["title/overview.html",[1375,4.636]],["body/overview.html",[0,1.405,1,5.604,2,1.907,3,2.003,4,2.226,5,2.226,6,2.003,7,2.109,8,2.109,9,3.518,10,3.518,11,5.049,12,0.015,13,4.599,14,3.499,15,4.76,16,4.826,17,4.826,18,3.008,19,2.226,20,2.109,50,0.008,51,0.01,52,0.008,55,2.897,97,2.897,111,4.255,183,0.527,260,3.163,275,3.518,277,3.518,278,3.518,284,2.226,291,4.255,654,3.518,655,3.518,657,3.518,658,4.255,690,4.528,804,4.528,843,4.528,887,3.518,888,3.518,889,3.518,981,4.255,989,3.518,990,3.518,991,3.518,992,3.518,993,4.929,1017,3.518,1018,3.518,1020,3.518,1176,3.518,1286,3.163,1375,3.518,1376,4.057,1377,4.057]],["title/miscellaneous/variables.html",[1235,2.016,1378,4.08]],["body/miscellaneous/variables.html",[0,1.226,12,0.015,14,1.052,25,0.119,28,1.301,31,1.042,33,2.264,44,2.759,45,1.301,46,1.745,47,1.745,49,0.249,50,0.004,51,0.007,52,0.004,56,1.599,57,3.89,58,1.745,59,1.384,60,0.157,63,2.528,64,0.579,66,2.596,71,2.528,72,2.528,76,2.906,77,1.942,85,1.654,89,2.189,91,0.611,92,2.189,93,0.842,94,1.745,95,2.759,96,1.105,101,1.389,108,1.277,112,2.237,115,0.744,117,0.679,118,2.759,121,2.137,123,1.163,126,2.555,127,1.228,142,1.747,146,1.941,155,3.89,156,2.343,157,0.447,158,1.163,159,0.842,160,1.941,161,1.941,162,1.941,166,1.321,169,1.45,174,1.941,179,1.105,180,1.087,184,1.052,194,3.086,196,2.343,198,1.679,204,1.163,205,1.859,209,1.163,240,3.423,241,2.906,258,1.052,260,2.759,268,1.587,280,1.745,299,1.384,304,3.069,305,3.069,310,3.423,312,3.423,313,3.135,315,2.759,316,2.759,317,2.759,318,2.759,319,2.759,321,2.189,327,3.656,331,2.759,359,3.807,360,2.528,372,2.988,379,1.384,431,2.189,443,2.057,444,1.301,446,2.409,447,0.917,448,1.301,450,1.228,457,2.343,460,2.715,465,2.057,466,2.057,468,1.88,469,2.906,470,2.552,471,1.384,472,1.384,473,1.482,474,2.715,475,1.482,476,1.482,477,1.482,478,4.087,479,1.482,500,2.715,593,1.941,599,3.423,631,1.745,632,1.941,633,2.528,634,3.069,635,3.069,637,1.745,638,1.941,639,1.941,640,1.941,641,1.941,642,3.069,643,1.941,644,1.941,645,3.069,646,3.069,647,1.941,648,1.941,649,2.759,650,1.941,651,1.941,652,1.941,653,1.941,673,1.384,678,3.423,752,1.745,759,1.599,819,1.599,958,1.482,975,1.228,1115,1.745,1131,3.89,1132,3.89,1133,3.89,1136,1.941,1168,1.941,1172,1.941,1173,1.941,1178,1.941,1180,1.941,1181,4.327,1182,3.807,1183,3.807,1184,3.069,1186,1.745,1204,1.745,1205,1.745,1229,4.327,1235,1.384,1239,1.941,1244,3.069,1245,1.941,1250,1.941,1378,1.941,1379,5.436,1380,7.325,1381,2.238,1382,2.238,1383,2.238,1384,2.238,1385,6.461,1386,2.238,1387,5.436,1388,2.238,1389,2.238,1390,2.238,1391,2.238,1392,2.238,1393,2.238,1394,2.238,1395,2.238,1396,2.238,1397,2.238,1398,2.238,1399,2.238,1400,4.391,1401,2.238,1402,2.238,1403,2.238,1404,2.238,1405,2.238,1406,2.238,1407,2.238,1408,4.391,1409,2.238,1410,2.238,1411,2.238,1412,2.238,1413,2.238,1414,3.54,1415,2.238,1416,2.238,1417,2.238]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":536,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"coverage.html":{}}}],["0.1.13",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":260,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1***$2@$3",{"_index":1142,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["1****$2",{"_index":1139,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["1.10.4",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":538,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["15.5.0",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["2.0",{"_index":870,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["2.17.0",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["2.21.0",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":1291,"title":{},"body":{"license.html":{}}}],["3",{"_index":1286,"title":{},"body":{"index.html":{},"license.html":{},"overview.html":{}}}],["3.1.20",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1170,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":711,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["3000",{"_index":762,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["4.0.65",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["41",{"_index":1377,"title":{},"body":{"overview.html":{}}}],["42",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["6.6.3",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["60).tostring",{"_index":729,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["66",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1176,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["7.6.12",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["7.9.9",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["7200",{"_index":856,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["8",{"_index":1376,"title":{},"body":{"overview.html":{}}}],["8.2.0",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":860,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["_.forrootasync",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_data",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":1308,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":840,"title":{},"body":{"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{}}}],["action",{"_index":873,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["activate",{"_index":125,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["activel",{"_index":132,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["add(setting.expiredin.value",{"_index":345,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["add(setting.refreshexpiredin.value",{"_index":348,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["address",{"_index":1111,"title":{},"body":{"classes/ViewerEntity.html":{}}}],["advised",{"_index":1365,"title":{},"body":{"license.html":{}}}],["allow",{"_index":819,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["allows",{"_index":1271,"title":{},"body":{"index.html":{}}}],["allowuploadfiletype",{"_index":813,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["alphabet",{"_index":1181,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["alphabet(a",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":1313,"title":{},"body":{"license.html":{}}}],["ap",{"_index":899,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["api",{"_index":199,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["apollo",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app_guard",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":1259,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["applydecorators",{"_index":68,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":230,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/MomentResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["argstype",{"_index":382,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/UpdateViewerArgs.html":{}}}],["arising",{"_index":1362,"title":{},"body":{"license.html":{}}}],["array.isarray(token",{"_index":439,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["async",{"_index":101,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["audio",{"_index":445,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["auth",{"_index":57,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["auth_metadata_has_authorization",{"_index":71,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_metadata_has_authorization_type",{"_index":72,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_default_expired_in",{"_index":315,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_default_expired_unit",{"_index":316,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_default_refresh_expired_in",{"_index":317,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_default_refresh_expired_unit",{"_index":318,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_vvalidity_period_key",{"_index":319,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authdecoratoroptions",{"_index":54,"title":{"interfaces/AuthDecoratorOptions.html":{}},"body":{"interfaces/AuthDecoratorOptions.html":{},"coverage.html":{}}}],["authoprization",{"_index":302,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["authorization",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UpdateViewerArgs.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["authorization(options",{"_index":84,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"miscellaneous/functions.html":{}}}],["authorization(undefined",{"_index":807,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["authorization.guard",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{}}}],["authorization_token_create_user_where_allow_one",{"_index":240,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization_token_not_found",{"_index":312,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorizationguard",{"_index":39,"title":{"guards/AuthorizationGuard.html":{}},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"coverage.html":{}}}],["authorizationtoken",{"_index":165,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"miscellaneous/enumerations.html":{}}}],["authorizationtoken(@context",{"_index":256,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["authorizationtoken(context",{"_index":219,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["authorizationtoken.expiredat.gettime",{"_index":363,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["authorizationtoken.token",{"_index":366,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["authorizationtoken?.user",{"_index":429,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["authorizationtokenentity",{"_index":182,"title":{"classes/AuthorizationTokenEntity.html":{}},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"coverage.html":{}}}],["authorizationtokenentity'})@authorization({hasauthorization",{"_index":222,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["authorizationtokenentityresolver",{"_index":213,"title":{"classes/AuthorizationTokenEntityResolver.html":{}},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"coverage.html":{}}}],["authorizationtokenmodule",{"_index":11,"title":{"modules/AuthorizationTokenModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules.html":{},"overview.html":{}}}],["authorizationtokenservice",{"_index":111,"title":{"injectables/AuthorizationTokenService.html":{}},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"overview.html":{}}}],["authorizationtokenvalidityperiod",{"_index":320,"title":{"interfaces/AuthorizationTokenValidityPeriod.html":{}},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"coverage.html":{}}}],["authorizationwith",{"_index":92,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorizationwithout",{"_index":95,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authotization",{"_index":293,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["authotizationtoken",{"_index":335,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["autoschemafile",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":1374,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":1005,"title":{},"body":{"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileWhereInput.html":{}}}],["await",{"_index":169,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["base",{"_index":906,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["baseoptions",{"_index":896,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["bcrypt",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["binary",{"_index":1298,"title":{},"body":{"license.html":{}}}],["bio",{"_index":1006,"title":{},"body":{"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileWhereInput.html":{}}}],["boolean",{"_index":65,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bound",{"_index":1110,"title":{},"body":{"classes/ViewerEntity.html":{}}}],["browse",{"_index":1372,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1369,"title":{},"body":{"modules.html":{}}}],["bsd",{"_index":1285,"title":{},"body":{"index.html":{},"license.html":{}}}],["bucket",{"_index":791,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"injectables/TencentCloudCosService.html":{}}}],["bucket.split",{"_index":862,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["builds",{"_index":1265,"title":{},"body":{"index.html":{}}}],["business",{"_index":1352,"title":{},"body":{"license.html":{}}}],["by.input",{"_index":543,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{}}}],["by.input.ts",{"_index":565,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{},"coverage.html":{}}}],["by.input.ts:10",{"_index":1031,"title":{},"body":{"classes/UserProfileOrderByInput.html":{}}}],["by.input.ts:11",{"_index":571,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{}}}],["by.input.ts:16",{"_index":1029,"title":{},"body":{"classes/UserProfileOrderByInput.html":{}}}],["by.input.ts:17",{"_index":576,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{}}}],["by.input.ts:22",{"_index":1026,"title":{},"body":{"classes/UserProfileOrderByInput.html":{}}}],["by.input.ts:23",{"_index":568,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{}}}],["by.input.ts:28",{"_index":1027,"title":{},"body":{"classes/UserProfileOrderByInput.html":{}}}],["by.input.ts:29",{"_index":572,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{}}}],["by.input.ts:34",{"_index":1028,"title":{},"body":{"classes/UserProfileOrderByInput.html":{}}}],["by.input.ts:35",{"_index":569,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{}}}],["by.input.ts:40",{"_index":1030,"title":{},"body":{"classes/UserProfileOrderByInput.html":{}}}],["by.input.ts:41",{"_index":570,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{}}}],["by.input.ts:47",{"_index":575,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{}}}],["by.input.ts:53",{"_index":574,"title":{},"body":{"classes/MomentOrderByInput.html":{}}}],["byte",{"_index":1292,"title":{},"body":{"license.html":{}}}],["c",{"_index":1290,"title":{},"body":{"license.html":{}}}],["callback",{"_index":646,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["canactivate",{"_index":102,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["canactivate(context",{"_index":122,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["canactivelytokenhandler",{"_index":103,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["canactivelytokenhandler(context",{"_index":130,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["case",{"_index":474,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["caused",{"_index":1354,"title":{},"body":{"license.html":{}}}],["check",{"_index":1150,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["china",{"_index":699,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["class",{"_index":49,"title":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"classes/SecuritySmsResolver.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":183,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"classes/SecuritySmsResolver.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"overview.html":{}}}],["classprovider",{"_index":632,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["clause",{"_index":1287,"title":{},"body":{"index.html":{},"license.html":{}}}],["client",{"_index":121,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.sendsms(request",{"_index":926,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["cloud",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/SecurityModule.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"miscellaneous/functions.html":{}}}],["cloud.module.ts",{"_index":891,"title":{},"body":{"modules/TencentCloudModule.html":{}}}],["cloud/common/index.ts",{"_index":1199,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cloud/cos/cos.resolver.ts",{"_index":799,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["cloud/cos/cos.resolver.ts:43",{"_index":805,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cloud/cos/cos.resolver.ts:55",{"_index":808,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cloud/cos/cos.resolver.ts:72",{"_index":811,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cloud/cos/cos.resolver.ts:90",{"_index":816,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cloud/cos/entities/cos.entity.ts",{"_index":788,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"coverage.html":{}}}],["cloud/cos/entities/cos.entity.ts:17",{"_index":795,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{}}}],["cloud/cos/entities/cos.entity.ts:25",{"_index":796,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{}}}],["cloud/cos/entities/cos.entity.ts:33",{"_index":797,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{}}}],["cloud/cos/soc.service.ts",{"_index":837,"title":{},"body":{"injectables/TencentCloudCosService.html":{},"coverage.html":{}}}],["cloud/cos/soc.service.ts:19",{"_index":849,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/cos/soc.service.ts:29",{"_index":851,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/cos/soc.service.ts:36",{"_index":845,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/cos/soc.service.ts:64",{"_index":848,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/cos/soc.service.ts:9",{"_index":844,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/sms",{"_index":708,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["cloud/sms/sms.service.ts",{"_index":894,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"coverage.html":{}}}],["cloud/sms/sms.service.ts:14",{"_index":905,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["cloud/sms/sms.service.ts:29",{"_index":898,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["cloud/sms/sms.service.ts:45",{"_index":902,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["cloud/sts/entities/sts.entity.ts",{"_index":928,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"coverage.html":{}}}],["cloud/sts/entities/sts.entity.ts:18",{"_index":934,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{}}}],["cloud/sts/entities/sts.entity.ts:26",{"_index":932,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{}}}],["cloud/sts/entities/sts.entity.ts:34",{"_index":933,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{}}}],["cloud/sts/entities/sts.entity.ts:52",{"_index":942,"title":{},"body":{"classes/TencentCloudStsFederationToken.html":{}}}],["cloud/sts/entities/sts.entity.ts:61",{"_index":944,"title":{},"body":{"classes/TencentCloudStsFederationToken.html":{}}}],["cloud/sts/entities/sts.entity.ts:70",{"_index":943,"title":{},"body":{"classes/TencentCloudStsFederationToken.html":{}}}],["cloud/sts/sts.service.ts",{"_index":945,"title":{},"body":{"injectables/TencentCloudStsService.html":{},"coverage.html":{}}}],["cloud/sts/sts.service.ts:14",{"_index":946,"title":{},"body":{"injectables/TencentCloudStsService.html":{}}}],["cloud/tencent",{"_index":890,"title":{},"body":{"modules/TencentCloudModule.html":{}}}],["clous",{"_index":937,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authorizationtokenmodule",{"_index":275,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"overview.html":{}}}],["cluster_authorizationtokenmodule_exports",{"_index":278,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"overview.html":{}}}],["cluster_authorizationtokenmodule_imports",{"_index":276,"title":{},"body":{"modules/AuthorizationTokenModule.html":{}}}],["cluster_authorizationtokenmodule_providers",{"_index":277,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"overview.html":{}}}],["cluster_momentmodule",{"_index":560,"title":{},"body":{"modules/MomentModule.html":{}}}],["cluster_momentmodule_imports",{"_index":561,"title":{},"body":{"modules/MomentModule.html":{}}}],["cluster_securitymodule",{"_index":654,"title":{},"body":{"modules/SecurityModule.html":{},"overview.html":{}}}],["cluster_securitymodule_exports",{"_index":655,"title":{},"body":{"modules/SecurityModule.html":{},"overview.html":{}}}],["cluster_securitymodule_imports",{"_index":656,"title":{},"body":{"modules/SecurityModule.html":{}}}],["cluster_securitymodule_providers",{"_index":657,"title":{},"body":{"modules/SecurityModule.html":{},"overview.html":{}}}],["cluster_tencentcloudmodule",{"_index":887,"title":{},"body":{"modules/TencentCloudModule.html":{},"overview.html":{}}}],["cluster_tencentcloudmodule_exports",{"_index":888,"title":{},"body":{"modules/TencentCloudModule.html":{},"overview.html":{}}}],["cluster_tencentcloudmodule_providers",{"_index":889,"title":{},"body":{"modules/TencentCloudModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":989,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":991,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":990,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":992,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule",{"_index":1017,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_exports",{"_index":1020,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_imports",{"_index":1019,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["cluster_userprofilemodule_providers",{"_index":1018,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["code",{"_index":673,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/ViewerResolver.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["code'})@authorization({hasauthorization",{"_index":676,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["codes",{"_index":1136,"title":{},"body":{"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["common",{"_index":464,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"miscellaneous/functions.html":{}}}],["compare",{"_index":298,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["compare(password",{"_index":1251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["comparecode",{"_index":686,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["comparecode(phone",{"_index":692,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["compared",{"_index":354,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/ViewerResolver.html":{}}}],["comparepassword",{"_index":1079,"title":{},"body":{"injectables/UserService.html":{}}}],["comparepassword(user",{"_index":1082,"title":{},"body":{"injectables/UserService.html":{}}}],["comparesecurity",{"_index":1080,"title":{},"body":{"injectables/UserService.html":{}}}],["comparesecurity(user",{"_index":1085,"title":{},"body":{"injectables/UserService.html":{}}}],["compase",{"_index":694,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["complexity",{"_index":1276,"title":{},"body":{"index.html":{}}}],["compore",{"_index":1084,"title":{},"body":{"injectables/UserService.html":{}}}],["conditions",{"_index":1304,"title":{},"body":{"license.html":{}}}],["config",{"_index":745,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{}}}],["connect",{"_index":647,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["consequential",{"_index":1344,"title":{},"body":{"license.html":{}}}],["const",{"_index":91,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"injectables/UserService.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":156,"title":{},"body":{"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":108,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentResolver.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["constructor(authorizationtokenservice",{"_index":217,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["constructor(cosservice",{"_index":803,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["constructor(prisma",{"_index":290,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/UserProfileService.html":{}}}],["constructor(prismaclient",{"_index":583,"title":{},"body":{"classes/MomentResolver.html":{},"classes/UserResolver.html":{}}}],["constructor(private",{"_index":603,"title":{},"body":{"classes/MomentResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"classes/UserInterfaceResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["constructor(profileservice",{"_index":1040,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["constructor(reflector",{"_index":109,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["constructor(request",{"_index":411,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["constructor(securitysmsservice",{"_index":669,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/UserService.html":{}}}],["constructor(sts",{"_index":842,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["constructor(tencentcloudsmsservice",{"_index":689,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["constructor(userprofileservice",{"_index":980,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["constructor(userservice",{"_index":1117,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["contains",{"_index":765,"title":{},"body":{"classes/StringFilter.html":{}}}],["content",{"_index":482,"title":{},"body":{"classes/MomentEntity.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentWhereInput.html":{}}}],["context",{"_index":126,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["context.authorizationtoken",{"_index":257,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["context.gethandler",{"_index":164,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["context.gettype",{"_index":160,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["context.request.context",{"_index":430,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.switchtohttp().getrequest",{"_index":172,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["context.switchtohttp().getrequest().context",{"_index":162,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["context.ts",{"_index":406,"title":{},"body":{"classes/ExecutionContext.html":{},"coverage.html":{}}}],["context.ts:15",{"_index":415,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:16",{"_index":414,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:17",{"_index":416,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:24",{"_index":418,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:54",{"_index":423,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:7",{"_index":412,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:73",{"_index":421,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.user",{"_index":682,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"classes/ViewerResolver.html":{}}}],["continue",{"_index":1149,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["contract",{"_index":1357,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":1318,"title":{},"body":{"license.html":{}}}],["convert",{"_index":1145,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["copyright",{"_index":1289,"title":{},"body":{"license.html":{}}}],["core",{"_index":119,"title":{},"body":{"guards/AuthorizationGuard.html":{},"index.html":{}}}],["cos",{"_index":789,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{}}}],["cos/cos.resolver",{"_index":892,"title":{},"body":{"modules/TencentCloudModule.html":{}}}],["cosservice",{"_index":806,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cover",{"_index":449,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{}}}],["coverage",{"_index":1158,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":297,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["create",{"_index":115,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["create(prismaclient",{"_index":417,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["createauthorizationtoken",{"_index":215,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["createauthorizationtoken(args",{"_index":226,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["createauthorizationtokenargs",{"_index":227,"title":{"classes/CreateAuthorizationTokenArgs.html":{}},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/UpdateViewerArgs.html":{},"coverage.html":{}}}],["createclient",{"_index":895,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["createclient(region",{"_index":897,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["createcostemporaryreadcredential",{"_index":801,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["createcostemporarywritecredential",{"_index":802,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["createcostemporarywritecredential(type",{"_index":812,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["created",{"_index":490,"title":{},"body":{"classes/MomentEntity.html":{},"classes/MomentWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["createdat",{"_index":483,"title":{},"body":{"classes/MomentEntity.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentWhereInput.html":{},"injectables/SecuritySmsService.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserOrderByInput.html":{},"classes/UserWhereInput.html":{},"classes/ViewerEntity.html":{}}}],["createparamdecorator(function",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createsecurity",{"_index":667,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["createsecurity(phone",{"_index":672,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["createtemporaryreadcredential",{"_index":838,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["createtemporarywritecredential",{"_index":839,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["createtemporarywritecredential(name",{"_index":847,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["createtokenwithsecurity",{"_index":286,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["createtokenwithsecurity(user",{"_index":294,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["createuniontype",{"_index":457,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["createuserauthorizationtoken",{"_index":287,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["createuserauthorizationtoken(user",{"_index":300,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["createviewersecurity",{"_index":668,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["createviewersecurity(@context",{"_index":681,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["createviewersecurity(context",{"_index":675,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["creathe",{"_index":296,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["credential",{"_index":790,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"miscellaneous/functions.html":{}}}],["credential'})@authorizationwith",{"_index":815,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["credentials",{"_index":800,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["cursor",{"_index":517,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["custom",{"_index":1182,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["customalphabet('0123456789",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customalphabet('23456789qwertyupasdfghjklzxcvbnm",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customalphabet('qwertyuiopasdfghjklzxcvbnm",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customalphabet(alphabet",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damage",{"_index":1368,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1345,"title":{},"body":{"license.html":{}}}],["data",{"_index":266,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/ViewerResolver.html":{},"license.html":{}}}],["data[key",{"_index":1147,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["database",{"_index":310,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["datasources",{"_index":641,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":191,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/DateTimeFilter.html":{},"classes/MomentEntity.html":{},"classes/MomentWhereInput.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/UserWhereInput.html":{},"classes/ViewerEntity.html":{}}}],["date.now",{"_index":739,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["datetimefilter",{"_index":384,"title":{"classes/DateTimeFilter.html":{}},"body":{"classes/DateTimeFilter.html":{},"classes/MomentWhereInput.html":{},"classes/UserWhereInput.html":{},"coverage.html":{}}}],["dayjs",{"_index":311,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"injectables/SecuritySmsService.html":{},"dependencies.html":{}}}],["dayjs().add(10",{"_index":352,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["dayjs().add(options.expiredin",{"_index":719,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["days",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["decorator",{"_index":58,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":192,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/SecuritySmsResolver.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["default",{"_index":478,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":535,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["defined",{"_index":113,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["deleted",{"_index":492,"title":{},"body":{"classes/MomentEntity.html":{}}}],["deletedat",{"_index":484,"title":{},"body":{"classes/MomentEntity.html":{},"classes/MomentOrderByInput.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derived",{"_index":1322,"title":{},"body":{"license.html":{}}}],["desc",{"_index":736,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["description",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["destory",{"_index":651,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["determine",{"_index":529,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["developers",{"_index":1272,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1277,"title":{},"body":{"index.html":{}}}],["direct",{"_index":1339,"title":{},"body":{"license.html":{}}}],["disclaimed",{"_index":1335,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1310,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":652,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["distinct",{"_index":518,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["distribution",{"_index":1315,"title":{},"body":{"license.html":{}}}],["document",{"_index":1282,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1159,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["don't",{"_index":174,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["dontenvconfig",{"_index":749,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["dot",{"_index":758,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["dotenv",{"_index":750,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"dependencies.html":{}}}],["dto",{"_index":1075,"title":{},"body":{"classes/UserResolver.html":{}}}],["dto/create",{"_index":249,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["dto/moment",{"_index":600,"title":{},"body":{"classes/MomentResolver.html":{}}}],["dto/profile",{"_index":1047,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["dto/update",{"_index":1134,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["duration",{"_index":852,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["durationseconds",{"_index":865,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["e",{"_index":1100,"title":{},"body":{"classes/UserWhereInput.html":{},"classes/ViewerEntity.html":{}}}],["ecosystem",{"_index":1278,"title":{},"body":{"index.html":{}}}],["effect",{"_index":872,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["email",{"_index":975,"title":{},"body":{"classes/UserInterface.html":{},"classes/UserOrderByInput.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["email(@parent",{"_index":1140,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["email(user",{"_index":1119,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["email.replace(/^(\\w{1}).*?(\\w{1",{"_index":1141,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["encrpyted",{"_index":1253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encrypted",{"_index":1252,"title":{},"body":{"miscellaneous/functions.html":{}}}],["end",{"_index":770,"title":{},"body":{"classes/StringFilter.html":{}}}],["endorse",{"_index":1319,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":78,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"interfaces/SocfonyConfig.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{}}}],["endpoit",{"_index":80,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntity.html":{}}}],["endswith",{"_index":766,"title":{},"body":{"classes/StringFilter.html":{}}}],["entities/authorization",{"_index":251,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["entities/cos.entity",{"_index":817,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["entities/moment.entity",{"_index":602,"title":{},"body":{"classes/MomentResolver.html":{},"classes/MomentWhereUniqueInput.html":{}}}],["entities/profile.entity",{"_index":1048,"title":{},"body":{"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{}}}],["entities/user.entity",{"_index":1076,"title":{},"body":{"classes/UserResolver.html":{}}}],["entities/user.interface",{"_index":985,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["entities/user.union",{"_index":1077,"title":{},"body":{"classes/UserResolver.html":{}}}],["entities/viewer.entity",{"_index":1098,"title":{},"body":{"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerResolver.html":{}}}],["entity",{"_index":187,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentEntity.html":{},"classes/UserEntity.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["entity.'})@authorization({hasauthorization",{"_index":232,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["enum",{"_index":461,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/TencentCloudCosResolver.html":{}}}],["enumerations",{"_index":1236,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":253,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["env",{"_index":752,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["equals",{"_index":389,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/StringFilter.html":{}}}],["error",{"_index":360,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/SocfonyConfig.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["error(authorization_token_create_user_where_allow_one",{"_index":261,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["error(authorization_token_not_found",{"_index":361,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["error(constants[`user_${key.touppercase()}_field_existed",{"_index":1154,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["error(media_type_dont_supported",{"_index":479,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["error(moment_not_found",{"_index":605,"title":{},"body":{"classes/MomentResolver.html":{}}}],["error(security_compare_failed",{"_index":358,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/ViewerResolver.html":{}}}],["error(unauthorized",{"_index":181,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["error(user_not_found",{"_index":269,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentResolver.html":{},"classes/UserResolver.html":{}}}],["error(user_not_set_phone",{"_index":683,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["even",{"_index":1364,"title":{},"body":{"license.html":{}}}],["event",{"_index":1336,"title":{},"body":{"license.html":{}}}],["exection",{"_index":1127,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["execution",{"_index":127,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["executioncontext",{"_index":123,"title":{"classes/ExecutionContext.html":{}},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["executioncontext.create(prisma",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exemplary",{"_index":1343,"title":{},"body":{"license.html":{}}}],["existed",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiration",{"_index":941,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["expired",{"_index":194,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["expiredat",{"_index":188,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{}}}],["expiredat.gettime",{"_index":338,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["expiredin",{"_index":328,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"injectables/SecuritySmsService.html":{}}}],["expiredin.unit",{"_index":332,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["expiredin.value",{"_index":330,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["expiredtime",{"_index":939,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["export",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["express",{"_index":153,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/ExecutionContext.html":{},"dependencies.html":{},"license.html":{}}}],["extendcode",{"_index":917,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["extends",{"_index":447,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":96,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentFindFirstArgs.html":{},"injectables/SecuritySmsService.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["federation",{"_index":809,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["fetch",{"_index":531,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["field",{"_index":207,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["field((type",{"_index":212,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/ViewerEntity.html":{}}}],["field(undefined",{"_index":193,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/ViewerEntity.html":{}}}],["file",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["filename",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":388,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentResolver.html":{},"classes/MomentWhereInput.html":{},"classes/StringFilter.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserWhereInput.html":{}}}],["find",{"_index":378,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentResolver.html":{},"coverage.html":{}}}],["first",{"_index":533,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentResolver.html":{}}}],["first.args",{"_index":601,"title":{},"body":{"classes/MomentResolver.html":{}}}],["first.args.ts",{"_index":506,"title":{},"body":{"classes/MomentFindFirstArgs.html":{},"coverage.html":{}}}],["first.args.ts:9",{"_index":508,"title":{},"body":{"classes/MomentFindFirstArgs.html":{}}}],["fitness",{"_index":1332,"title":{},"body":{"license.html":{}}}],["fiveminutesdate",{"_index":367,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["fiveminutesdate.gettime",{"_index":364,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["flutter",{"_index":1281,"title":{},"body":{"index.html":{}}}],["following",{"_index":1303,"title":{},"body":{"license.html":{}}}],["form",{"_index":1311,"title":{},"body":{"license.html":{}}}],["forms",{"_index":1299,"title":{},"body":{"license.html":{}}}],["found",{"_index":359,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"miscellaneous/variables.html":{}}}],["friendly",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full",{"_index":1113,"title":{},"body":{"classes/ViewerEntity.html":{},"index.html":{}}}],["function",{"_index":83,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"interfaces/SocfonyConfig.html":{},"classes/ViewerResolver.html":{},"coverage.html":{}}}],["functions",{"_index":1243,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["gem",{"_index":1293,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getauthorizationtoken",{"_index":409,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["getauthorizationtoken(prismaclient",{"_index":420,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["getbaseoptions",{"_index":904,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["getconfig",{"_index":759,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getcredential",{"_index":912,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getfederationtokenresponse",{"_index":935,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["gethasauthorization",{"_index":104,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gethasauthorization(context",{"_index":134,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gethasauthorizationtype",{"_index":105,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gethasauthorizationtype(context",{"_index":137,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gethttpauthorization",{"_index":410,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["gethttpauthorization(request",{"_index":422,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["getoptions",{"_index":687,"title":{},"body":{"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{}}}],["getoptions(haschina",{"_index":696,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["gettemporarycredentialdurationseconds",{"_index":850,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["getting",{"_index":1260,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettokenexpiredin",{"_index":288,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["gif",{"_index":824,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["global",{"_index":280,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["goods",{"_index":1348,"title":{},"body":{"license.html":{}}}],["gqlcontexttype",{"_index":148,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gqlexecutioncontext",{"_index":149,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext",{"_index":161,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":1373,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["graphqlisodatetime",{"_index":403,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/MomentEntity.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{}}}],["graphqlmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gt",{"_index":390,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/StringFilter.html":{}}}],["gte",{"_index":391,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/StringFilter.html":{}}}],["guangzhou",{"_index":900,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["guard",{"_index":97,"title":{"guards/AuthorizationGuard.html":{}},"body":{"guards/AuthorizationGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":98,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["handler",{"_index":133,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["hasauthorization",{"_index":63,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"miscellaneous/variables.html":{}}}],["haschina",{"_index":698,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["hash",{"_index":1146,"title":{},"body":{"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hash(password",{"_index":1254,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hastokenexpired",{"_index":289,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["hastokenexpired(token",{"_index":306,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["hastokenexpiredtype",{"_index":67,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"miscellaneous/enumerations.html":{}}}],["hastokenexpiredtype.auth",{"_index":89,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"miscellaneous/variables.html":{}}}],["hastokenexpiredtype.refresh",{"_index":272,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["header",{"_index":424,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["headers",{"_index":434,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["headers[key",{"_index":438,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["headers[key.tolowercase",{"_index":436,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["help",{"_index":1274,"title":{},"body":{"index.html":{}}}],["helper",{"_index":1256,"title":{},"body":{"miscellaneous/functions.html":{}}}],["holder",{"_index":1316,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1326,"title":{},"body":{"license.html":{}}}],["hook",{"_index":645,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":77,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpprofile",{"_index":922,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["icontext",{"_index":146,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["icontext.create",{"_index":170,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["id",{"_index":205,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentEntity.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["idhelper",{"_index":245,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{}}}],["idhelper.alphabet(32",{"_index":864,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["idhelper.id(128",{"_index":344,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["idhelper.id(64",{"_index":267,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/SecuritySmsService.html":{}}}],["idhelper.numeral(6",{"_index":718,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["image",{"_index":462,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/enumerations.html":{}}}],["images",{"_index":467,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/TencentCloudCosResolver.html":{}}}],["implements",{"_index":157,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/DateTimeFilter.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"classes/StringFilter.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"miscellaneous/variables.html":{}}}],["implied",{"_index":1327,"title":{},"body":{"license.html":{}}}],["import",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"miscellaneous/variables.html":{}}}],["incidental",{"_index":1341,"title":{},"body":{"license.html":{}}}],["include",{"_index":442,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["including",{"_index":1329,"title":{},"body":{"license.html":{}}}],["index",{"_index":60,"title":{"index.html":{}},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":1340,"title":{},"body":{"license.html":{}}}],["info",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["inherited",{"_index":455,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentVideoMedia.html":{},"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["inique",{"_index":1106,"title":{},"body":{"classes/UserWhereUniqueInput.html":{}}}],["init",{"_index":644,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["initializecontext",{"_index":106,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["initializecontext(context",{"_index":139,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["initialzd",{"_index":141,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["inject",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":147,"title":{"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":284,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":380,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentWhereUniqueInput.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["inputtype",{"_index":404,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"classes/StringFilter.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["instanceof",{"_index":356,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/ViewerResolver.html":{}}}],["int",{"_index":542,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["interface",{"_index":53,"title":{"interfaces/AuthDecoratorOptions.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"interfaces/SocfonyConfig.html":{}},"body":{"interfaces/AuthDecoratorOptions.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"interfaces/SocfonyConfig.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"coverage.html":{}}}],["interface.resolver",{"_index":997,"title":{},"body":{"modules/UserModule.html":{}}}],["interface.resolver.ts",{"_index":979,"title":{},"body":{"classes/UserInterfaceResolver.html":{},"coverage.html":{}}}],["interface.resolver.ts:11",{"_index":982,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["interface.resolver.ts:23",{"_index":984,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["interfaces",{"_index":55,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"interfaces/SocfonyConfig.html":{},"overview.html":{}}}],["interfacetype",{"_index":458,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/UserInterface.html":{}}}],["interruption",{"_index":1353,"title":{},"body":{"license.html":{}}}],["isnot",{"_index":1034,"title":{},"body":{"classes/UserProfileRelationFilter.html":{},"classes/UserRelationFilter.html":{}}}],["iso8601",{"_index":940,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["isproduction",{"_index":746,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["item",{"_index":725,"title":{},"body":{"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{}}}],["jpg",{"_index":822,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["json.stringify",{"_index":868,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["kernel",{"_index":419,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["key",{"_index":431,"title":{},"body":{"classes/ExecutionContext.html":{},"injectables/TencentCloudCosService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["liability",{"_index":1356,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1338,"title":{},"body":{"license.html":{}}}],["license",{"_index":1284,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":1288,"title":{},"body":{"index.html":{}}}],["limited",{"_index":1330,"title":{},"body":{"license.html":{}}}],["list",{"_index":551,"title":{},"body":{"classes/MomentListRelationFilter.html":{},"injectables/TencentCloudCosService.html":{},"classes/UserWhereInput.html":{},"coverage.html":{},"license.html":{}}}],["listing",{"_index":523,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["literal",{"_index":370,"title":{},"body":{"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/TencentCloudCosResolver.html":{}}}],["load",{"_index":751,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{}}}],["loadconfig",{"_index":1165,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadconfig(path",{"_index":753,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{}}}],["location",{"_index":1007,"title":{},"body":{"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileWhereInput.html":{}}}],["logged",{"_index":201,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["logger",{"_index":633,"title":{},"body":{"modules/PrismaModule.html":{},"interfaces/SocfonyConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["logger('prisma",{"_index":639,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["logger('socfony",{"_index":754,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["logger.error(error.message",{"_index":755,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["logger.log(`loaded",{"_index":757,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["login",{"_index":204,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserOrderByInput.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"miscellaneous/variables.html":{}}}],["loss",{"_index":1350,"title":{},"body":{"license.html":{}}}],["lt",{"_index":392,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/StringFilter.html":{}}}],["lte",{"_index":351,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/DateTimeFilter.html":{},"classes/StringFilter.html":{}}}],["mail",{"_index":1101,"title":{},"body":{"classes/UserWhereInput.html":{},"classes/ViewerEntity.html":{}}}],["many.args",{"_index":511,"title":{},"body":{"classes/MomentFindFirstArgs.html":{},"classes/MomentResolver.html":{}}}],["many.args.ts",{"_index":515,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"coverage.html":{}}}],["many.args.ts:23",{"_index":541,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["many.args.ts:29",{"_index":532,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["many.args.ts:38",{"_index":525,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["many.args.ts:48",{"_index":539,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["many.args.ts:58",{"_index":537,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["many.args.ts:64",{"_index":527,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["map((item",{"_index":724,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["matches",{"_index":586,"title":{},"body":{"classes/MomentResolver.html":{},"classes/ViewerResolver.html":{}}}],["matching",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materials",{"_index":1314,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":1270,"title":{},"body":{"index.html":{}}}],["media",{"_index":446,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["media.entity",{"_index":502,"title":{},"body":{"classes/MomentEntity.html":{}}}],["media_type_dont_supported",{"_index":460,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1331,"title":{},"body":{"license.html":{}}}],["met",{"_index":1305,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":1229,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":100,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentResolver.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["middleware",{"_index":637,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mime",{"_index":821,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["minutes').todate",{"_index":353,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["miscellaneous",{"_index":1235,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":1155,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["mode",{"_index":767,"title":{},"body":{"classes/StringFilter.html":{}}}],["modification",{"_index":1300,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":468,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereUniqueInput.html":{},"classes/UserWhereInput.html":{},"miscellaneous/variables.html":{}}}],["moment.resolver",{"_index":564,"title":{},"body":{"modules/MomentModule.html":{}}}],["moment/moment.module",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["moment_not_found",{"_index":599,"title":{},"body":{"classes/MomentResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["momentaudiomedia",{"_index":443,"title":{"classes/MomentAudioMedia.html":{}},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["momententity",{"_index":480,"title":{"classes/MomentEntity.html":{}},"body":{"classes/MomentEntity.html":{},"classes/MomentResolver.html":{},"classes/MomentWhereUniqueInput.html":{},"coverage.html":{}}}],["momentfindfirst",{"_index":580,"title":{},"body":{"classes/MomentResolver.html":{}}}],["momentfindfirst(args",{"_index":585,"title":{},"body":{"classes/MomentResolver.html":{}}}],["momentfindfirstargs",{"_index":504,"title":{"classes/MomentFindFirstArgs.html":{}},"body":{"classes/MomentFindFirstArgs.html":{},"classes/MomentResolver.html":{},"coverage.html":{}}}],["momentfindmany",{"_index":581,"title":{},"body":{"classes/MomentResolver.html":{}}}],["momentfindmany(args",{"_index":588,"title":{},"body":{"classes/MomentResolver.html":{}}}],["momentfindmanyargs",{"_index":510,"title":{"classes/MomentFindManyArgs.html":{}},"body":{"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentResolver.html":{},"coverage.html":{}}}],["momentfindunique",{"_index":582,"title":{},"body":{"classes/MomentResolver.html":{}}}],["momentfindunique(where",{"_index":592,"title":{},"body":{"classes/MomentResolver.html":{}}}],["momentimagemedia",{"_index":466,"title":{"classes/MomentImageMedia.html":{}},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["momentlistrelationfilter",{"_index":550,"title":{"classes/MomentListRelationFilter.html":{}},"body":{"classes/MomentListRelationFilter.html":{},"classes/UserWhereInput.html":{},"coverage.html":{}}}],["momentmedia",{"_index":470,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["momentmediacommon",{"_index":448,"title":{"classes/MomentMediaCommon.html":{}},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["momentmediacommon:36",{"_index":456,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentVideoMedia.html":{}}}],["momentmediatype",{"_index":454,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/enumerations.html":{}}}],["momentmediatype.audio",{"_index":475,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["momentmediatype.image",{"_index":476,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["momentmediatype.video",{"_index":477,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["momentmodule",{"_index":13,"title":{"modules/MomentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MomentModule.html":{},"modules.html":{},"overview.html":{}}}],["momentorderbyinput",{"_index":528,"title":{"classes/MomentOrderByInput.html":{}},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentOrderByInput.html":{},"coverage.html":{}}}],["momentresolver",{"_index":563,"title":{"classes/MomentResolver.html":{}},"body":{"modules/MomentModule.html":{},"classes/MomentResolver.html":{},"coverage.html":{}}}],["moments",{"_index":524,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentResolver.html":{},"classes/UserWhereInput.html":{}}}],["momentscalarfieldenum",{"_index":547,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["momentvideomedia",{"_index":465,"title":{"classes/MomentVideoMedia.html":{}},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["momentwhereinput",{"_index":540,"title":{"classes/MomentWhereInput.html":{}},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentWhereInput.html":{},"coverage.html":{}}}],["momentwhereuniqueinput",{"_index":520,"title":{"classes/MomentWhereUniqueInput.html":{}},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentResolver.html":{},"classes/MomentWhereUniqueInput.html":{},"coverage.html":{}}}],["months",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":590,"title":{},"body":{"classes/MomentResolver.html":{},"index.html":{}}}],["mp3",{"_index":827,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["mp4",{"_index":825,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["mutation",{"_index":237,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{}}}],["mutation((returns",{"_index":271,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["mutation(undefined",{"_index":228,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{}}}],["n",{"_index":534,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["name",{"_index":117,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserWhereInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["name/cos:abortmultipartupload",{"_index":885,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:completemultipartupload",{"_index":884,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:getobject",{"_index":874,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:headobject",{"_index":875,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:initiatemultipartupload",{"_index":880,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:listmultipartuploads",{"_index":881,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:listparts",{"_index":882,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:optionsobject",{"_index":876,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:postobject",{"_index":879,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:putobject",{"_index":878,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:uploadpart",{"_index":883,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["names",{"_index":1317,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":325,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["namespace_name",{"_index":324,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["nanoid",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["nanoid(size",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":75,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/SecuritySmsResolver.html":{},"classes/UpdateViewerArgs.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["negligence",{"_index":1360,"title":{},"body":{"license.html":{}}}],["nestjs",{"_index":118,"title":{},"body":{"guards/AuthorizationGuard.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"modules/MomentModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":150,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"classes/SecuritySmsResolver.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["networking",{"_index":1268,"title":{},"body":{"index.html":{}}}],["new",{"_index":180,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newphonesecurity",{"_index":953,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"classes/ViewerResolver.html":{}}}],["nextjs",{"_index":136,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["nodejs",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["nodejs/tencentcloud/services/sms/v20190711/sms_client",{"_index":909,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["nodejs/tencentcloud/services/sms/v20190711/sms_models",{"_index":911,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["nodejs/tencentcloud/services/sts/v20180813/sts_client",{"_index":948,"title":{},"body":{"injectables/TencentCloudStsService.html":{}}}],["nodejs/tencentcloud/services/sts/v20180813/sts_models",{"_index":936,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["none",{"_index":553,"title":{},"body":{"classes/MomentListRelationFilter.html":{}}}],["notice",{"_index":1309,"title":{},"body":{"license.html":{}}}],["notin",{"_index":393,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/StringFilter.html":{}}}],["nullable",{"_index":394,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/StringFilter.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/ViewerEntity.html":{}}}],["number",{"_index":372,"title":{},"body":{"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/MomentFindManyArgs.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["number.parseint",{"_index":709,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["numberfilter",{"_index":1104,"title":{},"body":{"classes/UserWhereInput.html":{}}}],["numeral",{"_index":1183,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":299,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/MomentResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":832,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudSmsService.html":{},"classes/ViewerResolver.html":{}}}],["object.keys(data",{"_index":1144,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["object.keys(where).length",{"_index":259,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["objecttype",{"_index":208,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserProfileEntity.html":{},"classes/ViewerEntity.html":{}}}],["ogg",{"_index":826,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["omit",{"_index":507,"title":{},"body":{"classes/MomentFindFirstArgs.html":{},"classes/MomentWhereInput.html":{},"classes/UserInterface.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{},"classes/ViewerEntity.html":{}}}],["omittype",{"_index":509,"title":{},"body":{"classes/MomentFindFirstArgs.html":{},"classes/UserProfileUpdateInput.html":{}}}],["omittype(momentfindmanyargs",{"_index":512,"title":{},"body":{"classes/MomentFindFirstArgs.html":{}}}],["one",{"_index":593,"title":{},"body":{"classes/MomentResolver.html":{},"miscellaneous/variables.html":{}}}],["onmoduledestroy",{"_index":634,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":635,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1263,"title":{},"body":{"index.html":{}}}],["optional",{"_index":62,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentWhereInput.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":59,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.endpoint",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options.expiredin",{"_index":728,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["options.isproduction",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options.templateid",{"_index":733,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["options.veriables",{"_index":722,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["options?.hasauthorization",{"_index":87,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["options?.type",{"_index":88,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["order",{"_index":530,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{},"coverage.html":{}}}],["orderby",{"_index":519,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"injectables/SecuritySmsService.html":{}}}],["other.id",{"_index":1153,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["otherwise",{"_index":1361,"title":{},"body":{"license.html":{}}}],["out",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1375,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":485,"title":{},"body":{"classes/MomentEntity.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentWhereInput.html":{},"classes/UserProfileEntity.html":{}}}],["owner(parent",{"_index":595,"title":{},"body":{"classes/MomentResolver.html":{}}}],["ownerid",{"_index":486,"title":{},"body":{"classes/MomentEntity.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentWhereInput.html":{}}}],["package",{"_index":1209,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":79,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentResolver.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["param.hasauthorization",{"_index":81,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["param.type",{"_index":82,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["parameters",{"_index":116,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentResolver.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":903,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["paramsset",{"_index":721,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["parent",{"_index":238,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"classes/ViewerResolver.html":{}}}],["parent.ownerid",{"_index":609,"title":{},"body":{"classes/MomentResolver.html":{}}}],["partialtype",{"_index":627,"title":{},"body":{"classes/MomentWhereUniqueInput.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["partialtype(picktype(momententity",{"_index":629,"title":{},"body":{"classes/MomentWhereUniqueInput.html":{}}}],["partialtype(userprofileentity",{"_index":1062,"title":{},"body":{"classes/UserProfileUpdateInput.html":{}}}],["partialtype(viewerentity",{"_index":1107,"title":{},"body":{"classes/UserWhereUniqueInput.html":{}}}],["particular",{"_index":1333,"title":{},"body":{"license.html":{}}}],["password",{"_index":976,"title":{},"body":{"classes/UserInterface.html":{},"classes/UserOrderByInput.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerResolver.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["passwordhelper",{"_index":1088,"title":{},"body":{"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["passwordhelper.compare(password",{"_index":1090,"title":{},"body":{"injectables/UserService.html":{}}}],["passwordhelper.hash(data[key",{"_index":1148,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["path",{"_index":450,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"interfaces/SocfonyConfig.html":{},"classes/UserProfileEntity.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["period",{"_index":305,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":1325,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1301,"title":{},"body":{"license.html":{}}}],["phone",{"_index":268,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserInterface.html":{},"classes/UserOrderByInput.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["phone(@parent",{"_index":1137,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["phone(user",{"_index":1121,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["phone.replace(/(.*)\\d{4}(\\d{4",{"_index":1138,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["phone.startswith('+86",{"_index":716,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["phonenumberset",{"_index":732,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["pick",{"_index":516,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"injectables/TencentCloudSmsService.html":{},"classes/UserUpdateInput.html":{}}}],["picktype",{"_index":628,"title":{},"body":{"classes/MomentWhereUniqueInput.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["picktype(viewerentity",{"_index":1099,"title":{},"body":{"classes/UserUpdateInput.html":{}}}],["platform",{"_index":1266,"title":{},"body":{"index.html":{}}}],["playground",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugin",{"_index":1269,"title":{},"body":{"index.html":{}}}],["png",{"_index":823,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["policy",{"_index":867,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["port",{"_index":747,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["position",{"_index":522,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["possibility",{"_index":1366,"title":{},"body":{"license.html":{}}}],["prifle",{"_index":1038,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["prior",{"_index":1324,"title":{},"body":{"license.html":{}}}],["prisma",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"classes/StringFilter.html":{},"classes/UserInterface.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma.authorizationtokengetpayload",{"_index":211,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{}}}],["prisma.datetimefilter",{"_index":405,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["prisma.jsonvalue",{"_index":495,"title":{},"body":{"classes/MomentEntity.html":{}}}],["prisma.middleware",{"_index":1257,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prisma.momentgetpayload",{"_index":503,"title":{},"body":{"classes/MomentEntity.html":{}}}],["prisma.momentlistrelationfilter",{"_index":558,"title":{},"body":{"classes/MomentListRelationFilter.html":{}}}],["prisma.momentorderbyinput",{"_index":578,"title":{},"body":{"classes/MomentOrderByInput.html":{}}}],["prisma.momentscalarfieldenum",{"_index":526,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["prisma.momentwhereuniqueinput",{"_index":630,"title":{},"body":{"classes/MomentWhereUniqueInput.html":{}}}],["prisma.querymode",{"_index":778,"title":{},"body":{"classes/StringFilter.html":{}}}],["prisma.sortorder",{"_index":566,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{}}}],["prisma.stringfilter",{"_index":786,"title":{},"body":{"classes/StringFilter.html":{}}}],["prisma.usergetpayload",{"_index":1056,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["prisma.userorderbyinput",{"_index":1003,"title":{},"body":{"classes/UserOrderByInput.html":{}}}],["prisma.userprofileorderbyinput",{"_index":1032,"title":{},"body":{"classes/UserProfileOrderByInput.html":{}}}],["prisma.userprofilerelationfilter",{"_index":1036,"title":{},"body":{"classes/UserProfileRelationFilter.html":{}}}],["prisma.userrelationfilter",{"_index":1069,"title":{},"body":{"classes/UserRelationFilter.html":{}}}],["prisma.userwhereuniqueinput",{"_index":1108,"title":{},"body":{"classes/UserWhereUniqueInput.html":{}}}],["prisma/client",{"_index":151,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"classes/StringFilter.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":112,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentResolver.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["prismaclient.authorizationtoken.findunique",{"_index":441,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["prismaloggermiddleware",{"_index":636,"title":{},"body":{"modules/PrismaModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["prismaloggermiddleware(logger",{"_index":1255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prismamodule",{"_index":14,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":158,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["process.argv",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.client_graphql_endpoint",{"_index":763,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["process.env.client_server_port",{"_index":761,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["process.env.database_url",{"_index":643,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":760,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["process.env.tencent_cloud_cos_bucket",{"_index":854,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["process.env.tencent_cloud_cos_region",{"_index":855,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["process.env.tencent_cloud_sms_app_id",{"_index":914,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["process.env.tencent_cloud_sms_china_template_id",{"_index":712,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_china_veriables",{"_index":713,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_expired_in",{"_index":710,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_extend_code",{"_index":918,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["process.env.tencent_cloud_sms_other_template_id",{"_index":714,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_other_veriables",{"_index":715,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_sender_id",{"_index":920,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["process.env.tencent_cloud_sms_sign",{"_index":916,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["process.exit(1",{"_index":756,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["procurement",{"_index":1346,"title":{},"body":{"license.html":{}}}],["production",{"_index":748,"title":{},"body":{"interfaces/SocfonyConfig.html":{}}}],["products",{"_index":1321,"title":{},"body":{"license.html":{}}}],["profile",{"_index":921,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{},"classes/ViewerEntity.html":{},"coverage.html":{}}}],["profile'})@authorizationwith",{"_index":1045,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["profile(@parent",{"_index":987,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["profile(user",{"_index":983,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["profile.resolver",{"_index":1023,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["profile.service",{"_index":1024,"title":{},"body":{"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{}}}],["profile.userid",{"_index":1051,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["profile/dto/user",{"_index":1002,"title":{},"body":{"classes/UserOrderByInput.html":{},"classes/UserWhereInput.html":{}}}],["profile/entities/profile.entity",{"_index":974,"title":{},"body":{"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{}}}],["profile/profile.module",{"_index":996,"title":{},"body":{"modules/UserModule.html":{}}}],["profile/profile.service",{"_index":986,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["profileservice",{"_index":1042,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["profits",{"_index":1351,"title":{},"body":{"license.html":{}}}],["project",{"_index":1279,"title":{},"body":{"index.html":{}}}],["promise",{"_index":129,"title":{},"body":{"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{}}}],["promote",{"_index":1320,"title":{},"body":{"license.html":{}}}],["properties",{"_index":61,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntity.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/ViewerEntity.html":{}}}],["provide",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1302,"title":{},"body":{"license.html":{}}}],["provider",{"_index":638,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["public",{"_index":407,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["purpose",{"_index":1334,"title":{},"body":{"license.html":{}}}],["qcs::cos:${region}:uid/${uid}:${bucket",{"_index":877,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["qcs::cos:${region}:uid/${uid}:${bucket}/${name",{"_index":886,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["query",{"_index":221,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentResolver.html":{},"classes/StringFilter.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["query(undefined",{"_index":220,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentResolver.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["querymode",{"_index":785,"title":{},"body":{"classes/StringFilter.html":{}}}],["read",{"_index":810,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{}}}],["readability",{"_index":1184,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["readability(23456789qwertyupasdfghjklzxcvbnm",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":159,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/MomentResolver.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["real",{"_index":1258,"title":{},"body":{"miscellaneous/functions.html":{}}}],["redistribution",{"_index":1296,"title":{},"body":{"license.html":{}}}],["redistributions",{"_index":1306,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":110,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["refresh",{"_index":196,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["refreshauthorizationtoken",{"_index":216,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{}}}],["refreshauthorizationtoken(@context",{"_index":273,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["refreshauthorizationtoken(authorizationtoken",{"_index":308,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["refreshauthorizationtoken(context",{"_index":231,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["refreshexpiredat",{"_index":189,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{}}}],["refreshexpiredin",{"_index":329,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{}}}],["refreshexpiredin.unit",{"_index":334,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["refreshexpiredin.value",{"_index":333,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["region",{"_index":792,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["register",{"_index":829,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["registered",{"_index":961,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/ViewerEntity.html":{}}}],["registerenumtype",{"_index":459,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosResolver.html":{}}}],["registerenumtype(allowuploadfiletype",{"_index":831,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["registerenumtype(momentmediatype",{"_index":463,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{}}}],["registerenumtype(prisma.momentscalarfieldenum",{"_index":546,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["registerenumtype(prisma.querymode",{"_index":784,"title":{},"body":{"classes/StringFilter.html":{}}}],["rejectonnotfound",{"_index":262,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["relation",{"_index":554,"title":{},"body":{"classes/MomentListRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserWhereInput.html":{}}}],["relation.filter",{"_index":625,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["relation.filter.ts",{"_index":552,"title":{},"body":{"classes/MomentListRelationFilter.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserRelationFilter.html":{},"coverage.html":{}}}],["relation.filter.ts:12",{"_index":555,"title":{},"body":{"classes/MomentListRelationFilter.html":{},"classes/UserProfileRelationFilter.html":{}}}],["relation.filter.ts:13",{"_index":1067,"title":{},"body":{"classes/UserRelationFilter.html":{}}}],["relation.filter.ts:18",{"_index":557,"title":{},"body":{"classes/MomentListRelationFilter.html":{},"classes/UserProfileRelationFilter.html":{}}}],["relation.filter.ts:19",{"_index":1068,"title":{},"body":{"classes/UserRelationFilter.html":{}}}],["relation.filter.ts:24",{"_index":556,"title":{},"body":{"classes/MomentListRelationFilter.html":{}}}],["replace('#code",{"_index":726,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["replace('#expired",{"_index":727,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["reproduce",{"_index":1312,"title":{},"body":{"license.html":{}}}],["req",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":152,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/ExecutionContext.html":{},"injectables/TencentCloudSmsService.html":{}}}],["request.context",{"_index":426,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["request.context.authorizationtoken?.token",{"_index":427,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["request.header",{"_index":432,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["request.header(key",{"_index":433,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["request.headers",{"_index":435,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["reserved",{"_index":1295,"title":{},"body":{"license.html":{}}}],["reset",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["resolve",{"_index":236,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"injectables/UserProfileService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{}}}],["resolvecontext",{"_index":107,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["resolvecontext(context",{"_index":143,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["resolvefield",{"_index":598,"title":{},"body":{"classes/MomentResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"classes/ViewerResolver.html":{}}}],["resolvefield(undefined",{"_index":596,"title":{},"body":{"classes/MomentResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"classes/ViewerResolver.html":{}}}],["resolveprofile",{"_index":1053,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["resolveprofile(user",{"_index":1055,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["resolver",{"_index":145,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["resolvers",{"_index":893,"title":{},"body":{"modules/TencentCloudModule.html":{}}}],["resolvetype",{"_index":1205,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["resolvetype(value",{"_index":471,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["resource",{"_index":835,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{}}}],["result",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1307,"title":{},"body":{"license.html":{}}}],["return",{"_index":85,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":128,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/MomentResolver.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1294,"title":{},"body":{"license.html":{}}}],["root",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["runner",{"_index":225,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{}}}],["rxjs",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["scalar",{"_index":548,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["schema",{"_index":830,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["schema.graphql",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scofony",{"_index":1126,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["sdk",{"_index":908,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"dependencies.html":{}}}],["seconds",{"_index":853,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["seconds').todate",{"_index":720,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["secrect",{"_index":931,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["secuity",{"_index":1087,"title":{},"body":{"injectables/UserService.html":{}}}],["secure",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["security",{"_index":258,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["security.expiredat.gettime",{"_index":738,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["security.id",{"_index":741,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["security.usedat",{"_index":737,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["security/security.module",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["security_compare_failed",{"_index":313,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["securitymodule",{"_index":15,"title":{"modules/SecurityModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SecurityModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["securitysmscode",{"_index":705,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["securitysmsresolver",{"_index":661,"title":{"classes/SecuritySmsResolver.html":{}},"body":{"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"coverage.html":{}}}],["securitysmsservice",{"_index":658,"title":{"injectables/SecuritySmsService.html":{}},"body":{"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["secyrity",{"_index":671,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["send",{"_index":679,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudSmsService.html":{}}}],["send(params",{"_index":901,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["send(phone",{"_index":702,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["senderid",{"_index":919,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["sendsmsrequest",{"_index":910,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["sent",{"_index":695,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["server",{"_index":947,"title":{},"body":{"injectables/TencentCloudStsService.html":{},"dependencies.html":{}}}],["service",{"_index":120,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["services",{"_index":1349,"title":{},"body":{"license.html":{}}}],["set",{"_index":649,"title":{},"body":{"modules/PrismaModule.html":{},"classes/UpdateViewerArgs.html":{},"miscellaneous/variables.html":{}}}],["setmetadata",{"_index":69,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["setmetadata(auth_metadata_has_authorization",{"_index":86,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["sets",{"_index":521,"title":{},"body":{"classes/MomentFindManyArgs.html":{}}}],["setting",{"_index":322,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["setting.expiredin.unit",{"_index":346,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["setting.refreshexpiredin.unit",{"_index":349,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["shall",{"_index":1337,"title":{},"body":{"license.html":{}}}],["sign",{"_index":915,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["size",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skip",{"_index":513,"title":{},"body":{"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{}}}],["sms",{"_index":666,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/UserService.html":{}}}],["sms.resolver",{"_index":662,"title":{},"body":{"modules/SecurityModule.html":{}}}],["sms.resolver.ts",{"_index":665,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"coverage.html":{}}}],["sms.resolver.ts:13",{"_index":670,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["sms.resolver.ts:27",{"_index":674,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["sms.resolver.ts:47",{"_index":677,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["sms.service",{"_index":663,"title":{},"body":{"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/UserService.html":{}}}],["sms.service.ts",{"_index":685,"title":{},"body":{"injectables/SecuritySmsService.html":{},"coverage.html":{}}}],["sms.service.ts:11",{"_index":691,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.service.ts:113",{"_index":706,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.service.ts:26",{"_index":697,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.service.ts:49",{"_index":703,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.service.ts:85",{"_index":693,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.tencentcloudapi.com",{"_index":923,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["sms_code",{"_index":1242,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["smssdkappid",{"_index":913,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["soc.service",{"_index":818,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["socfony",{"_index":142,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"interfaces/SocfonyConfig.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["socfonyconfig",{"_index":743,"title":{"interfaces/SocfonyConfig.html":{}},"body":{"interfaces/SocfonyConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["social",{"_index":1267,"title":{},"body":{"index.html":{}}}],["software",{"_index":1264,"title":{},"body":{"index.html":{},"license.html":{}}}],["solve",{"_index":1275,"title":{},"body":{"index.html":{}}}],["sort",{"_index":567,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{}}}],["sortschema",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"modules/MomentModule.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"index.html":{},"license.html":{}}}],["special",{"_index":1342,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1323,"title":{},"body":{"license.html":{}}}],["split",{"_index":723,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["src/.../app.config.ts",{"_index":1247,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../authorization.decorator.ts",{"_index":1244,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../context.decorator.ts",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cos.resolver.ts",{"_index":1237,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../enums.ts",{"_index":1238,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../graphql.module.ts",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../id.helper.ts",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1248,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.middleware.ts",{"_index":1249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":1245,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../media.entity.ts",{"_index":1239,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../password.helper.ts",{"_index":1246,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prisma.module.ts",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.union.ts",{"_index":1250,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../viewer.resolver.ts",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.config.ts",{"_index":744,"title":{},"body":{"interfaces/SocfonyConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["src/authorization",{"_index":184,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/SecuritySmsResolver.html":{},"classes/UpdateViewerArgs.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/authorization.decorator",{"_index":239,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{}}}],["src/authorization.decorator.ts",{"_index":56,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/authorization.guard.ts",{"_index":99,"title":{},"body":{"guards/AuthorizationGuard.html":{},"coverage.html":{}}}],["src/authorization.guard.ts:101",{"_index":124,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:19",{"_index":114,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:36",{"_index":144,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:48",{"_index":135,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:59",{"_index":138,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:71",{"_index":131,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:88",{"_index":140,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/constants",{"_index":242,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["src/constants.ts",{"_index":1172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/context.decorator",{"_index":243,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/ViewerResolver.html":{}}}],["src/context.decorator.ts",{"_index":1173,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/execution",{"_index":244,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"coverage.html":{}}}],["src/graphql",{"_index":624,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["src/graphql/filters/date",{"_index":385,"title":{},"body":{"classes/DateTimeFilter.html":{},"coverage.html":{}}}],["src/graphql/filters/string.filter.ts",{"_index":764,"title":{},"body":{"classes/StringFilter.html":{},"coverage.html":{}}}],["src/graphql/filters/string.filter.ts:16",{"_index":772,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:19",{"_index":775,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:22",{"_index":781,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:25",{"_index":776,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:28",{"_index":777,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:31",{"_index":773,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:34",{"_index":774,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:37",{"_index":769,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:40",{"_index":783,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:43",{"_index":771,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:46",{"_index":779,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/filters/string.filter.ts:49",{"_index":780,"title":{},"body":{"classes/StringFilter.html":{}}}],["src/graphql/graphql.module.ts",{"_index":1178,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/helper",{"_index":246,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["src/helper/id.helper.ts",{"_index":1180,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/helper/password.helper.ts",{"_index":1185,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/main.ts",{"_index":1186,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/moment/dto/moment",{"_index":505,"title":{},"body":{"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentWhereInput.html":{},"classes/MomentWhereUniqueInput.html":{},"classes/UserWhereInput.html":{},"coverage.html":{}}}],["src/moment/entities/media.entity.ts",{"_index":444,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/moment/entities/media.entity.ts:36",{"_index":559,"title":{},"body":{"classes/MomentMediaCommon.html":{}}}],["src/moment/entities/media.entity.ts:51",{"_index":610,"title":{},"body":{"classes/MomentVideoMedia.html":{}}}],["src/moment/entities/media.entity.ts:57",{"_index":611,"title":{},"body":{"classes/MomentVideoMedia.html":{}}}],["src/moment/entities/media.entity.ts:72",{"_index":453,"title":{},"body":{"classes/MomentAudioMedia.html":{}}}],["src/moment/entities/media.entity.ts:78",{"_index":451,"title":{},"body":{"classes/MomentAudioMedia.html":{}}}],["src/moment/entities/media.entity.ts:90",{"_index":549,"title":{},"body":{"classes/MomentImageMedia.html":{}}}],["src/moment/entities/moment.entity.ts",{"_index":481,"title":{},"body":{"classes/MomentEntity.html":{},"coverage.html":{}}}],["src/moment/entities/moment.entity.ts:23",{"_index":494,"title":{},"body":{"classes/MomentEntity.html":{}}}],["src/moment/entities/moment.entity.ts:29",{"_index":499,"title":{},"body":{"classes/MomentEntity.html":{}}}],["src/moment/entities/moment.entity.ts:35",{"_index":488,"title":{},"body":{"classes/MomentEntity.html":{}}}],["src/moment/entities/moment.entity.ts:41",{"_index":496,"title":{},"body":{"classes/MomentEntity.html":{}}}],["src/moment/entities/moment.entity.ts:47",{"_index":491,"title":{},"body":{"classes/MomentEntity.html":{}}}],["src/moment/entities/moment.entity.ts:53",{"_index":493,"title":{},"body":{"classes/MomentEntity.html":{}}}],["src/moment/entities/moment.entity.ts:59",{"_index":498,"title":{},"body":{"classes/MomentEntity.html":{}}}],["src/moment/entities/moment.entity.ts:65",{"_index":497,"title":{},"body":{"classes/MomentEntity.html":{}}}],["src/moment/moment.module.ts",{"_index":562,"title":{},"body":{"modules/MomentModule.html":{}}}],["src/moment/moment.resolver.ts",{"_index":579,"title":{},"body":{"classes/MomentResolver.html":{},"coverage.html":{}}}],["src/moment/moment.resolver.ts:11",{"_index":584,"title":{},"body":{"classes/MomentResolver.html":{}}}],["src/moment/moment.resolver.ts:21",{"_index":594,"title":{},"body":{"classes/MomentResolver.html":{}}}],["src/moment/moment.resolver.ts:42",{"_index":591,"title":{},"body":{"classes/MomentResolver.html":{}}}],["src/moment/moment.resolver.ts:56",{"_index":587,"title":{},"body":{"classes/MomentResolver.html":{}}}],["src/moment/moment.resolver.ts:67",{"_index":597,"title":{},"body":{"classes/MomentResolver.html":{}}}],["src/prisma",{"_index":281,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{}}}],["src/prisma/middleware/logger.middleware.ts",{"_index":1198,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":631,"title":{},"body":{"modules/PrismaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/security/security",{"_index":664,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/security/security.module",{"_index":995,"title":{},"body":{"modules/UserModule.html":{}}}],["src/security/security.module.ts",{"_index":659,"title":{},"body":{"modules/SecurityModule.html":{}}}],["src/tencent",{"_index":660,"title":{},"body":{"modules/SecurityModule.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/user/dto",{"_index":383,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["src/user/dto/update",{"_index":951,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"coverage.html":{}}}],["src/user/dto/user",{"_index":577,"title":{},"body":{"classes/MomentOrderByInput.html":{},"classes/MomentWhereInput.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts",{"_index":959,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["src/user/entities/user.interface.ts",{"_index":968,"title":{},"body":{"classes/UserInterface.html":{},"coverage.html":{}}}],["src/user/entities/user.interface.ts:28",{"_index":970,"title":{},"body":{"classes/UserInterface.html":{}}}],["src/user/entities/user.interface.ts:37",{"_index":971,"title":{},"body":{"classes/UserInterface.html":{}}}],["src/user/entities/user.interface.ts:45",{"_index":969,"title":{},"body":{"classes/UserInterface.html":{}}}],["src/user/entities/user.interface.ts:53",{"_index":972,"title":{},"body":{"classes/UserInterface.html":{}}}],["src/user/entities/user.union",{"_index":501,"title":{},"body":{"classes/MomentEntity.html":{},"classes/MomentResolver.html":{}}}],["src/user/entities/user.union.ts",{"_index":1204,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/user/entities/viewer.entity",{"_index":210,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{}}}],["src/user/entities/viewer.entity.ts",{"_index":1109,"title":{},"body":{"classes/ViewerEntity.html":{},"coverage.html":{}}}],["src/user/entities/viewer.entity.ts:22",{"_index":1112,"title":{},"body":{"classes/ViewerEntity.html":{}}}],["src/user/entities/viewer.entity.ts:31",{"_index":1114,"title":{},"body":{"classes/ViewerEntity.html":{}}}],["src/user/enums",{"_index":248,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{}}}],["src/user/enums.ts",{"_index":1241,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/user/profile/dto/profile",{"_index":1060,"title":{},"body":{"classes/UserProfileUpdateInput.html":{},"coverage.html":{}}}],["src/user/profile/dto/user",{"_index":1025,"title":{},"body":{"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"coverage.html":{}}}],["src/user/profile/entities/profile.entity.ts",{"_index":1004,"title":{},"body":{"classes/UserProfileEntity.html":{},"coverage.html":{}}}],["src/user/profile/entities/profile.entity.ts:16",{"_index":1016,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:25",{"_index":1013,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:34",{"_index":1010,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:43",{"_index":1011,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:52",{"_index":1012,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:61",{"_index":1015,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/profile.module.ts",{"_index":1021,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["src/user/profile/profile.resolver.ts",{"_index":1037,"title":{},"body":{"classes/UserProfileResolver.html":{},"coverage.html":{}}}],["src/user/profile/profile.resolver.ts:13",{"_index":1041,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["src/user/profile/profile.resolver.ts:33",{"_index":1046,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["src/user/profile/profile.service.ts",{"_index":1052,"title":{},"body":{"injectables/UserProfileService.html":{},"coverage.html":{}}}],["src/user/profile/profile.service.ts:19",{"_index":1057,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["src/user/profile/profile.service.ts:8",{"_index":1054,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["src/user/user",{"_index":978,"title":{},"body":{"classes/UserInterfaceResolver.html":{},"coverage.html":{}}}],["src/user/user.module",{"_index":282,"title":{},"body":{"modules/AuthorizationTokenModule.html":{}}}],["src/user/user.module.ts",{"_index":994,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.resolver.ts",{"_index":1071,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["src/user/user.resolver.ts:12",{"_index":1072,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.resolver.ts:26",{"_index":1074,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.service",{"_index":314,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["src/user/user.service.ts",{"_index":1078,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:11",{"_index":1081,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":1083,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:34",{"_index":1086,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/viewer.resolver.ts",{"_index":1115,"title":{},"body":{"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/viewer.resolver.ts:38",{"_index":1118,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["src/user/viewer.resolver.ts:54",{"_index":1122,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["src/user/viewer.resolver.ts:68",{"_index":1120,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["src/user/viewer.resolver.ts:85",{"_index":1130,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["src/user/viewer.resolver.ts:98",{"_index":1125,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["stack",{"_index":1262,"title":{},"body":{"index.html":{}}}],["started",{"_index":1261,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":782,"title":{},"body":{"classes/StringFilter.html":{}}}],["startswith",{"_index":768,"title":{},"body":{"classes/StringFilter.html":{}}}],["statement",{"_index":871,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["statements",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":408,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["status",{"_index":1280,"title":{},"body":{"index.html":{}}}],["storage",{"_index":1009,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["strict",{"_index":1358,"title":{},"body":{"license.html":{}}}],["string",{"_index":198,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["stringfilter",{"_index":614,"title":{"classes/StringFilter.html":{}},"body":{"classes/MomentWhereInput.html":{},"classes/StringFilter.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{},"coverage.html":{}}}],["sts",{"_index":794,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{}}}],["sts.tencentcloudapi.com",{"_index":949,"title":{},"body":{"injectables/TencentCloudStsService.html":{}}}],["stsclient",{"_index":858,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["stsclient.getfederationtoken",{"_index":863,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["substitute",{"_index":1347,"title":{},"body":{"license.html":{}}}],["such",{"_index":1367,"title":{},"body":{"license.html":{}}}],["super",{"_index":640,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":1370,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":1371,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":472,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["system",{"_index":326,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["table",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1207,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":514,"title":{},"body":{"classes/MomentFindFirstArgs.html":{},"classes/MomentFindManyArgs.html":{}}}],["teams",{"_index":1273,"title":{},"body":{"index.html":{}}}],["templateid",{"_index":700,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["templateparamset",{"_index":734,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["temporary",{"_index":846,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["temporarycredentialdurationseconds",{"_index":841,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["tencent",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"miscellaneous/functions.html":{}}}],["tencentcloud",{"_index":907,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"dependencies.html":{}}}],["tencentcloudcoscredentials",{"_index":787,"title":{"classes/TencentCloudCosCredentials.html":{}},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"coverage.html":{}}}],["tencentcloudcosresolver",{"_index":798,"title":{"classes/TencentCloudCosResolver.html":{}},"body":{"classes/TencentCloudCosResolver.html":{},"modules/TencentCloudModule.html":{},"coverage.html":{}}}],["tencentcloudcosservice",{"_index":804,"title":{"injectables/TencentCloudCosService.html":{}},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"coverage.html":{},"overview.html":{}}}],["tencentcloudmodule",{"_index":16,"title":{"modules/TencentCloudModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules.html":{},"overview.html":{}}}],["tencentcloudsmsservice",{"_index":690,"title":{"injectables/TencentCloudSmsService.html":{}},"body":{"injectables/SecuritySmsService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"coverage.html":{},"overview.html":{}}}],["tencentcloudstscredentials",{"_index":927,"title":{"classes/TencentCloudStsCredentials.html":{}},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"coverage.html":{}}}],["tencentcloudstsfederationtoken",{"_index":793,"title":{"classes/TencentCloudStsFederationToken.html":{}},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"coverage.html":{}}}],["tencentcloudstsservice",{"_index":843,"title":{"injectables/TencentCloudStsService.html":{}},"body":{"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudStsService.html":{},"coverage.html":{},"overview.html":{}}}],["text",{"_index":489,"title":{},"body":{"classes/MomentEntity.html":{},"miscellaneous/functions.html":{}}}],["theory",{"_index":1355,"title":{},"body":{"license.html":{}}}],["this.$connect",{"_index":648,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["this.$disconnect",{"_index":653,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["this.$use(prismaloggermiddleware(this.logger",{"_index":650,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["this.authorizationtokenservice.createtokenwithsecurity",{"_index":270,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["this.authorizationtokenservice.hastokenexpired",{"_index":168,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.authorizationtokenservice.refreshauthorizationtoken",{"_index":274,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["this.baseoptions",{"_index":925,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["this.canactivelytokenhandler(context",{"_index":178,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.comparepassword(user",{"_index":1093,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cosservice.createtemporaryreadcredential",{"_index":834,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["this.cosservice.createtemporarywritecredential(idhelper.id(64",{"_index":836,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["this.cosservice.options",{"_index":833,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["this.createclient(region",{"_index":924,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["this.createsecurity(phone",{"_index":684,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["this.createuserauthorizationtoken(authorizationtoken.userid",{"_index":368,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.createuserauthorizationtoken(user",{"_index":357,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.getauthorizationtoken",{"_index":428,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["this.gethasauthorization(context",{"_index":176,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.gethasauthorizationtype(context",{"_index":177,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.gethttpauthorization(request",{"_index":425,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["this.getoptions(haschina",{"_index":717,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.gettokenexpiredin",{"_index":339,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.initializecontext(context",{"_index":173,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.options",{"_index":857,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["this.prisma.$transaction",{"_index":340,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.authorizationtoken.create",{"_index":341,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.authorizationtoken.deletemany",{"_index":350,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.authorizationtoken.update",{"_index":365,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.securitysmscode.create",{"_index":730,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.prisma.securitysmscode.findfirst",{"_index":735,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.prisma.securitysmscode.update",{"_index":740,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.prisma.setting.findunique",{"_index":323,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.user.create",{"_index":265,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["this.prisma.user.findunique",{"_index":254,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["this.prisma.userprofile.create",{"_index":1059,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["this.prisma.userprofile.findunique",{"_index":1058,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["this.prismaclient",{"_index":171,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.prismaclient.moment.findfirst(args",{"_index":607,"title":{},"body":{"classes/MomentResolver.html":{}}}],["this.prismaclient.moment.findmany(args",{"_index":606,"title":{},"body":{"classes/MomentResolver.html":{}}}],["this.prismaclient.moment.findunique",{"_index":604,"title":{},"body":{"classes/MomentResolver.html":{}}}],["this.prismaclient.user.findunique",{"_index":608,"title":{},"body":{"classes/MomentResolver.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["this.prismaclient.user.update",{"_index":1157,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["this.prismaclient.userprofile.update",{"_index":1050,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["this.profileservice.resolveprofile(context.user",{"_index":1049,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["this.reflector.get",{"_index":163,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.resolvecontext(context",{"_index":167,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.securitysmsservice.comparecode",{"_index":1094,"title":{},"body":{"injectables/UserService.html":{}}}],["this.securitysmsservice.send(phone",{"_index":680,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["this.securitysmsservice.updatecodetoused(value",{"_index":1096,"title":{},"body":{"injectables/UserService.html":{}}}],["this.sts.createclient(region",{"_index":859,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["this.temporarycredentialdurationseconds",{"_index":866,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["this.tencentcloudsmsservice.send",{"_index":731,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.userprofileservice.resolveprofile(user",{"_index":988,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["this.userservice.comparesecurity",{"_index":355,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/ViewerResolver.html":{}}}],["throw",{"_index":179,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/SecuritySmsResolver.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":387,"title":{},"body":{"classes/DateTimeFilter.html":{},"classes/MomentWhereInput.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserWhereInput.html":{}}}],["time.filter.ts",{"_index":386,"title":{},"body":{"classes/DateTimeFilter.html":{},"coverage.html":{}}}],["time.filter.ts:15",{"_index":395,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["time.filter.ts:18",{"_index":398,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["time.filter.ts:24",{"_index":402,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["time.filter.ts:27",{"_index":399,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["time.filter.ts:30",{"_index":400,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["time.filter.ts:33",{"_index":396,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["time.filter.ts:36",{"_index":397,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["time.filter.ts:39",{"_index":401,"title":{},"body":{"classes/DateTimeFilter.html":{}}}],["title",{"_index":487,"title":{},"body":{"classes/MomentEntity.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentWhereInput.html":{}}}],["tmpsecretid",{"_index":929,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["tmpsecretkey",{"_index":930,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["todate",{"_index":347,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token",{"_index":66,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["token.args",{"_index":250,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/UpdateViewerArgs.html":{}}}],["token.args.ts",{"_index":374,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"coverage.html":{}}}],["token.args.ts:16",{"_index":381,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["token.args.ts:24",{"_index":376,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["token.args.ts:32",{"_index":375,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["token.entity",{"_index":252,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.entity.ts",{"_index":186,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"coverage.html":{}}}],["token.entity.ts:23",{"_index":206,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.entity.ts:31",{"_index":203,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.entity.ts:39",{"_index":200,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.entity.ts:47",{"_index":195,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.entity.ts:55",{"_index":197,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.expiredat",{"_index":336,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.length",{"_index":437,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["token.module",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["token.module.ts",{"_index":279,"title":{},"body":{"modules/AuthorizationTokenModule.html":{}}}],["token.pop",{"_index":440,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["token.refreshexpiredat",{"_index":337,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.resolver",{"_index":283,"title":{},"body":{"modules/AuthorizationTokenModule.html":{}}}],["token.resolver.ts",{"_index":214,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"coverage.html":{}}}],["token.resolver.ts:127",{"_index":233,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.resolver.ts:29",{"_index":218,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.resolver.ts:45",{"_index":235,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.resolver.ts:72",{"_index":224,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.resolver.ts:83",{"_index":229,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.service",{"_index":154,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{}}}],["token.service.ts",{"_index":285,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{}}}],["token.service.ts:121",{"_index":295,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:145",{"_index":309,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:25",{"_index":292,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:39",{"_index":303,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:69",{"_index":307,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:86",{"_index":301,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.userid",{"_index":255,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token/authorization",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"coverage.html":{}}}],["token/constants",{"_index":73,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{}}}],["token/constants.ts",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["token/dto/create",{"_index":373,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/UpdateViewerArgs.html":{},"coverage.html":{}}}],["token/entities/authorization",{"_index":185,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"coverage.html":{}}}],["token/enums",{"_index":74,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/SecuritySmsResolver.html":{}}}],["token/enums.ts",{"_index":1240,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["token/types.ts",{"_index":369,"title":{},"body":{"interfaces/AuthorizationTokenValidityPeriod.html":{},"coverage.html":{}}}],["tort",{"_index":1359,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":93,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/SecuritySmsResolver.html":{},"classes/StringFilter.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/ViewerEntity.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":64,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/DateTimeFilter.html":{},"classes/ExecutionContext.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentEntity.html":{},"classes/MomentFindManyArgs.html":{},"classes/MomentImageMedia.html":{},"classes/MomentListRelationFilter.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentOrderByInput.html":{},"classes/MomentResolver.html":{},"classes/MomentVideoMedia.html":{},"classes/MomentWhereInput.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"interfaces/SocfonyConfig.html":{},"classes/StringFilter.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":342,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["types",{"_index":321,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["uid",{"_index":861,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["unauthorized",{"_index":155,"title":{},"body":{"guards/AuthorizationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":223,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{}}}],["union",{"_index":469,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":379,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/MomentResolver.html":{},"classes/MomentWhereUniqueInput.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["unique.input",{"_index":544,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentResolver.html":{}}}],["unique.input.ts",{"_index":626,"title":{},"body":{"classes/MomentWhereUniqueInput.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{}}}],["unit",{"_index":331,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"miscellaneous/variables.html":{}}}],["unittype",{"_index":371,"title":{},"body":{"interfaces/AuthorizationTokenValidityPeriod.html":{}}}],["unix",{"_index":938,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["unknown",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update",{"_index":362,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerResolver.html":{}}}],["update.input",{"_index":957,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{}}}],["update.input.ts",{"_index":1061,"title":{},"body":{"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"coverage.html":{}}}],["update.input.ts:25",{"_index":1097,"title":{},"body":{"classes/UserUpdateInput.html":{}}}],["updatecodetoused",{"_index":688,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["updatecodetoused(security",{"_index":704,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["updated",{"_index":1014,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["updatedat",{"_index":1008,"title":{},"body":{"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileUpdateInput.html":{}}}],["updateviewer",{"_index":1116,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["updateviewer(context",{"_index":1123,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["updateviewerargs",{"_index":950,"title":{"classes/UpdateViewerArgs.html":{}},"body":{"classes/UpdateViewerArgs.html":{},"classes/ViewerResolver.html":{},"coverage.html":{}}}],["updateviewerprofile",{"_index":1039,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["updateviewerprofile(context",{"_index":1043,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["upload",{"_index":820,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["url",{"_index":642,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":1297,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":707,"title":{},"body":{"injectables/SecuritySmsService.html":{},"classes/ViewerResolver.html":{},"license.html":{}}}],["usedat",{"_index":742,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["usefactory(prisma",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":70,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["useguards(authorizationguard",{"_index":90,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["user",{"_index":166,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/MomentEntity.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserOrderByInput.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["user(token",{"_index":234,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["user(where",{"_index":1073,"title":{},"body":{"classes/UserResolver.html":{}}}],["user.'})@authorizationwith",{"_index":1129,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["user.id",{"_index":343,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/UserProfileService.html":{},"classes/ViewerResolver.html":{}}}],["user.interface",{"_index":967,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["user.password",{"_index":1091,"title":{},"body":{"injectables/UserService.html":{}}}],["user.phone",{"_index":1095,"title":{},"body":{"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["user.service",{"_index":998,"title":{},"body":{"modules/UserModule.html":{},"classes/ViewerResolver.html":{}}}],["user/user.module",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["user?.password",{"_index":1089,"title":{},"body":{"injectables/UserService.html":{}}}],["user_email_field_existed",{"_index":1131,"title":{},"body":{"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_login_field_existed",{"_index":1132,"title":{},"body":{"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_not_found",{"_index":241,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/MomentResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_not_set_phone",{"_index":678,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_phone_field_existed",{"_index":1133,"title":{},"body":{"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userentity",{"_index":958,"title":{"classes/UserEntity.html":{}},"body":{"classes/UserEntity.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":190,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileOrderByInput.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserProfileWhereInput.html":{}}}],["userinterface",{"_index":960,"title":{"classes/UserInterface.html":{}},"body":{"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/ViewerEntity.html":{},"coverage.html":{}}}],["userinterface:28",{"_index":963,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["userinterface:37",{"_index":964,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["userinterface:45",{"_index":962,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["userinterface:53",{"_index":966,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["userinterfaceresolver",{"_index":977,"title":{"classes/UserInterfaceResolver.html":{}},"body":{"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":17,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userorderbyinput",{"_index":573,"title":{"classes/UserOrderByInput.html":{}},"body":{"classes/MomentOrderByInput.html":{},"classes/UserOrderByInput.html":{},"coverage.html":{}}}],["userprofile",{"_index":965,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserInterface.html":{},"injectables/UserProfileService.html":{},"classes/ViewerEntity.html":{}}}],["userprofileentity",{"_index":973,"title":{"classes/UserProfileEntity.html":{}},"body":{"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"coverage.html":{}}}],["userprofilemodule",{"_index":993,"title":{"modules/UserProfileModule.html":{}},"body":{"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["userprofileorderbyinput",{"_index":1001,"title":{"classes/UserProfileOrderByInput.html":{}},"body":{"classes/UserOrderByInput.html":{},"classes/UserProfileOrderByInput.html":{},"coverage.html":{}}}],["userprofilerelationfilter",{"_index":1033,"title":{"classes/UserProfileRelationFilter.html":{}},"body":{"classes/UserProfileRelationFilter.html":{},"classes/UserWhereInput.html":{},"coverage.html":{}}}],["userprofileresolver",{"_index":1022,"title":{"classes/UserProfileResolver.html":{}},"body":{"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"coverage.html":{}}}],["userprofileservice",{"_index":981,"title":{"injectables/UserProfileService.html":{}},"body":{"classes/UserInterfaceResolver.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["userprofileupdateinput",{"_index":1044,"title":{"classes/UserProfileUpdateInput.html":{}},"body":{"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"coverage.html":{}}}],["userprofilewhereinput",{"_index":1035,"title":{"classes/UserProfileWhereInput.html":{}},"body":{"classes/UserProfileRelationFilter.html":{},"classes/UserProfileWhereInput.html":{},"coverage.html":{}}}],["userrelationfilter",{"_index":620,"title":{"classes/UserRelationFilter.html":{}},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserRelationFilter.html":{},"coverage.html":{}}}],["userresolver",{"_index":1070,"title":{"classes/UserResolver.html":{}},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["users",{"_index":1152,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["usersecuritycomparetype",{"_index":247,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/enumerations.html":{}}}],["usersecuritycomparetype.password",{"_index":1092,"title":{},"body":{"injectables/UserService.html":{}}}],["usersecuritycomparetype.sms_code",{"_index":263,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["userservice",{"_index":291,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthorizationTokenService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"overview.html":{}}}],["userunion",{"_index":500,"title":{},"body":{"classes/MomentEntity.html":{},"classes/MomentResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["userupdateinput",{"_index":954,"title":{"classes/UserUpdateInput.html":{}},"body":{"classes/UpdateViewerArgs.html":{},"classes/UserUpdateInput.html":{},"coverage.html":{}}}],["userwhereinput",{"_index":1066,"title":{"classes/UserWhereInput.html":{}},"body":{"classes/UserRelationFilter.html":{},"classes/UserWhereInput.html":{},"coverage.html":{}}}],["userwhereuniqueinput",{"_index":377,"title":{"classes/UserWhereUniqueInput.html":{}},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/UserResolver.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{}}}],["validate",{"_index":76,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["validity",{"_index":304,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":327,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/MomentFindFirstArgs.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value?.type",{"_index":473,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1378,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veriables",{"_index":701,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["verification",{"_index":1156,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["verified",{"_index":175,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["version",{"_index":869,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["video",{"_index":452,"title":{},"body":{"classes/MomentAudioMedia.html":{},"classes/MomentImageMedia.html":{},"classes/MomentMediaCommon.html":{},"classes/MomentVideoMedia.html":{},"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["viewer",{"_index":202,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/SecuritySmsResolver.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["viewer'})@authorizationwith",{"_index":1124,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["viewer(@context",{"_index":1143,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["viewer(context",{"_index":1128,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["viewer.args",{"_index":1135,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["viewer.args.ts",{"_index":952,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"coverage.html":{}}}],["viewer.args.ts:20",{"_index":955,"title":{},"body":{"classes/UpdateViewerArgs.html":{}}}],["viewer.args.ts:29",{"_index":956,"title":{},"body":{"classes/UpdateViewerArgs.html":{}}}],["viewer.resolver",{"_index":1000,"title":{},"body":{"modules/UserModule.html":{}}}],["viewerentity",{"_index":209,"title":{"classes/ViewerEntity.html":{}},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["viewerresolver",{"_index":999,"title":{"classes/ViewerResolver.html":{}},"body":{"modules/UserModule.html":{},"classes/ViewerResolver.html":{},"coverage.html":{}}}],["warranties",{"_index":1328,"title":{},"body":{"license.html":{}}}],["wav",{"_index":828,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["way",{"_index":1363,"title":{},"body":{"license.html":{}}}],["where.input",{"_index":545,"title":{},"body":{"classes/MomentFindManyArgs.html":{},"classes/MomentListRelationFilter.html":{},"classes/UserProfileRelationFilter.html":{},"classes/UserRelationFilter.html":{}}}],["where.input.ts",{"_index":612,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{},"coverage.html":{}}}],["where.input.ts:10",{"_index":613,"title":{},"body":{"classes/MomentWhereInput.html":{}}}],["where.input.ts:13",{"_index":619,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["where.input.ts:16",{"_index":618,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["where.input.ts:19",{"_index":1065,"title":{},"body":{"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["where.input.ts:22",{"_index":617,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["where.input.ts:25",{"_index":623,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{}}}],["where.input.ts:28",{"_index":615,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["where.input.ts:31",{"_index":1102,"title":{},"body":{"classes/UserWhereInput.html":{}}}],["where.input.ts:34",{"_index":616,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{}}}],["where.input.ts:37",{"_index":1064,"title":{},"body":{"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["where.input.ts:40",{"_index":622,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{}}}],["where.input.ts:43",{"_index":1063,"title":{},"body":{"classes/UserProfileWhereInput.html":{},"classes/UserWhereInput.html":{}}}],["where.input.ts:46",{"_index":621,"title":{},"body":{"classes/MomentWhereInput.html":{},"classes/UserProfileWhereInput.html":{}}}],["where.input.ts:49",{"_index":1105,"title":{},"body":{"classes/UserWhereInput.html":{}}}],["where.input.ts:55",{"_index":1103,"title":{},"body":{"classes/UserWhereInput.html":{}}}],["where.phone",{"_index":264,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["whether",{"_index":1151,"title":{},"body":{"classes/ViewerResolver.html":{},"license.html":{}}}],["without",{"_index":94,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["write",{"_index":814,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"index.html":{}}}],["written",{"_index":1283,"title":{},"body":{"index.html":{},"license.html":{}}}],["yes",{"_index":413,"title":{},"body":{"classes/ExecutionContext.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zero",{"_index":589,"title":{},"body":{"classes/MomentResolver.html":{}}}],["zoom",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/MomentModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthorizationTokenModule\n\nAuthorizationTokenModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorizationTokenModule->AppModule\n\n\n\n\n\nMomentModule\n\nMomentModule\n\nAppModule -->\n\nMomentModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSecurityModule\n\nSecurityModule\n\nAppModule -->\n\nSecurityModule->AppModule\n\n\n\n\n\nTencentCloudModule\n\nTencentCloudModule\n\nAppModule -->\n\nTencentCloudModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Root app module.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthorizationTokenModule\n                        \n                        \n                            MomentModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SecurityModule\n                        \n                        \n                            TencentCloudModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from './prisma';\nimport { SecurityModule } from './security/security.module';\nimport { AuthorizationTokenModule } from './authorization-token/authorization-token.module';\nimport { UserModule } from './user/user.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AuthorizationGuard } from './authorization.guard';\nimport { TencentCloudModule } from './tencent-cloud';\nimport { MomentModule } from './moment/moment.module';\nimport { GraphQLModule } from './graphql';\n\n/**\n * Root app module.\n */\n@Module({\n  imports: [\n    PrismaModule,\n    GraphQLModule,\n    AuthorizationTokenModule,\n    UserModule,\n    SecurityModule,\n    TencentCloudModule,\n    MomentModule,\n  ],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: AuthorizationGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthDecoratorOptions.html":{"url":"interfaces/AuthDecoratorOptions.html","title":"interface - AuthDecoratorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthDecoratorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization.decorator.ts\n        \n\n            \n                Description\n            \n            \n                Auth Decorator Options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        hasAuthorization\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasAuthorization\n                                    \n                                \n                                \n                                    \n                                        hasAuthorization:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Has authorization token\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         HasTokenExpiredType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HasTokenExpiredType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Has authorization token type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { applyDecorators, SetMetadata, UseGuards } from '@nestjs/common';\nimport {\n  AUTH_METADATA_HAS_AUTHORIZATION,\n  AUTH_METADATA_HAS_AUTHORIZATION_TYPE,\n} from './authorization-token/constants';\nimport { HasTokenExpiredType } from './authorization-token/enums';\nimport { AuthorizationGuard } from './authorization.guard';\n\n/**\n * Auth Decorator Options.\n */\nexport interface AuthDecoratorOptions {\n  /**\n   * Has authorization token\n   */\n  hasAuthorization?: boolean;\n\n  /**\n   * Has authorization token type.\n   */\n  type?: HasTokenExpiredType;\n}\n\n/**\n * Need validate HTTP endpoint `Authorization` token decorator.\n * @param param validate HTTP endpoit `Authorization` token options.\n * @param param.hasAuthorization Has need validate\n * @param param.type validate token type.\n */\nexport function Authorization(options?: AuthDecoratorOptions) {\n  return applyDecorators(\n    SetMetadata(AUTH_METADATA_HAS_AUTHORIZATION, options?.hasAuthorization),\n    SetMetadata(\n      AUTH_METADATA_HAS_AUTHORIZATION_TYPE,\n      options?.type || HasTokenExpiredType.AUTH,\n    ),\n    UseGuards(AuthorizationGuard),\n  );\n}\n\n/**\n * Http auth validate token.\n */\nexport const AuthorizationWith = () =>\n  Authorization({\n    hasAuthorization: true,\n    type: HasTokenExpiredType.AUTH,\n  });\n\n/**\n * Http auth, without validate token.\n */\nexport const AuthorizationWithout = () =>\n  Authorization({\n    hasAuthorization: false,\n    type: HasTokenExpiredType.AUTH,\n  });\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthorizationGuard.html":{"url":"guards/AuthorizationGuard.html","title":"guard - AuthorizationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthorizationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/authorization.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Authorization guard.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                canActivelyTokenHandler\n                            \n                            \n                                getHasAuthorization\n                            \n                            \n                                getHasAuthorizationType\n                            \n                            \n                                    Async\n                                initializeContext\n                            \n                            \n                                resolveContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, authorizationTokenService: AuthorizationTokenService, prismaClient: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/authorization.guard.ts:19\n                            \n                        \n\n                \n                    \n                            Create Authorization guard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                NestJS core reflector.\n\n                                                        \n                                                \n                                                \n                                                        authorizationTokenService\n                                                  \n                                                        \n                                                                        AuthorizationTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Authorization token service.\n\n                                                        \n                                                \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma Client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:101\n                \n            \n\n\n            \n                \n                    Can activate guard.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NestJS execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivelyTokenHandler\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivelyTokenHandler(context: ExecutionContext, type: HasTokenExpiredType)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:71\n                \n            \n\n\n            \n                \n                    Can activel token handler.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NestJS execution context\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                HasTokenExpiredType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token validate type.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHasAuthorization\n                        \n                        \n                    \n                \n            \n            \n                \ngetHasAuthorization(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:48\n                \n            \n\n\n            \n                \n                    Get token has need validate.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NextJS execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHasAuthorizationType\n                        \n                        \n                    \n                \n            \n            \n                \ngetHasAuthorizationType(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:59\n                \n            \n\n\n            \n                \n                    Get token validate type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NestJS execution context\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            initializeContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeContext(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:88\n                \n            \n\n\n            \n                \n                    Initialzd Socfony execution context.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NestJS execution context\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveContext\n                        \n                        \n                    \n                \n            \n            \n                \nresolveContext(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:36\n                \n            \n\n\n            \n                \n                    Resolver context.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        NestJS execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IContext\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { GqlContextType, GqlExecutionContext } from '@nestjs/graphql';\nimport { PrismaClient } from '@prisma/client';\nimport { Request } from 'express';\nimport { AuthorizationTokenService } from './authorization-token/authorization-token.service';\nimport {\n  AUTH_METADATA_HAS_AUTHORIZATION,\n  AUTH_METADATA_HAS_AUTHORIZATION_TYPE,\n} from './authorization-token/constants';\nimport { HasTokenExpiredType } from './authorization-token/enums';\nimport { UNAUTHORIZED } from './constants';\nimport { ExecutionContext as IContext } from './execution-context';\n\n/**\n * Authorization guard.\n */\n@Injectable()\nexport class AuthorizationGuard implements CanActivate {\n  /**\n   * Create Authorization guard.\n   * @param reflector NestJS core reflector.\n   * @param authorizationTokenService Authorization token service.\n   * @param prismaClient Prisma Client.\n   */\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly authorizationTokenService: AuthorizationTokenService,\n    private readonly prismaClient: PrismaClient,\n  ) {}\n\n  /**\n   * Resolver context.\n   * @param context NestJS execution context.\n   */\n  resolveContext(context: ExecutionContext): IContext {\n    if (context.getType() === 'graphql') {\n      return GqlExecutionContext.create(context).getContext();\n    }\n\n    return context.switchToHttp().getRequest().context;\n  }\n\n  /**\n   * Get token has need validate.\n   * @param context NextJS execution context.\n   */\n  getHasAuthorization(context: ExecutionContext) {\n    return this.reflector.get(\n      AUTH_METADATA_HAS_AUTHORIZATION,\n      context.getHandler(),\n    );\n  }\n\n  /**\n   * Get token validate type.\n   * @param context NestJS execution context\n   */\n  getHasAuthorizationType(context: ExecutionContext) {\n    return this.reflector.get(\n      AUTH_METADATA_HAS_AUTHORIZATION_TYPE,\n      context.getHandler(),\n    );\n  }\n\n  /**\n   * Can activel token handler.\n   * @param context NestJS execution context\n   * @param type Token validate type.\n   */\n  canActivelyTokenHandler(\n    context: ExecutionContext,\n    type: HasTokenExpiredType,\n  ): boolean {\n    const { authorizationToken, user } = this.resolveContext(context);\n    const has = !this.authorizationTokenService.hasTokenExpired(\n      authorizationToken,\n      type,\n    );\n\n    return user && has;\n  }\n\n  /**\n   * Initialzd Socfony execution context.\n   * @param context NestJS execution context\n   */\n  async initializeContext(context: ExecutionContext) {\n    if (context.getType() === 'http') {\n      return await IContext.create(\n        this.prismaClient,\n        context.switchToHttp().getRequest(),\n      );\n    }\n  }\n\n  /**\n   * Can activate guard.\n   * @param context NestJS execution context.\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    await this.initializeContext(context);\n\n    // If Don't validate or verified\n    if (!this.getHasAuthorization(context)) return true;\n\n    // get `Authorization` token validate type\n    const type = this.getHasAuthorizationType(context);\n\n    if (\n      !this.canActivelyTokenHandler(context, type || HasTokenExpiredType.AUTH)\n    ) {\n      throw new Error(UNAUTHORIZED);\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthorizationTokenEntity.html":{"url":"classes/AuthorizationTokenEntity.html","title":"class - AuthorizationTokenEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthorizationTokenEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/entities/authorization-token.entity.ts\n        \n\n            \n                Description\n            \n            \n                HTTP endpoint authorization entity.\n\n            \n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expiredAt\n                            \n                            \n                                refreshExpiredAt\n                            \n                            \n                                token\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiredAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Token expired date'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:47\n                            \n                        \n\n                \n                    \n                        Token expired date.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshExpiredAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Token on refresh expired date'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:55\n                            \n                        \n\n                \n                    \n                        Token on refresh expired date.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User API endpoit authorization token.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:39\n                            \n                        \n\n                \n                    \n                        User API endpoit authorization token.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Logged Viewer entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:31\n                            \n                        \n\n                \n                    \n                        Logged User\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Login user ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:23\n                            \n                        \n\n                \n                    \n                        Logged user id.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ID, ObjectType } from '@nestjs/graphql';\nimport { Prisma, User } from '@prisma/client';\nimport { ViewerEntity } from 'src/user/entities/viewer.entity';\n/**\n * HTTP endpoint authorization entity.\n */\n@ObjectType({\n  description: 'HTTP endpoint authorization entity.',\n})\nexport class AuthorizationTokenEntity\n  implements\n    Prisma.AuthorizationTokenGetPayload {\n  /**\n   * Logged user id.\n   */\n  @Field((type) => ID, {\n    description: 'Login user ID',\n  })\n  userId: string;\n\n  /**\n   * Logged User\n   */\n  @Field((type) => ViewerEntity, {\n    description: 'Logged Viewer entity',\n  })\n  user: User;\n\n  /**\n   * User API endpoit authorization token.\n   */\n  @Field((type) => String, {\n    description: 'User API endpoit authorization token.',\n  })\n  token: string;\n\n  /**\n   * Token expired date.\n   */\n  @Field((type) => Date, {\n    description: 'Token expired date',\n  })\n  expiredAt: Date;\n\n  /**\n   * Token on refresh expired date.\n   */\n  @Field((type) => Date, {\n    description: 'Token on refresh expired date',\n  })\n  refreshExpiredAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthorizationTokenEntityResolver.html":{"url":"classes/AuthorizationTokenEntityResolver.html","title":"class - AuthorizationTokenEntityResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthorizationTokenEntityResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/authorization-token.resolver.ts\n        \n\n            \n                Description\n            \n            \n                AuthorizationTokenEntity resolver.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorizationToken\n                            \n                            \n                                    Async\n                                createAuthorizationToken\n                            \n                            \n                                refreshAuthorizationToken\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authorizationTokenService: AuthorizationTokenService, prisma: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/authorization-token/authorization-token.resolver.ts:29\n                            \n                        \n\n                \n                    \n                            Create Authorization resolver.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authorizationTokenService\n                                                  \n                                                        \n                                                                        AuthorizationTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Authorization token service.\n\n                                                        \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \nauthorizationToken(context: ExecutionContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {description: 'Query HTTP endpoint AuthorizationTokenEntity'})@Authorization({hasAuthorization: true, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/authorization-token/authorization-token.resolver.ts:72\n                \n            \n\n\n            \n                \n                    Query HTTP endpoint AuthorizationTokenEntity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        App runner execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAuthorizationToken(args: CreateAuthorizationTokenArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create AuthorizationTokenEntity'})\n                \n            \n\n            \n                \n                    Defined in src/authorization-token/authorization-token.resolver.ts:83\n                \n            \n\n\n            \n                \n                    Create AuthorizationTokenEntity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                CreateAuthorizationTokenArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Create AuthorizationTokenEntity args.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshAuthorizationToken(context: ExecutionContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Refresh HTTP endpoint authorization token entity.'})@Authorization({hasAuthorization: true, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/authorization-token/authorization-token.resolver.ts:127\n                \n            \n\n\n            \n                \n                    Refresh HTTP endpoint authorization token entity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            user\n                        \n                        \n                    \n                \n            \n            \n                \nuser(token: Prisma.AuthorizationTokenGetPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Field(undefined)\n                \n            \n\n            \n                \n                    Defined in src/authorization-token/authorization-token.resolver.ts:45\n                \n            \n\n\n            \n                \n                    Resolve AuthorizationTokenEntity user field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                Prisma.AuthorizationTokenGetPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HTTP endpoint AuthorizationToken\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Args,\n  Field,\n  Mutation,\n  Parent,\n  Query,\n  Resolver,\n} from '@nestjs/graphql';\nimport { Prisma, PrismaClient } from '@prisma/client';\nimport { Authorization } from 'src/authorization.decorator';\nimport {\n  AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE,\n  USER_NOT_FOUND,\n} from 'src/constants';\nimport { Context } from 'src/context.decorator';\nimport { ExecutionContext } from 'src/execution-context';\nimport { IDHelper } from 'src/helper';\nimport { ViewerEntity } from 'src/user/entities/viewer.entity';\nimport { UserSecurityCompareType } from 'src/user/enums';\nimport { AuthorizationTokenService } from './authorization-token.service';\nimport { CreateAuthorizationTokenArgs } from './dto/create-authorization-token.args';\nimport { AuthorizationTokenEntity } from './entities/authorization-token.entity';\nimport { HasTokenExpiredType } from './enums';\n\n/**\n * AuthorizationTokenEntity resolver.\n */\n@Resolver(() => AuthorizationTokenEntity)\nexport class AuthorizationTokenEntityResolver {\n  /**\n   * Create Authorization resolver.\n   * @param authorizationTokenService Authorization token service.\n   * @param prisma Prisma client.\n   */\n  constructor(\n    private readonly authorizationTokenService: AuthorizationTokenService,\n    private readonly prisma: PrismaClient,\n  ) {}\n\n  /**\n   * Resolve AuthorizationTokenEntity user field.\n   * @param token HTTP endpoint AuthorizationToken\n   */\n  @Field(() => ViewerEntity)\n  user(\n    @Parent()\n    token: Prisma.AuthorizationTokenGetPayload,\n  ) {\n    const { user } = token;\n    if (user) {\n      return user;\n    }\n\n    return this.prisma.user.findUnique({\n      where: { id: token.userId },\n    });\n  }\n\n  /**\n   * Query HTTP endpoint AuthorizationTokenEntity\n   * @param context App runner execution context.\n   */\n  @Query(() => AuthorizationTokenEntity, {\n    description: 'Query HTTP endpoint AuthorizationTokenEntity',\n  })\n  @Authorization({\n    hasAuthorization: true,\n    type: HasTokenExpiredType.AUTH,\n  })\n  authorizationToken(@Context() context: ExecutionContext) {\n    return context.authorizationToken;\n  }\n\n  /**\n   * Create AuthorizationTokenEntity\n   * @param args Create `AuthorizationTokenEntity` args.\n   */\n  @Mutation(() => AuthorizationTokenEntity, {\n    description: 'Create AuthorizationTokenEntity',\n  })\n  async createAuthorizationToken(\n    @Args({\n      type: () => CreateAuthorizationTokenArgs,\n    })\n    args: CreateAuthorizationTokenArgs,\n  ) {\n    const { type, user: where, security } = args;\n    if (Object.keys(where).length > 1) {\n      throw new Error(AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE);\n    }\n\n    let user = await this.prisma.user.findUnique({\n      where,\n      rejectOnNotFound: false,\n    });\n    if (type === UserSecurityCompareType.SMS_CODE && !user && where.phone) {\n      user = await this.prisma.user.create({\n        data: {\n          id: IDHelper.id(64),\n          phone: where.phone,\n        },\n      });\n    } else if (!user) {\n      throw new Error(USER_NOT_FOUND);\n    }\n\n    return this.authorizationTokenService.createTokenWithSecurity(\n      user,\n      type,\n      security,\n    );\n  }\n\n  /**\n   * Refresh HTTP endpoint authorization token entity.\n   * @param client token query Prisma client.\n   */\n  @Mutation((returns) => AuthorizationTokenEntity, {\n    description: 'Refresh HTTP endpoint authorization token entity.',\n  })\n  @Authorization({\n    hasAuthorization: true,\n    type: HasTokenExpiredType.REFRESH,\n  })\n  refreshAuthorizationToken(@Context() context: ExecutionContext) {\n    return this.authorizationTokenService.refreshAuthorizationToken(\n      context.authorizationToken,\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationTokenModule.html":{"url":"modules/AuthorizationTokenModule.html","title":"module - AuthorizationTokenModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationTokenModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorizationTokenModule\n\n\n\ncluster_AuthorizationTokenModule_imports\n\n\n\ncluster_AuthorizationTokenModule_providers\n\n\n\ncluster_AuthorizationTokenModule_exports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthorizationTokenModule\n\nAuthorizationTokenModule\n\nAuthorizationTokenModule -->\n\nPrismaModule->AuthorizationTokenModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthorizationTokenModule -->\n\nUserModule->AuthorizationTokenModule\n\n\n\n\n\nAuthorizationTokenService \n\nAuthorizationTokenService \n\nAuthorizationTokenService  -->\n\nAuthorizationTokenModule->AuthorizationTokenService \n\n\n\n\n\nAuthorizationTokenService\n\nAuthorizationTokenService\n\nAuthorizationTokenModule -->\n\nAuthorizationTokenService->AuthorizationTokenModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/authorization-token/authorization-token.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Authorization token module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationTokenService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationTokenService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { UserModule } from 'src/user/user.module';\nimport { AuthorizationTokenEntityResolver } from './authorization-token.resolver';\nimport { AuthorizationTokenService } from './authorization-token.service';\n\n/**\n * Authorization token module.\n */\n@Global()\n@Module({\n  imports: [PrismaModule, UserModule],\n  providers: [AuthorizationTokenService, AuthorizationTokenEntityResolver],\n  exports: [AuthorizationTokenService],\n})\nexport class AuthorizationTokenModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationTokenService.html":{"url":"injectables/AuthorizationTokenService.html","title":"injectable - AuthorizationTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/authorization-token.service.ts\n        \n\n            \n                Description\n            \n            \n                Authorization token service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTokenWithSecurity\n                            \n                            \n                                    Async\n                                createUserAuthorizationToken\n                            \n                            \n                                    Async\n                                getTokenExpiredIn\n                            \n                            \n                                hasTokenExpired\n                            \n                            \n                                    Async\n                                refreshAuthorizationToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaClient, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/authorization-token/authorization-token.service.ts:25\n                            \n                        \n\n                \n                    \n                            Create Authotization token service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTokenWithSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTokenWithSecurity(user: User, type: UserSecurityCompareType, security: string)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:121\n                \n            \n\n\n            \n                \n                    Create token with security.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Creathe token with user.\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                UserSecurityCompareType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        creat compare security type.\n\n                                    \n                                \n                                \n                                    security\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        security object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUserAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserAuthorizationToken(user: User | string)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:86\n                \n            \n\n\n            \n                \n                    Create authorization token object for user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Create authoprization token object user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTokenExpiredIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokenExpiredIn()\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:39\n                \n            \n\n\n            \n                \n                    Get token expired in validity period.\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasTokenExpired\n                        \n                        \n                    \n                \n            \n            \n                \nhasTokenExpired(token: AuthorizationToken, type: HasTokenExpiredType)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:69\n                \n            \n\n\n            \n                \n                    Has authorization token expired.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                AuthorizationToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    type\n                                    \n                                                HasTokenExpiredType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Validate type.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            refreshAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshAuthorizationToken(authorizationToken: AuthorizationToken)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:145\n                \n            \n\n\n            \n                \n                    Refresh authorization token object to database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    authorizationToken\n                                    \n                                                AuthorizationToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Await refresh authorization token object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthorizationToken, PrismaClient, User } from '@prisma/client';\nimport * as dayjs from 'dayjs';\nimport {\n  AUTHORIZATION_TOKEN_NOT_FOUND,\n  SECURITY_COMPARE_FAILED,\n} from 'src/constants';\nimport { IDHelper } from 'src/helper';\nimport { UserService } from 'src/user/user.service';\nimport { UserSecurityCompareType } from 'src/user/enums';\nimport {\n  AUTH_TOKEN_DEFAULT_EXPIRED_IN,\n  AUTH_TOKEN_DEFAULT_EXPIRED_UNIT,\n  AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_IN,\n  AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_UNIT,\n  AUTH_TOKEN_VVALIDITY_PERIOD_KEY,\n} from './constants';\nimport { HasTokenExpiredType } from './enums';\nimport { AuthorizationTokenValidityPeriod } from './types';\n\n/**\n * Authorization token service.\n */\n@Injectable()\nexport class AuthorizationTokenService {\n  /**\n   * Create Authotization token service.\n   * @param prisma Prisma client.\n   * @param userService User service.\n   */\n  constructor(\n    private readonly prisma: PrismaClient,\n    private readonly userService: UserService,\n  ) {}\n\n  /**\n   * Get token expired in validity period.\n   */\n  async getTokenExpiredIn(): Promise {\n    const setting = await this.prisma.setting.findUnique({\n      where: {\n        namespace_name: {\n          namespace: 'system',\n          name: AUTH_TOKEN_VVALIDITY_PERIOD_KEY,\n        },\n      },\n      rejectOnNotFound: false,\n    });\n    const { value = {} } = setting || {};\n    const { expiredIn = {}, refreshExpiredIn = {} } = value as any;\n\n    return {\n      expiredIn: {\n        value: expiredIn.value || AUTH_TOKEN_DEFAULT_EXPIRED_IN,\n        unit: expiredIn.unit || AUTH_TOKEN_DEFAULT_EXPIRED_UNIT,\n      },\n      refreshExpiredIn: {\n        value: refreshExpiredIn.value || AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_IN,\n        unit: refreshExpiredIn.unit || AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_UNIT,\n      },\n    };\n  }\n\n  /**\n   * Has authorization token expired.\n   * @param client `AuthotizationToken` query Prisma client.\n   * @param type Validate type.\n   */\n  hasTokenExpired(\n    token: AuthorizationToken,\n    type: HasTokenExpiredType,\n  ): boolean {\n    if (!token) return true;\n    const expiredAt =\n      type === HasTokenExpiredType.AUTH\n        ? token.expiredAt\n        : token.refreshExpiredAt;\n\n    return !expiredAt || expiredAt.getTime()  {\n    const setting = await this.getTokenExpiredIn();\n    const [token] = await this.prisma.$transaction([\n      this.prisma.authorizationToken.create({\n        data: {\n          userId: typeof user === 'string' ? user : user.id,\n          token: IDHelper.id(128),\n          expiredAt: dayjs()\n            .add(setting.expiredIn.value, setting.expiredIn.unit)\n            .toDate(),\n          refreshExpiredAt: dayjs()\n            .add(setting.refreshExpiredIn.value, setting.refreshExpiredIn.unit)\n            .toDate(),\n        },\n      }),\n      this.prisma.authorizationToken.deleteMany({\n        where: {\n          refreshExpiredAt: {\n            lte: dayjs().add(10, 'minutes').toDate(),\n          },\n        },\n      }),\n    ]);\n\n    return token;\n  }\n\n  /**\n   * Create token with security.\n   * @param user Creathe token with user.\n   * @param type creat compare security type.\n   * @param security security object.\n   */\n  async createTokenWithSecurity(\n    user: User,\n    type: UserSecurityCompareType,\n    security: string,\n  ) {\n    const compared = await this.userService.compareSecurity(\n      user,\n      type,\n      security,\n    );\n    if (compared) {\n      if (compared instanceof Function) {\n        compared();\n      }\n      return this.createUserAuthorizationToken(user);\n    }\n\n    throw new Error(SECURITY_COMPARE_FAILED);\n  }\n\n  /**\n   * Refresh authorization token object to database.\n   * @param authorizationToken Await refresh authorization token object.\n   */\n  async refreshAuthorizationToken(\n    authorizationToken: AuthorizationToken,\n  ): Promise {\n    const setting = await this.getTokenExpiredIn();\n    // If authorization token not found, throw `not found` error.\n    if (!authorizationToken) {\n      throw new Error(AUTHORIZATION_TOKEN_NOT_FOUND);\n\n      // If token is expired, update to new token.\n    } else if (authorizationToken.expiredAt.getTime()  fiveMinutesDate.getTime()) {\n      await this.prisma.authorizationToken.update({\n        where: { token: authorizationToken.token },\n        data: {\n          expiredAt: fiveMinutesDate,\n          refreshExpiredAt: new Date(),\n        },\n      });\n    }\n\n    return this.createUserAuthorizationToken(authorizationToken.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthorizationTokenValidityPeriod.html":{"url":"interfaces/AuthorizationTokenValidityPeriod.html","title":"interface - AuthorizationTokenValidityPeriod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthorizationTokenValidityPeriod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/types.ts\n        \n\n            \n                Description\n            \n            \n                认证Token有效期\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expiredIn\n                                \n                                \n                                        refreshExpiredIn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expiredIn\n                                    \n                                \n                                \n                                    \n                                        expiredIn:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    token 生命有效期\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiredIn\n                                    \n                                \n                                \n                                    \n                                        refreshExpiredIn:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Token 用作刷新生命周期\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { UnitType } from 'dayjs';\n\n/**\n * 认证Token有效期\n */\nexport interface AuthorizationTokenValidityPeriod {\n  /**\n   * token 生命有效期\n   */\n  expiredIn: {\n    value: number;\n    unit: UnitType;\n  };\n\n  /**\n   * Token 用作刷新生命周期\n   */\n  refreshExpiredIn: {\n    value: number;\n    unit: UnitType;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthorizationTokenArgs.html":{"url":"classes/CreateAuthorizationTokenArgs.html","title":"class - CreateAuthorizationTokenArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthorizationTokenArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/dto/create-authorization-token.args.ts\n        \n\n            \n                Description\n            \n            \n                Create authorization token args\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                security\n                            \n                            \n                                type\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            security\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Create AuthorizationToken security value'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/dto/create-authorization-token.args.ts:32\n                            \n                        \n\n                \n                    \n                        Create AuthorizationToken security value\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserSecurityCompareType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Create AuthorizationToken security type'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/dto/create-authorization-token.args.ts:24\n                            \n                        \n\n                \n                    \n                        Create AuthorizationToken security type\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserWhereUniqueInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User find where unique input'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/dto/create-authorization-token.args.ts:16\n                            \n                        \n\n                \n                    \n                        User find where unique input\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field } from '@nestjs/graphql';\nimport { UserWhereUniqueInput } from 'src/user/dto';\nimport { UserSecurityCompareType } from 'src/user/enums';\n\n/**\n * Create authorization token args\n */\n@ArgsType()\nexport class CreateAuthorizationTokenArgs {\n  /**\n   * User find where unique input\n   */\n  @Field(() => UserWhereUniqueInput, {\n    description: 'User find where unique input',\n  })\n  user: UserWhereUniqueInput;\n\n  /**\n   * Create AuthorizationToken security type\n   */\n  @Field(() => UserSecurityCompareType, {\n    description: 'Create AuthorizationToken security type',\n  })\n  type: UserSecurityCompareType;\n\n  /**\n   * Create AuthorizationToken security value\n   */\n  @Field(() => String, {\n    description: 'Create AuthorizationToken security value',\n  })\n  security: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateTimeFilter.html":{"url":"classes/DateTimeFilter.html","title":"class - DateTimeFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateTimeFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql/filters/date-time.filter.ts\n        \n\n            \n                Description\n            \n            \n                Date time filter\n\n            \n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                equals\n                            \n                            \n                                    Optional\n                                gt\n                            \n                            \n                                    Optional\n                                gte\n                            \n                            \n                                    Optional\n                                in\n                            \n                            \n                                    Optional\n                                lt\n                            \n                            \n                                    Optional\n                                lte\n                            \n                            \n                                    Optional\n                                not\n                            \n                            \n                                    Optional\n                                notIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            equals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Date equals', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/date-time.filter.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            gt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Date gt', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/date-time.filter.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            gte\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Date gte', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/date-time.filter.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Date in', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/date-time.filter.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Date lt', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/date-time.filter.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lte\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Date lte', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/date-time.filter.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            not\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DateTimeFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Date not', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/date-time.filter.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            notIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Date not in', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/date-time.filter.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, GraphQLISODateTime, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\n\n/**\n * Date time filter\n */\n@InputType({\n  description: 'Date time filter',\n})\nexport class DateTimeFilter implements Prisma.DateTimeFilter {\n  @Field(() => GraphQLISODateTime, {\n    description: 'Date equals',\n    nullable: true,\n  })\n  equals?: Date;\n\n  @Field(() => [GraphQLISODateTime], { description: 'Date in', nullable: true })\n  in?: Date[];\n\n  @Field(() => [GraphQLISODateTime], {\n    description: 'Date not in',\n    nullable: true,\n  })\n  notIn?: Date[];\n\n  @Field(() => GraphQLISODateTime, { description: 'Date lt', nullable: true })\n  lt?: Date;\n\n  @Field(() => GraphQLISODateTime, { description: 'Date lte', nullable: true })\n  lte?: Date;\n\n  @Field(() => GraphQLISODateTime, { description: 'Date gt', nullable: true })\n  gt?: Date;\n\n  @Field(() => GraphQLISODateTime, { description: 'Date gte', nullable: true })\n  gte?: Date;\n\n  @Field(() => DateTimeFilter, { description: 'Date not', nullable: true })\n  not?: DateTimeFilter;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExecutionContext.html":{"url":"classes/ExecutionContext.html","title":"class - ExecutionContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExecutionContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/execution-context.ts\n        \n\n            \n                Description\n            \n            \n                Socfony execution context.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                authorizationToken\n                            \n                            \n                                    Public\n                                request\n                            \n                            \n                                    Public\n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                create\n                            \n                            \n                                    Private\n                                    Static\n                                getAuthorizationToken\n                            \n                            \n                                    Private\n                                    Static\n                                getHttpAuthorization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor(request: Request, authorizationToken?: AuthorizationToken, user?: User)\n                    \n                \n                        \n                            \n                                Defined in src/execution-context.ts:7\n                            \n                        \n\n                \n                    \n                            Create a execution context.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Express request.\n\n                                                        \n                                                \n                                                \n                                                        authorizationToken\n                                                  \n                                                        \n                                                                        AuthorizationToken\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Authorization token\n\n                                                        \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    User\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                User.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            authorizationToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthorizationToken\n\n                        \n                    \n                        \n                            \n                                    Defined in src/execution-context.ts:16\n                            \n                        \n\n                \n                    \n                        Authorization token\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Request\n\n                        \n                    \n                        \n                            \n                                    Defined in src/execution-context.ts:15\n                            \n                        \n\n                \n                    \n                        Express request.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/execution-context.ts:17\n                            \n                        \n\n                \n                    \n                        User.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(prismaClient: PrismaClient, request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/execution-context.ts:24\n                \n            \n\n\n            \n                \n                    Create kernel context.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prismaClient\n                                    \n                                            PrismaClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Express request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthorizationToken(prismaClient: PrismaClient, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/execution-context.ts:73\n                \n            \n\n\n            \n                \n                    Get AuthorizationToken\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prismaClient\n                                    \n                                            PrismaClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token string.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getHttpAuthorization\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHttpAuthorization(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/execution-context.ts:54\n                \n            \n\n\n            \n                \n                    Get HTTP endpoint Authorization header value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Express request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request } from 'express';\nimport { AuthorizationToken, Prisma, PrismaClient, User } from '@prisma/client';\n\n/**\n * Socfony execution context.\n */\nexport class ExecutionContext {\n  /**\n   * Create a execution context.\n   * @param request Express request.\n   * @param authorizationToken Authorization token\n   * @param user User.\n   */\n  private constructor(\n    public request: Request,\n    public authorizationToken?: AuthorizationToken,\n    public user?: User,\n  ) {}\n\n  /**\n   * Create kernel context.\n   * @param request Express request.\n   */\n  static async create(\n    prismaClient: PrismaClient,\n    request: Request,\n  ): Promise {\n    const token = this.getHttpAuthorization(request);\n    if (\n      request.context &&\n      request.context.authorizationToken?.token === token\n    ) {\n      return request.context;\n    }\n\n    const authorizationToken = await this.getAuthorizationToken(\n      prismaClient,\n      token,\n    );\n    const context = new ExecutionContext(\n      request,\n      authorizationToken,\n      authorizationToken?.user,\n    );\n    context.request.context = request.context = context;\n\n    return context;\n  }\n\n  /**\n   * Get HTTP endpoint `Authorization` header value.\n   * @param request Express request.\n   */\n  private static getHttpAuthorization(request: Request): string {\n    const key = 'Authorization';\n    if (request.header instanceof Function) {\n      return request.header(key);\n    }\n\n    const headers = request.headers;\n    let token = headers[key.toLowerCase()];\n    if (!token || !token.length) {\n      token = headers[key];\n    }\n\n    return Array.isArray(token) ? token.pop() : token;\n  }\n\n  /**\n   * Get `AuthorizationToken`\n   * @param token Token string.\n   */\n  private static getAuthorizationToken(\n    prismaClient: PrismaClient,\n    token: string,\n  ): Promise> {\n    if (token)\n      return prismaClient.authorizationToken.findUnique({\n        where: { token: token },\n        include: { user: true },\n        rejectOnNotFound: false,\n      });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentAudioMedia.html":{"url":"classes/MomentAudioMedia.html","title":"class - MomentAudioMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentAudioMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/entities/media.entity.ts\n        \n\n            \n                Description\n            \n            \n                Audio media.\n\n            \n\n            \n                Extends\n            \n            \n                        MomentMediaCommon\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audio\n                            \n                            \n                                    Optional\n                                cover\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            audio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Audio path'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/media.entity.ts:78\n                            \n                        \n\n                \n                    \n                        Media video path.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Audio cover', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/media.entity.ts:72\n                            \n                        \n\n                \n                    \n                        Media cover path.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentMediaType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Media type.'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         MomentMediaCommon\n\n                                \n                            \n                        \n                            \n                                    Defined in         MomentMediaCommon:36\n\n                            \n                        \n\n                \n                    \n                        Media type.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  createUnionType,\n  Field,\n  InterfaceType,\n  ObjectType,\n  registerEnumType,\n} from '@nestjs/graphql';\nimport { MEDIA_TYPE_DONT_SUPPORTED } from 'src/constants';\n\n/**\n * Media type.\n */\nexport enum MomentMediaType {\n  VIDEO,\n  IMAGE,\n  AUDIO,\n}\nregisterEnumType(MomentMediaType, {\n  name: 'MomentMediaType',\n  description: 'Media type.',\n});\n\n/**\n * Media common.\n */\n@InterfaceType({\n  description: 'Media common',\n})\nexport class MomentMediaCommon {\n  /**\n   * Media type.\n   */\n  @Field(() => MomentMediaType, {\n    description: 'Media type.',\n  })\n  type: MomentMediaType;\n}\n\n/**\n * Video media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Video media',\n})\nexport class MomentVideoMedia extends MomentMediaCommon {\n  /**\n   * Media cover path.\n   */\n  @Field(() => String, { description: 'Video cover' })\n  cover: string;\n\n  /**\n   * Media video path.\n   */\n  @Field(() => String, { description: 'Video path' })\n  video: string;\n}\n\n/**\n * Audio media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Audio media.',\n})\nexport class MomentAudioMedia extends MomentMediaCommon {\n  /**\n   * Media cover path.\n   */\n  @Field(() => String, { description: 'Audio cover', nullable: true })\n  cover?: string;\n\n  /**\n   * Media video path.\n   */\n  @Field(() => String, { description: 'Audio path' })\n  audio: string;\n}\n\n/**\n * Image media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Image media.',\n})\nexport class MomentImageMedia extends MomentMediaCommon {\n  @Field(() => [String], { description: 'Images' })\n  images: string[];\n}\n\n/**\n * Moment media union type.\n */\nexport const MomentMedia = createUnionType({\n  name: 'MomentMedia',\n  types: () => [MomentAudioMedia, MomentImageMedia, MomentVideoMedia],\n  description: 'Moment media.',\n  resolveType(value: MomentMediaCommon) {\n    switch (value?.type) {\n      case MomentMediaType.AUDIO:\n        return MomentAudioMedia;\n      case MomentMediaType.IMAGE:\n        return MomentImageMedia;\n      case MomentMediaType.VIDEO:\n        return MomentVideoMedia;\n      default:\n        throw new Error(MEDIA_TYPE_DONT_SUPPORTED);\n    }\n  },\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentEntity.html":{"url":"classes/MomentEntity.html","title":"class - MomentEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/entities/moment.entity.ts\n        \n\n            \n                Description\n            \n            \n                Moment entity.\n\n            \n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                media\n                            \n                            \n                                owner\n                            \n                            \n                                ownerId\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Moment content'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/moment.entity.ts:35\n                            \n                        \n\n                \n                    \n                        Moment text content\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Moment created at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/moment.entity.ts:47\n                            \n                        \n\n                \n                    \n                        Moment created at\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Moment deleted at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/moment.entity.ts:53\n                            \n                        \n\n                \n                    \n                        Moment deleted at\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'The moment ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/moment.entity.ts:23\n                            \n                        \n\n                \n                    \n                        Moment ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            media\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.JsonValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Moment media'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/moment.entity.ts:41\n                            \n                        \n\n                \n                    \n                        Moment media\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'The moment owner'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/moment.entity.ts:65\n                            \n                        \n\n                \n                    \n                        Moment owner\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ownerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Moment owner ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/moment.entity.ts:59\n                            \n                        \n\n                \n                    \n                        Moment owner ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Moment title', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/moment.entity.ts:29\n                            \n                        \n\n                \n                    \n                        Moment title\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, GraphQLISODateTime, ID, ObjectType } from '@nestjs/graphql';\nimport { Prisma, User } from '@prisma/client';\nimport { UserUnion } from 'src/user/entities/user.union';\nimport { MomentMedia } from './media.entity';\n\n/**\n * Moment entity.\n */\n@ObjectType({\n  description: 'Moment entity',\n})\nexport class MomentEntity\n  implements\n    Prisma.MomentGetPayload {\n  /**\n   * Moment ID\n   */\n  @Field(() => ID, { description: 'The moment ID' })\n  id: string;\n\n  /**\n   * Moment title\n   */\n  @Field(() => String, { description: 'Moment title', nullable: true })\n  title: string;\n\n  /**\n   * Moment text content\n   */\n  @Field(() => String, { description: 'Moment content' })\n  content: string;\n\n  /**\n   * Moment media\n   */\n  @Field(() => MomentMedia, { nullable: true, description: 'Moment media' })\n  media: Prisma.JsonValue;\n\n  /**\n   * Moment created at\n   */\n  @Field(() => GraphQLISODateTime, { description: 'Moment created at' })\n  createdAt: Date;\n\n  /**\n   * Moment deleted at\n   */\n  @Field(() => GraphQLISODateTime, { description: 'Moment deleted at' })\n  deletedAt: Date;\n\n  /**\n   * Moment owner ID\n   */\n  @Field(() => ID, { description: 'Moment owner ID' })\n  ownerId: string;\n\n  /**\n   * Moment owner\n   */\n  @Field(() => UserUnion, { description: 'The moment owner' })\n  owner: User;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentFindFirstArgs.html":{"url":"classes/MomentFindFirstArgs.html","title":"class - MomentFindFirstArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentFindFirstArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/dto/moment-find-first.args.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rejectOnNotFound\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rejectOnNotFound\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-find-first.args.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, OmitType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { MomentFindManyArgs } from './moment-find-many.args';\n\n@ArgsType()\nexport class MomentFindFirstArgs\n  extends OmitType(MomentFindManyArgs, ['skip', 'take'] as const, ArgsType)\n  implements Omit {\n  rejectOnNotFound: false = false;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentFindManyArgs.html":{"url":"classes/MomentFindManyArgs.html","title":"class - MomentFindManyArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentFindManyArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/dto/moment-find-many.args.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Pick\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                cursor\n                            \n                            \n                                    Optional\n                                distinct\n                            \n                            \n                                    Optional\n                                orderBy\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                    Optional\n                                take\n                            \n                            \n                                    Optional\n                                where\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cursor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentWhereUniqueInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Sets the position for listing Moments'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-find-many.args.ts:38\n                            \n                        \n\n                \n                    \n                        Sets the position for listing Moments.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            distinct\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.MomentScalarFieldEnum[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Sets the query distinct'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-find-many.args.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            orderBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentOrderByInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Determine the order of Moments to fetch.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-find-many.args.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Skip the first `n` Moments.', defaultValue: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-find-many.args.ts:58\n                            \n                        \n\n                \n                    \n                        Skip the first n Moments.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            take\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Take `±n` Moments from the position of the cursor.', defaultValue: 15})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-find-many.args.ts:48\n                            \n                        \n\n                \n                    \n                        Take ±n Moments from the position of the cursor.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            where\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentWhereInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Filter, which Moments to fetch.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-find-many.args.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field, Int, registerEnumType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { MomentOrderByInput } from './moment-order-by.input';\nimport { MomentWhereUniqueInput } from './moment-where-unique.input';\nimport { MomentWhereInput } from './moment-where.input';\n\nregisterEnumType(Prisma.MomentScalarFieldEnum, {\n  name: 'MomentScalarFieldEnum',\n  description: 'Moment scalar field enum.',\n});\n\n@ArgsType()\nexport class MomentFindManyArgs\n  implements\n    Pick {\n  @Field(() => MomentWhereInput, {\n    nullable: true,\n    description: 'Filter, which Moments to fetch.',\n  })\n  where?: MomentWhereInput;\n\n  @Field(() => [MomentOrderByInput], {\n    nullable: true,\n    description: 'Determine the order of Moments to fetch.',\n  })\n  orderBy?: MomentOrderByInput[];\n\n  /**\n   * Sets the position for listing Moments.\n   **/\n  @Field(() => MomentWhereUniqueInput, {\n    nullable: true,\n    description: 'Sets the position for listing Moments',\n  })\n  cursor?: MomentWhereUniqueInput;\n\n  /**\n   * Take `±n` Moments from the position of the cursor.\n   **/\n  @Field(() => Int, {\n    nullable: true,\n    description: 'Take `±n` Moments from the position of the cursor.',\n    defaultValue: 15,\n  })\n  take?: number;\n\n  /**\n   * Skip the first `n` Moments.\n   **/\n  @Field(() => Int, {\n    nullable: true,\n    description: 'Skip the first `n` Moments.',\n    defaultValue: 0,\n  })\n  skip?: number;\n\n  @Field(() => [Prisma.MomentScalarFieldEnum], {\n    nullable: true,\n    description: 'Sets the query distinct',\n  })\n  distinct?: Prisma.MomentScalarFieldEnum[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentImageMedia.html":{"url":"classes/MomentImageMedia.html","title":"class - MomentImageMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentImageMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/entities/media.entity.ts\n        \n\n            \n                Description\n            \n            \n                Image media.\n\n            \n\n            \n                Extends\n            \n            \n                        MomentMediaCommon\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                images\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            images\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Images'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/media.entity.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentMediaType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Media type.'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         MomentMediaCommon\n\n                                \n                            \n                        \n                            \n                                    Defined in         MomentMediaCommon:36\n\n                            \n                        \n\n                \n                    \n                        Media type.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  createUnionType,\n  Field,\n  InterfaceType,\n  ObjectType,\n  registerEnumType,\n} from '@nestjs/graphql';\nimport { MEDIA_TYPE_DONT_SUPPORTED } from 'src/constants';\n\n/**\n * Media type.\n */\nexport enum MomentMediaType {\n  VIDEO,\n  IMAGE,\n  AUDIO,\n}\nregisterEnumType(MomentMediaType, {\n  name: 'MomentMediaType',\n  description: 'Media type.',\n});\n\n/**\n * Media common.\n */\n@InterfaceType({\n  description: 'Media common',\n})\nexport class MomentMediaCommon {\n  /**\n   * Media type.\n   */\n  @Field(() => MomentMediaType, {\n    description: 'Media type.',\n  })\n  type: MomentMediaType;\n}\n\n/**\n * Video media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Video media',\n})\nexport class MomentVideoMedia extends MomentMediaCommon {\n  /**\n   * Media cover path.\n   */\n  @Field(() => String, { description: 'Video cover' })\n  cover: string;\n\n  /**\n   * Media video path.\n   */\n  @Field(() => String, { description: 'Video path' })\n  video: string;\n}\n\n/**\n * Audio media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Audio media.',\n})\nexport class MomentAudioMedia extends MomentMediaCommon {\n  /**\n   * Media cover path.\n   */\n  @Field(() => String, { description: 'Audio cover', nullable: true })\n  cover?: string;\n\n  /**\n   * Media video path.\n   */\n  @Field(() => String, { description: 'Audio path' })\n  audio: string;\n}\n\n/**\n * Image media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Image media.',\n})\nexport class MomentImageMedia extends MomentMediaCommon {\n  @Field(() => [String], { description: 'Images' })\n  images: string[];\n}\n\n/**\n * Moment media union type.\n */\nexport const MomentMedia = createUnionType({\n  name: 'MomentMedia',\n  types: () => [MomentAudioMedia, MomentImageMedia, MomentVideoMedia],\n  description: 'Moment media.',\n  resolveType(value: MomentMediaCommon) {\n    switch (value?.type) {\n      case MomentMediaType.AUDIO:\n        return MomentAudioMedia;\n      case MomentMediaType.IMAGE:\n        return MomentImageMedia;\n      case MomentMediaType.VIDEO:\n        return MomentVideoMedia;\n      default:\n        throw new Error(MEDIA_TYPE_DONT_SUPPORTED);\n    }\n  },\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentListRelationFilter.html":{"url":"classes/MomentListRelationFilter.html","title":"class - MomentListRelationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentListRelationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/dto/moment-list-relation.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                every\n                            \n                            \n                                    Optional\n                                none\n                            \n                            \n                                    Optional\n                                some\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            every\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentWhereInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Moment list relation filter every where input.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-list-relation.filter.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            none\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentWhereInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Moment list relation filter none where input.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-list-relation.filter.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            some\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentWhereInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Moment list relation filter some where input.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-list-relation.filter.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { MomentWhereInput } from './moment-where.input';\n\n@InputType({ description: 'Moment list relation filter' })\nexport class MomentListRelationFilter\n  implements Prisma.MomentListRelationFilter {\n  @Field(() => MomentWhereInput, {\n    nullable: true,\n    description: 'Moment list relation filter every where input.',\n  })\n  every?: MomentWhereInput;\n\n  @Field(() => MomentWhereInput, {\n    nullable: true,\n    description: 'Moment list relation filter some where input.',\n  })\n  some?: MomentWhereInput;\n\n  @Field(() => MomentWhereInput, {\n    nullable: true,\n    description: 'Moment list relation filter none where input.',\n  })\n  none?: MomentWhereInput;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentMediaCommon.html":{"url":"classes/MomentMediaCommon.html","title":"class - MomentMediaCommon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentMediaCommon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/entities/media.entity.ts\n        \n\n            \n                Description\n            \n            \n                Media common.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentMediaType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Media type.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/media.entity.ts:36\n                            \n                        \n\n                \n                    \n                        Media type.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  createUnionType,\n  Field,\n  InterfaceType,\n  ObjectType,\n  registerEnumType,\n} from '@nestjs/graphql';\nimport { MEDIA_TYPE_DONT_SUPPORTED } from 'src/constants';\n\n/**\n * Media type.\n */\nexport enum MomentMediaType {\n  VIDEO,\n  IMAGE,\n  AUDIO,\n}\nregisterEnumType(MomentMediaType, {\n  name: 'MomentMediaType',\n  description: 'Media type.',\n});\n\n/**\n * Media common.\n */\n@InterfaceType({\n  description: 'Media common',\n})\nexport class MomentMediaCommon {\n  /**\n   * Media type.\n   */\n  @Field(() => MomentMediaType, {\n    description: 'Media type.',\n  })\n  type: MomentMediaType;\n}\n\n/**\n * Video media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Video media',\n})\nexport class MomentVideoMedia extends MomentMediaCommon {\n  /**\n   * Media cover path.\n   */\n  @Field(() => String, { description: 'Video cover' })\n  cover: string;\n\n  /**\n   * Media video path.\n   */\n  @Field(() => String, { description: 'Video path' })\n  video: string;\n}\n\n/**\n * Audio media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Audio media.',\n})\nexport class MomentAudioMedia extends MomentMediaCommon {\n  /**\n   * Media cover path.\n   */\n  @Field(() => String, { description: 'Audio cover', nullable: true })\n  cover?: string;\n\n  /**\n   * Media video path.\n   */\n  @Field(() => String, { description: 'Audio path' })\n  audio: string;\n}\n\n/**\n * Image media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Image media.',\n})\nexport class MomentImageMedia extends MomentMediaCommon {\n  @Field(() => [String], { description: 'Images' })\n  images: string[];\n}\n\n/**\n * Moment media union type.\n */\nexport const MomentMedia = createUnionType({\n  name: 'MomentMedia',\n  types: () => [MomentAudioMedia, MomentImageMedia, MomentVideoMedia],\n  description: 'Moment media.',\n  resolveType(value: MomentMediaCommon) {\n    switch (value?.type) {\n      case MomentMediaType.AUDIO:\n        return MomentAudioMedia;\n      case MomentMediaType.IMAGE:\n        return MomentImageMedia;\n      case MomentMediaType.VIDEO:\n        return MomentVideoMedia;\n      default:\n        throw new Error(MEDIA_TYPE_DONT_SUPPORTED);\n    }\n  },\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MomentModule.html":{"url":"modules/MomentModule.html","title":"module - MomentModule","body":"\n                   \n\n\n\n\n    Modules\n    MomentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MomentModule\n\n\n\ncluster_MomentModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nMomentModule\n\nMomentModule\n\nMomentModule -->\n\nPrismaModule->MomentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/moment/moment.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { MomentResolver } from './moment.resolver';\n\n@Module({\n  imports: [PrismaModule],\n  providers: [MomentResolver],\n})\nexport class MomentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentOrderByInput.html":{"url":"classes/MomentOrderByInput.html","title":"class - MomentOrderByInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentOrderByInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/dto/moment-order-by.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                content\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                media\n                            \n                            \n                                    Optional\n                                owner\n                            \n                            \n                                    Optional\n                                ownerId\n                            \n                            \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-order-by.input.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-order-by.input.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-order-by.input.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-order-by.input.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            media\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-order-by.input.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserOrderByInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-order-by.input.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ownerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-order-by.input.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-order-by.input.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { UserOrderByInput } from 'src/user/dto/user-order-by.input';\n\n@InputType({ description: 'Moment order by input' })\nexport class MomentOrderByInput implements Prisma.MomentOrderByInput {\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  id?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  title?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  content?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  media?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  createdAt?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  deletedAt?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  ownerId?: Prisma.SortOrder;\n\n  @Field(() => UserOrderByInput, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  owner?: UserOrderByInput;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentResolver.html":{"url":"classes/MomentResolver.html","title":"class - MomentResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/moment.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                momentFindFirst\n                            \n                            \n                                momentFindMany\n                            \n                            \n                                momentFindUnique\n                            \n                            \n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaClient: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/moment/moment.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            momentFindFirst\n                        \n                        \n                    \n                \n            \n            \n                \nmomentFindFirst(args: MomentFindFirstArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true, description: 'Find the first Moment that matches the filter.'})\n                \n            \n\n            \n                \n                    Defined in src/moment/moment.resolver.ts:56\n                \n            \n\n\n            \n                \n                    Find the first Moment that matches the filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                MomentFindFirstArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Find moment args\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            momentFindMany\n                        \n                        \n                    \n                \n            \n            \n                \nmomentFindMany(args: MomentFindManyArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {description: 'Find zero or more Moments that matches the filter'})\n                \n            \n\n            \n                \n                    Defined in src/moment/moment.resolver.ts:42\n                \n            \n\n\n            \n                \n                    Find zero or more Moments that matches the filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                MomentFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Find moments args\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            momentFindUnique\n                        \n                        \n                    \n                \n            \n            \n                \nmomentFindUnique(where: MomentWhereUniqueInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {description: 'Find zero or one Moment that matches the filter'})\n                \n            \n\n            \n                \n                    Defined in src/moment/moment.resolver.ts:21\n                \n            \n\n\n            \n                \n                    Find zero or one Moment that matches the filter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                                MomentWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Find unique where\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            owner\n                        \n                        \n                    \n                \n            \n            \n                \nowner(parent: Moment)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/moment/moment.resolver.ts:67\n                \n            \n\n\n            \n                \n                    Resolve owner field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                            Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent moment object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Query, ResolveField, Resolver } from '@nestjs/graphql';\nimport { Moment, PrismaClient } from '@prisma/client';\nimport { MOMENT_NOT_FOUND, USER_NOT_FOUND } from 'src/constants';\nimport { UserUnion } from 'src/user/entities/user.union';\nimport { MomentFindFirstArgs } from './dto/moment-find-first.args';\nimport { MomentFindManyArgs } from './dto/moment-find-many.args';\nimport { MomentWhereUniqueInput } from './dto/moment-where-unique.input';\nimport { MomentEntity } from './entities/moment.entity';\n\n@Resolver(() => MomentEntity)\nexport class MomentResolver {\n  constructor(private readonly prismaClient: PrismaClient) {}\n\n  /**\n   * Find zero or one Moment that matches the filter\n   * @param where Find unique where\n   */\n  @Query(() => MomentEntity, {\n    description: 'Find zero or one Moment that matches the filter',\n  })\n  momentFindUnique(\n    @Args({\n      name: 'where',\n      type: () => MomentWhereUniqueInput,\n      description: 'Find unique where',\n    })\n    where: MomentWhereUniqueInput,\n  ) {\n    return this.prismaClient.moment.findUnique({\n      where,\n      rejectOnNotFound: () => new Error(MOMENT_NOT_FOUND),\n    });\n  }\n\n  /**\n   * Find zero or more Moments that matches the filter.\n   * @param args Find moments args\n   */\n  @Query(() => [MomentEntity], {\n    description: 'Find zero or more Moments that matches the filter',\n  })\n  momentFindMany(\n    @Args({ type: () => MomentFindManyArgs }) args: MomentFindManyArgs,\n  ) {\n    return this.prismaClient.moment.findMany(args);\n  }\n\n  /**\n   * Find the first Moment that matches the filter.\n   * @param args Find moment args\n   */\n  @Query(() => MomentEntity, {\n    nullable: true,\n    description: 'Find the first Moment that matches the filter.',\n  })\n  momentFindFirst(\n    @Args({ type: () => MomentFindFirstArgs }) args: MomentFindFirstArgs,\n  ) {\n    return this.prismaClient.moment.findFirst(args);\n  }\n\n  /**\n   * Resolve owner field.\n   * @param parent Parent moment object\n   */\n  @ResolveField(() => UserUnion)\n  owner(parent: Moment) {\n    return this.prismaClient.user.findUnique({\n      where: { id: parent.ownerId },\n      rejectOnNotFound: () => new Error(USER_NOT_FOUND),\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentVideoMedia.html":{"url":"classes/MomentVideoMedia.html","title":"class - MomentVideoMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentVideoMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/entities/media.entity.ts\n        \n\n            \n                Description\n            \n            \n                Video media.\n\n            \n\n            \n                Extends\n            \n            \n                        MomentMediaCommon\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cover\n                            \n                            \n                                video\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Video cover'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/media.entity.ts:51\n                            \n                        \n\n                \n                    \n                        Media cover path.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            video\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Video path'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/entities/media.entity.ts:57\n                            \n                        \n\n                \n                    \n                        Media video path.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentMediaType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Media type.'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         MomentMediaCommon\n\n                                \n                            \n                        \n                            \n                                    Defined in         MomentMediaCommon:36\n\n                            \n                        \n\n                \n                    \n                        Media type.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  createUnionType,\n  Field,\n  InterfaceType,\n  ObjectType,\n  registerEnumType,\n} from '@nestjs/graphql';\nimport { MEDIA_TYPE_DONT_SUPPORTED } from 'src/constants';\n\n/**\n * Media type.\n */\nexport enum MomentMediaType {\n  VIDEO,\n  IMAGE,\n  AUDIO,\n}\nregisterEnumType(MomentMediaType, {\n  name: 'MomentMediaType',\n  description: 'Media type.',\n});\n\n/**\n * Media common.\n */\n@InterfaceType({\n  description: 'Media common',\n})\nexport class MomentMediaCommon {\n  /**\n   * Media type.\n   */\n  @Field(() => MomentMediaType, {\n    description: 'Media type.',\n  })\n  type: MomentMediaType;\n}\n\n/**\n * Video media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Video media',\n})\nexport class MomentVideoMedia extends MomentMediaCommon {\n  /**\n   * Media cover path.\n   */\n  @Field(() => String, { description: 'Video cover' })\n  cover: string;\n\n  /**\n   * Media video path.\n   */\n  @Field(() => String, { description: 'Video path' })\n  video: string;\n}\n\n/**\n * Audio media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Audio media.',\n})\nexport class MomentAudioMedia extends MomentMediaCommon {\n  /**\n   * Media cover path.\n   */\n  @Field(() => String, { description: 'Audio cover', nullable: true })\n  cover?: string;\n\n  /**\n   * Media video path.\n   */\n  @Field(() => String, { description: 'Audio path' })\n  audio: string;\n}\n\n/**\n * Image media.\n */\n@ObjectType({\n  implements: [MomentMediaCommon],\n  description: 'Image media.',\n})\nexport class MomentImageMedia extends MomentMediaCommon {\n  @Field(() => [String], { description: 'Images' })\n  images: string[];\n}\n\n/**\n * Moment media union type.\n */\nexport const MomentMedia = createUnionType({\n  name: 'MomentMedia',\n  types: () => [MomentAudioMedia, MomentImageMedia, MomentVideoMedia],\n  description: 'Moment media.',\n  resolveType(value: MomentMediaCommon) {\n    switch (value?.type) {\n      case MomentMediaType.AUDIO:\n        return MomentAudioMedia;\n      case MomentMediaType.IMAGE:\n        return MomentImageMedia;\n      case MomentMediaType.VIDEO:\n        return MomentVideoMedia;\n      default:\n        throw new Error(MEDIA_TYPE_DONT_SUPPORTED);\n    }\n  },\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentWhereInput.html":{"url":"classes/MomentWhereInput.html","title":"class - MomentWhereInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentWhereInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/dto/moment-where.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                AND\n                            \n                            \n                                    Optional\n                                content\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                NOT\n                            \n                            \n                                    Optional\n                                OR\n                            \n                            \n                                    Optional\n                                owner\n                            \n                            \n                                    Optional\n                                ownerId\n                            \n                            \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            AND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'AND where', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'content filter', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DateTimeFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'created at date time filter', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'ID string filter', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            NOT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'NOT where', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            OR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'OR where', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRelationFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'owner filter', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ownerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter | string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'owner ID string filter', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'title filter', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/moment/dto/moment-where.input.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { DateTimeFilter, StringFilter } from 'src/graphql';\nimport { UserRelationFilter } from 'src/user/dto/user-relation.filter';\n\n@InputType()\nexport class MomentWhereInput\n  implements Omit {\n  @Field(() => [MomentWhereInput], { description: 'AND where', nullable: true })\n  AND?: MomentWhereInput[];\n\n  @Field(() => [MomentWhereInput], { description: 'OR where', nullable: true })\n  OR?: MomentWhereInput[];\n\n  @Field(() => [MomentWhereInput], { description: 'NOT where', nullable: true })\n  NOT?: MomentWhereInput[];\n\n  @Field(() => StringFilter, {\n    description: 'ID string filter',\n    nullable: true,\n  })\n  id?: StringFilter;\n\n  @Field(() => StringFilter, { description: 'title filter', nullable: true })\n  title?: StringFilter;\n\n  @Field(() => StringFilter, { description: 'content filter', nullable: true })\n  content?: StringFilter;\n\n  @Field(() => StringFilter, {\n    description: 'created at date time filter',\n    nullable: true,\n  })\n  createdAt?: DateTimeFilter;\n\n  @Field(() => StringFilter, {\n    description: 'owner ID string filter',\n    nullable: true,\n  })\n  ownerId?: StringFilter | string;\n\n  @Field(() => UserRelationFilter, {\n    description: 'owner filter',\n    nullable: true,\n  })\n  owner?: UserRelationFilter;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MomentWhereUniqueInput.html":{"url":"classes/MomentWhereUniqueInput.html","title":"class - MomentWhereUniqueInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MomentWhereUniqueInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/moment/dto/moment-where-unique.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, PartialType, PickType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { MomentEntity } from '../entities/moment.entity';\n\n@InputType({ description: 'Moment Where Unique input' })\nexport class MomentWhereUniqueInput\n  extends PartialType(PickType(MomentEntity, ['id'] as const), InputType)\n  implements Prisma.MomentWhereUniqueInput {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Prisma module.\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {\n  ClassProvider,\n  Global,\n  Logger,\n  Module,\n  OnModuleDestroy,\n  OnModuleInit,\n} from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\nimport { PrismaLoggerMiddleware } from './middleware';\n\n/**\n * Prisma class provider\n */\nconst client: ClassProvider = {\n  provide: PrismaClient,\n  useClass: class\n    extends PrismaClient\n    implements OnModuleInit, OnModuleDestroy {\n    private readonly logger = new Logger('Prisma');\n\n    /**\n     * Prisma client constructor\n     */\n    constructor() {\n      super({\n        datasources: {\n          database: { url: process.env.DATABASE_URL },\n        },\n      });\n    }\n\n    /**\n     * NestJS module init hook callback.\n     */\n    async onModuleInit() {\n      // Prisma connect database.\n      await this.$connect();\n\n      // Set Prisma client global logger middleware.\n      this.$use(PrismaLoggerMiddleware(this.logger));\n    }\n\n    /**\n     * NestJS module destory hook callback.\n     */\n    async onModuleDestroy() {\n      // Prisma disconnect database.\n      await this.$disconnect();\n    }\n  },\n};\n\n/**\n * Prisma module.\n */\n@Global()\n@Module({\n  providers: [client],\n  exports: [client],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SecurityModule.html":{"url":"modules/SecurityModule.html","title":"module - SecurityModule","body":"\n                   \n\n\n\n\n    Modules\n    SecurityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SecurityModule\n\n\n\ncluster_SecurityModule_exports\n\n\n\ncluster_SecurityModule_imports\n\n\n\ncluster_SecurityModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSecurityModule\n\nSecurityModule\n\nSecurityModule -->\n\nPrismaModule->SecurityModule\n\n\n\n\n\nTencentCloudModule\n\nTencentCloudModule\n\nSecurityModule -->\n\nTencentCloudModule->SecurityModule\n\n\n\n\n\nSecuritySmsService \n\nSecuritySmsService \n\nSecuritySmsService  -->\n\nSecurityModule->SecuritySmsService \n\n\n\n\n\nSecuritySmsService\n\nSecuritySmsService\n\nSecurityModule -->\n\nSecuritySmsService->SecurityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/security/security.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Security module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SecuritySmsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            TencentCloudModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SecuritySmsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { TencentCloudModule } from 'src/tencent-cloud';\nimport { SecuritySmsResolver } from './security-sms.resolver';\nimport { SecuritySmsService } from './security-sms.service';\n\n/**\n * Security module.\n */\n@Module({\n  imports: [TencentCloudModule, PrismaModule],\n  providers: [SecuritySmsService, SecuritySmsResolver],\n  exports: [SecuritySmsService],\n})\nexport class SecurityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecuritySmsResolver.html":{"url":"classes/SecuritySmsResolver.html","title":"class - SecuritySmsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecuritySmsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/security/security-sms.resolver.ts\n        \n\n            \n                Description\n            \n            \n                Security SMS resolver.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSecurity\n                            \n                            \n                                    Async\n                                createViewerSecurity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(securitySmsService: SecuritySmsService)\n                    \n                \n                        \n                            \n                                Defined in src/security/security-sms.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            Create the resolver.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        securitySmsService\n                                                  \n                                                        \n                                                                        SecuritySmsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Secyrity SMS service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSecurity(phone: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create a security SMS code for phone number'})\n                \n            \n\n            \n                \n                    Defined in src/security/security-sms.resolver.ts:27\n                \n            \n\n\n            \n                \n                    Create a security SMS code for phone number.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Need create Security SMS code phone number.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createViewerSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createViewerSecurity(context: ExecutionContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create the viewer security SMS code'})@Authorization({hasAuthorization: true, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/security/security-sms.resolver.ts:47\n                \n            \n\n\n            \n                \n                    Create the viewer security SMS code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Socfony app execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, GraphQLISODateTime, Mutation, Resolver } from '@nestjs/graphql';\nimport { HasTokenExpiredType } from 'src/authorization-token/enums';\nimport { Authorization } from 'src/authorization.decorator';\nimport { USER_NOT_SET_PHONE } from 'src/constants';\nimport { Context } from 'src/context.decorator';\nimport { ExecutionContext } from 'src/execution-context';\nimport { SecuritySmsService } from './security-sms.service';\n\n/**\n * Security SMS resolver.\n */\n@Resolver()\nexport class SecuritySmsResolver {\n  /**\n   * Create the resolver.\n   * @param securitySmsService Secyrity SMS service.\n   */\n  constructor(private readonly securitySmsService: SecuritySmsService) {}\n\n  /**\n   * Create a security SMS code for phone number.\n   * @param phone Need create Security SMS code phone number.\n   */\n  @Mutation(() => GraphQLISODateTime, {\n    description: 'Create a security SMS code for phone number',\n  })\n  async createSecurity(\n    @Args({\n      name: 'phone',\n      description: 'Need send code phone number',\n      type: () => String,\n    })\n    phone: string,\n  ) {\n    const { expiredAt } = await this.securitySmsService.send(phone);\n    return expiredAt;\n  }\n\n  /**\n   * Create the viewer security SMS code.\n   * @param context Socfony app execution context.\n   */\n  @Mutation(() => GraphQLISODateTime, {\n    description: 'Create the viewer security SMS code',\n  })\n  @Authorization({ hasAuthorization: true, type: HasTokenExpiredType.AUTH })\n  async createViewerSecurity(@Context() context: ExecutionContext) {\n    const { phone } = context.user || {};\n    if (!phone) {\n      throw new Error(USER_NOT_SET_PHONE);\n    }\n\n    return await this.createSecurity(phone);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SecuritySmsService.html":{"url":"injectables/SecuritySmsService.html","title":"injectable - SecuritySmsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SecuritySmsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/security/security-sms.service.ts\n        \n\n            \n                Description\n            \n            \n                Security SMS service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compareCode\n                            \n                            \n                                getOptions\n                            \n                            \n                                    Async\n                                send\n                            \n                            \n                                    Async\n                                updateCodeToUsed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tencentCloudSmsService: TencentCloudSmsService, prisma: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/security/security-sms.service.ts:11\n                            \n                        \n\n                \n                    \n                            Create the service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tencentCloudSmsService\n                                                  \n                                                        \n                                                                        TencentCloudSmsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Tencent Cloud SMS service.\n\n                                                        \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            compareCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    compareCode(phone: string, code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/security/security-sms.service.ts:85\n                \n            \n\n\n            \n                \n                    Compase phone security code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        phone number.\n\n                                    \n                                \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sent phone security SMS code.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions(hasChina: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/security/security-sms.service.ts:26\n                \n            \n\n\n            \n                \n                    Get SMS options.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    hasChina\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Has china.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { expiredIn: any; templateID: any; veriables: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(phone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/security/security-sms.service.ts:49\n                \n            \n\n\n            \n                \n                    Send a SMS code to phone.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Send phone number.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateCodeToUsed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCodeToUsed(security: SecuritySmsCode)\n                \n            \n\n\n            \n                \n                    Defined in src/security/security-sms.service.ts:113\n                \n            \n\n\n            \n                \n                    Update security to used.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    security\n                                    \n                                            SecuritySmsCode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Security code.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaClient, SecuritySmsCode } from '@prisma/client';\nimport * as dayjs from 'dayjs';\nimport { IDHelper } from 'src/helper';\nimport { TencentCloudSmsService } from 'src/tencent-cloud/sms';\n\n/**\n * Security SMS service.\n */\n@Injectable()\nexport class SecuritySmsService {\n  /**\n   * Create the service.\n   * @param tencentCloudSmsService Tencent Cloud SMS service.\n   * @param prisma Prisma client.\n   */\n  constructor(\n    private readonly tencentCloudSmsService: TencentCloudSmsService,\n    private readonly prisma: PrismaClient,\n  ) {}\n\n  /**\n   * Get SMS options.\n   * @param hasChina Has china.\n   */\n  getOptions(hasChina: boolean) {\n    const expiredIn = Number.parseInt(\n      process.env.TENCENT_CLOUD_SMS_EXPIRED_IN || '300',\n    );\n    if (hasChina) {\n      return {\n        expiredIn,\n        templateID: process.env.TENCENT_CLOUD_SMS_CHINA_TEMPLATE_ID,\n        veriables: process.env.TENCENT_CLOUD_SMS_CHINA_VERIABLES,\n      };\n    }\n\n    return {\n      expiredIn,\n      templateID: process.env.TENCENT_CLOUD_SMS_OTHER_TEMPLATE_ID,\n      veriables: process.env.TENCENT_CLOUD_SMS_OTHER_VERIABLES,\n    };\n  }\n\n  /**\n   * Send a SMS code to phone.\n   * @param phone Send phone number.\n   */\n  async send(phone: string) {\n    const hasChina = phone.startsWith('+86');\n    const options = this.getOptions(hasChina);\n    const code = IDHelper.numeral(6);\n    const expiredAt = dayjs().add(options.expiredIn, 'seconds').toDate();\n    const paramsSet = options.veriables\n      .split(',')\n      .map((item) =>\n        item\n          .replace('#code#', code)\n          .replace('#expired#', (options.expiredIn / 60).toString()),\n      );\n\n    const security = await this.prisma.securitySmsCode.create({\n      data: {\n        id: IDHelper.id(64),\n        phone,\n        code,\n        expiredAt,\n      },\n    });\n\n    this.tencentCloudSmsService.send({\n      PhoneNumberSet: [phone],\n      TemplateID: options.templateID,\n      TemplateParamSet: paramsSet,\n    });\n\n    return security;\n  }\n\n  /**\n   * Compase phone security code.\n   * @param phone phone number.\n   * @param code The sent phone security SMS code.\n   */\n  async compareCode(\n    phone: string,\n    code: string,\n  ): Promise {\n    if (!phone || !code) {\n      return false;\n    }\n\n    const security = await this.prisma.securitySmsCode.findFirst({\n      where: { phone, code },\n      orderBy: { createdAt: 'desc' },\n      rejectOnNotFound: false,\n    });\n    if (\n      security &&\n      !security.usedAt &&\n      security.expiredAt.getTime() > Date.now()\n    ) {\n      return security;\n    }\n\n    return false;\n  }\n\n  /**\n   * Update security to used.\n   * @param security Security code.\n   */\n  async updateCodeToUsed(security: SecuritySmsCode) {\n    return await this.prisma.securitySmsCode.update({\n      where: { id: security.id },\n      data: { usedAt: new Date() },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SocfonyConfig.html":{"url":"interfaces/SocfonyConfig.html","title":"interface - SocfonyConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SocfonyConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.config.ts\n        \n\n            \n                Description\n            \n            \n                Socfony app config.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endpoint\n                                \n                                \n                                        isProduction\n                                \n                                \n                                        port\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoint\n                                    \n                                \n                                \n                                    \n                                        endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GraphQL endpoint\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isProduction\n                                    \n                                \n                                \n                                    \n                                        isProduction:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is production.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    App runner port\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { config as dontEnvConfig } from 'dotenv';\n\n/**\n * Socfony app config.\n */\nexport interface SocfonyConfig {\n  /**\n   * Is production.\n   */\n  isProduction: boolean;\n\n  /**\n   * App runner port\n   */\n  port: string | number;\n\n  /**\n   * GraphQL endpoint\n   */\n  endpoint: string;\n}\n\n/**\n * Load Socfony ENV config file.\n * @param path ENV file path.\n */\nexport function loadConfig(path?: string) {\n  const logger = new Logger('Socfony');\n  const { error } = dontEnvConfig({ path });\n  if (error) {\n    logger.error(error.message);\n    process.exit(1);\n  }\n\n  logger.log(`Loaded \"${path || '.env'}\" dot env config file.`);\n}\n\n/**\n * Get app config.\n * @returns {@like SocfonyConfig}\n */\nexport function getConfig(): SocfonyConfig {\n  return {\n    isProduction: process.env.NODE_ENV === 'production',\n    port: process.env.CLIENT_SERVER_PORT || 3000,\n    endpoint: process.env.CLIENT_GRAPHQL_ENDPOINT || '/',\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StringFilter.html":{"url":"classes/StringFilter.html","title":"class - StringFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StringFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql/filters/string.filter.ts\n        \n\n            \n                Description\n            \n            \n                String filter\n\n            \n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                contains\n                            \n                            \n                                    Optional\n                                endsWith\n                            \n                            \n                                    Optional\n                                equals\n                            \n                            \n                                    Optional\n                                gt\n                            \n                            \n                                    Optional\n                                gte\n                            \n                            \n                                    Optional\n                                in\n                            \n                            \n                                    Optional\n                                lt\n                            \n                            \n                                    Optional\n                                lte\n                            \n                            \n                                    Optional\n                                mode\n                            \n                            \n                                    Optional\n                                not\n                            \n                            \n                                    Optional\n                                notIn\n                            \n                            \n                                    Optional\n                                startsWith\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            contains\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String contains'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            endsWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String end with'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            equals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String equals'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            gt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String gt'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            gte\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String gte'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String in'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String lt'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lte\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String lte'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.QueryMode\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'query mode'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            not\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'not'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            notIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String not in'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            startsWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'String starts with'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/graphql/filters/string.filter.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, registerEnumType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\n\nregisterEnumType(Prisma.QueryMode, {\n  name: 'QueryMode',\n});\n\n/**\n * String filter\n */\n@InputType({\n  description: 'String filter',\n})\nexport class StringFilter implements Prisma.StringFilter {\n  @Field(() => String, { nullable: true, description: 'String equals' })\n  equals?: string;\n\n  @Field(() => [String], { nullable: true, description: 'String in' })\n  in?: string[];\n\n  @Field(() => [String], { nullable: true, description: 'String not in' })\n  notIn?: string[];\n\n  @Field(() => String, { nullable: true, description: 'String lt' })\n  lt?: string;\n\n  @Field(() => String, { nullable: true, description: 'String lte' })\n  lte?: string;\n\n  @Field(() => String, { nullable: true, description: 'String gt' })\n  gt?: string;\n\n  @Field(() => String, { nullable: true, description: 'String gte' })\n  gte?: string;\n\n  @Field(() => String, { nullable: true, description: 'String contains' })\n  contains?: string;\n\n  @Field(() => String, { nullable: true, description: 'String starts with' })\n  startsWith?: string;\n\n  @Field(() => String, { nullable: true, description: 'String end with' })\n  endsWith?: string;\n\n  @Field(() => Prisma.QueryMode, { nullable: true, description: 'query mode' })\n  mode?: Prisma.QueryMode;\n\n  @Field(() => StringFilter, { nullable: true, description: 'not' })\n  not?: StringFilter;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TencentCloudCosCredentials.html":{"url":"classes/TencentCloudCosCredentials.html","title":"class - TencentCloudCosCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TencentCloudCosCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/cos/entities/cos.entity.ts\n        \n\n            \n                Description\n            \n            \n                Tencent CLoud COS credential\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                bucket\n                            \n                            \n                                region\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authorization\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TencentCloudStsFederationToken\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud STS authorization token'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/cos/entities/cos.entity.ts:17\n                            \n                        \n\n                \n                    \n                        Tencent Cloud STS authorization token\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bucket\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud COS bucket'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/cos/entities/cos.entity.ts:25\n                            \n                        \n\n                \n                    \n                        Tencent Cloud COS bucket\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            region\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud COS bucket region'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/cos/entities/cos.entity.ts:33\n                            \n                        \n\n                \n                    \n                        Tencent Cloud COS bucket region\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { TencentCloudStsFederationToken } from '../../sts';\n\n/**\n * Tencent CLoud COS credential\n */\n@ObjectType({\n  description: 'Tencent CLoud COS credential',\n})\nexport class TencentCloudCosCredentials {\n  /**\n   * Tencent Cloud STS authorization token\n   */\n  @Field(() => TencentCloudStsFederationToken, {\n    description: 'Tencent Cloud STS authorization token',\n  })\n  authorization: TencentCloudStsFederationToken;\n\n  /**\n   * Tencent Cloud COS bucket\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud COS bucket',\n  })\n  bucket: string;\n\n  /**\n   * Tencent Cloud COS bucket region\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud COS bucket region',\n  })\n  region: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TencentCloudCosResolver.html":{"url":"classes/TencentCloudCosResolver.html","title":"class - TencentCloudCosResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TencentCloudCosResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/cos/cos.resolver.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Cloud COS credentials resolver.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                    Async\n                                createCosTemporaryReadCredential\n                            \n                            \n                                    Async\n                                createCosTemporaryWriteCredential\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cosService: TencentCloudCosService)\n                    \n                \n                        \n                            \n                                Defined in src/tencent-cloud/cos/cos.resolver.ts:43\n                            \n                        \n\n                \n                    \n                            Create the resolver.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cosService\n                                                  \n                                                        \n                                                                        TencentCloudCosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Tencent Cloud COS service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorization\n                        \n                        \n                    \n                \n            \n            \n                \nauthorization(undefined: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/tencent-cloud/cos/cos.resolver.ts:55\n                \n            \n\n\n            \n                \n                    Resolve Tencent Cloud STS federation token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createCosTemporaryReadCredential\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCosTemporaryReadCredential()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create Tencent Cloud COS read credential'})\n                \n            \n\n            \n                \n                    Defined in src/tencent-cloud/cos/cos.resolver.ts:72\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud COS read credential\n\n\n                    \n                        Returns :     Promise<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createCosTemporaryWriteCredential\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCosTemporaryWriteCredential(type: AllowUploadFileType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create Tencent Cloud COS write credential'})@AuthorizationWith()\n                \n            \n\n            \n                \n                    Defined in src/tencent-cloud/cos/cos.resolver.ts:90\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud COS write credential\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AllowUploadFileType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        AllowUploadFileType item.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Args,\n  Mutation,\n  Parent,\n  registerEnumType,\n  ResolveField,\n  Resolver,\n} from '@nestjs/graphql';\nimport { AuthorizationWith } from 'src/authorization.decorator';\nimport { IDHelper } from 'src/helper';\nimport { TencentCloudStsFederationToken } from '../sts';\nimport { TencentCloudCosCredentials } from './entities/cos.entity';\nimport { TencentCloudCosService } from './soc.service';\n\n/**\n * Allow upload File MIME-type.\n */\nexport enum AllowUploadFileType {\n  // Images\n  JPG = '.jpg',\n  PNG = '.png',\n  GIF = '.gif',\n  // Video\n  MP4 = '.mp4',\n  OGG = '.ogg',\n  // Audio\n  MP3 = '.mp3',\n  WAV = '.wav',\n}\n\n/**\n * Register `AllowUploadFileType` to GraphQL schema.\n */\nregisterEnumType(AllowUploadFileType, {\n  name: 'AllowUploadFileType',\n  description: 'Allow upload File MIME-type',\n});\n\n/**\n * Tencent Cloud COS credentials resolver.\n */\n@Resolver(() => TencentCloudCosCredentials)\nexport class TencentCloudCosResolver {\n  /**\n   * Create the resolver.\n   * @param cosService Tencent Cloud COS service.\n   */\n  constructor(private readonly cosService: TencentCloudCosService) {}\n\n  /**\n   * Resolve Tencent Cloud STS federation token.\n   * @param param SOcfony runner execution context.\n   */\n  @ResolveField(() => TencentCloudStsFederationToken)\n  authorization(\n    @Parent()\n    {\n      authorization,\n    }: {\n      authorization: () => Promise;\n    },\n  ) {\n    return authorization();\n  }\n\n  /**\n   * Create Tencent Cloud COS read credential\n   */\n  @Mutation(() => TencentCloudCosCredentials, {\n    description: 'Create Tencent Cloud COS read credential',\n  })\n  async createCosTemporaryReadCredential(): Promise & {\n      authorization: () => Promise;\n    }\n  > {\n    return Object.assign({}, this.cosService.options, {\n      authorization: () => this.cosService.createTemporaryReadCredential(),\n    });\n  }\n\n  /**\n   * Create Tencent Cloud COS write credential\n   * @param type `AllowUploadFileType` item.\n   */\n  @Mutation(() => TencentCloudCosCredentials, {\n    description: 'Create Tencent Cloud COS write credential',\n  })\n  @AuthorizationWith()\n  async createCosTemporaryWriteCredential(\n    @Args({\n      name: 'type',\n      type: () => AllowUploadFileType,\n      description: 'create resource type.',\n    })\n    type: AllowUploadFileType,\n  ): Promise & {\n      authorization: () => Promise;\n    }\n  > {\n    return Object.assign({}, this.cosService.options, {\n      authorization: () =>\n        this.cosService.createTemporaryWriteCredential(IDHelper.id(64) + type),\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TencentCloudCosService.html":{"url":"injectables/TencentCloudCosService.html","title":"injectable - TencentCloudCosService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TencentCloudCosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/cos/soc.service.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Cloud COS service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTemporaryReadCredential\n                            \n                            \n                                    Async\n                                createTemporaryWriteCredential\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                                \n                                    temporaryCredentialDurationSeconds\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sts: TencentCloudStsService)\n                    \n                \n                        \n                            \n                                Defined in src/tencent-cloud/cos/soc.service.ts:9\n                            \n                        \n\n                \n                    \n                            Create the COS service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sts\n                                                  \n                                                        \n                                                                        TencentCloudStsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Tencent Cloud STS service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTemporaryReadCredential\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTemporaryReadCredential()\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/cos/soc.service.ts:36\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud COS temporary read credential.\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTemporaryWriteCredential\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTemporaryWriteCredential(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/cos/soc.service.ts:64\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud COS temporary write credential.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tencent Cloud COS object key.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in src/tencent-cloud/cos/soc.service.ts:19\n                                \n                            \n                    \n                        \n                                Get COS options.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        temporaryCredentialDurationSeconds\n                    \n                \n\n                \n                    \n                        gettemporaryCredentialDurationSeconds()\n                    \n                \n                            \n                                \n                                    Defined in src/tencent-cloud/cos/soc.service.ts:29\n                                \n                            \n                    \n                        \n                                get temporary credential duration seconds.\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { IDHelper } from 'src/helper';\nimport { TencentCloudStsService } from '../sts';\n\n/**\n * Tencent Cloud COS service.\n */\n@Injectable()\nexport class TencentCloudCosService {\n  /**\n   * Create the COS service.\n   * @param sts Tencent Cloud STS service.\n   */\n  constructor(private readonly sts: TencentCloudStsService) {}\n\n  /**\n   * Get COS options.\n   */\n  get options() {\n    return {\n      bucket: process.env.TENCENT_CLOUD_COS_BUCKET,\n      region: process.env.TENCENT_CLOUD_COS_REGION,\n    };\n  }\n\n  /**\n   * get temporary credential duration seconds.\n   */\n  get temporaryCredentialDurationSeconds() {\n    return 7200;\n  }\n\n  /**\n   * Create Tencent Cloud COS temporary read credential.\n   */\n  async createTemporaryReadCredential() {\n    const { bucket, region } = this.options;\n    const stsClient = this.sts.createClient(region);\n    const [_, uid] = bucket.split('-');\n    return await stsClient.GetFederationToken({\n      Name: IDHelper.alphabet(32),\n      DurationSeconds: this.temporaryCredentialDurationSeconds,\n      Policy: JSON.stringify({\n        version: '2.0',\n        statement: [\n          {\n            effect: 'allow',\n            action: [\n              'name/cos:GetObject',\n              'name/cos:HeadObject',\n              'name/cos:OptionsObject',\n            ],\n            resource: [`qcs::cos:${region}:uid/${uid}:${bucket}/*`],\n          },\n        ],\n      }),\n    });\n  }\n\n  /**\n   * Create Tencent Cloud COS temporary write credential.\n   * @param name Tencent Cloud COS object key.\n   */\n  async createTemporaryWriteCredential(name: string) {\n    const { bucket, region } = this.options;\n    const stsClient = this.sts.createClient(region);\n    const [_, uid] = bucket.split('-');\n    return await stsClient.GetFederationToken({\n      Name: IDHelper.alphabet(32),\n      DurationSeconds: this.temporaryCredentialDurationSeconds,\n      Policy: JSON.stringify({\n        version: '2.0',\n        statement: [\n          {\n            effect: 'allow',\n            action: [\n              //简单上传操作\n              'name/cos:PutObject',\n              //表单上传对象\n              'name/cos:PostObject',\n              //分块上传：初始化分块操作\n              'name/cos:InitiateMultipartUpload',\n              //分块上传：List 进行中的分块上传\n              'name/cos:ListMultipartUploads',\n              //分块上传：List 已上传分块操作\n              'name/cos:ListParts',\n              //分块上传：上传分块块操作\n              'name/cos:UploadPart',\n              //分块上传：完成所有分块上传操作\n              'name/cos:CompleteMultipartUpload',\n              //取消分块上传操作\n              'name/cos:AbortMultipartUpload',\n            ],\n            resource: [`qcs::cos:${region}:uid/${uid}:${bucket}/${name}`],\n          },\n        ],\n      }),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TencentCloudModule.html":{"url":"modules/TencentCloudModule.html","title":"module - TencentCloudModule","body":"\n                   \n\n\n\n\n    Modules\n    TencentCloudModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TencentCloudModule\n\n\n\ncluster_TencentCloudModule_exports\n\n\n\ncluster_TencentCloudModule_providers\n\n\n\n\nTencentCloudCosService \n\nTencentCloudCosService \n\n\n\nTencentCloudSmsService \n\nTencentCloudSmsService \n\n\n\nTencentCloudStsService \n\nTencentCloudStsService \n\n\n\nTencentCloudModule\n\nTencentCloudModule\n\nTencentCloudCosService  -->\n\nTencentCloudModule->TencentCloudCosService \n\n\n\nTencentCloudSmsService  -->\n\nTencentCloudModule->TencentCloudSmsService \n\n\n\nTencentCloudStsService  -->\n\nTencentCloudModule->TencentCloudStsService \n\n\n\n\n\nTencentCloudCosService\n\nTencentCloudCosService\n\nTencentCloudModule -->\n\nTencentCloudCosService->TencentCloudModule\n\n\n\n\n\nTencentCloudSmsService\n\nTencentCloudSmsService\n\nTencentCloudModule -->\n\nTencentCloudSmsService->TencentCloudModule\n\n\n\n\n\nTencentCloudStsService\n\nTencentCloudStsService\n\nTencentCloudModule -->\n\nTencentCloudStsService->TencentCloudModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tencent-cloud/tencent-cloud.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Tencent Cloud module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TencentCloudCosService\n                        \n                        \n                            TencentCloudSmsService\n                        \n                        \n                            TencentCloudStsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TencentCloudCosService\n                        \n                        \n                            TencentCloudSmsService\n                        \n                        \n                            TencentCloudStsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TencentCloudCosService } from './cos';\nimport { TencentCloudCosResolver } from './cos/cos.resolver';\nimport { TencentCloudSmsService } from './sms';\nimport { TencentCloudStsService } from './sts';\n\n/**\n * Tencent Cloud module.\n */\n@Module({\n  providers: [\n    TencentCloudStsService,\n    TencentCloudCosService,\n    TencentCloudSmsService,\n\n    // Resolvers\n    TencentCloudCosResolver,\n  ],\n  exports: [\n    TencentCloudStsService,\n    TencentCloudCosService,\n    TencentCloudSmsService,\n  ],\n})\nexport class TencentCloudModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TencentCloudSmsService.html":{"url":"injectables/TencentCloudSmsService.html","title":"injectable - TencentCloudSmsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TencentCloudSmsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/sms/sms.service.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Cloud SMS service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createClient\n                            \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createClient\n                        \n                        \n                    \n                \n            \n            \n                \ncreateClient(region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/sms/sms.service.ts:29\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud SMS client.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'ap-guangzhou'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Client\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(params: Pick, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/sms/sms.service.ts:45\n                \n            \n\n\n            \n                \n                    Send SMS.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Pick\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Send SMS params.\n\n                                    \n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'ap-guangzhou'\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseOptions\n                    \n                \n\n                \n                    \n                        getbaseOptions()\n                    \n                \n                            \n                                \n                                    Defined in src/tencent-cloud/sms/sms.service.ts:14\n                                \n                            \n                    \n                        \n                                Get SMS base options.\n\n\n                                \n                                    Returns :         Pick\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Client } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sms/v20190711/sms_client';\nimport { SendSmsRequest } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sms/v20190711/sms_models';\nimport { getCredential } from '../common';\n\n/**\n * Tencent Cloud SMS service.\n */\n@Injectable()\nexport class TencentCloudSmsService {\n  /**\n   * Get SMS base options.\n   */\n  get baseOptions(): Pick {\n    return {\n      SmsSdkAppid: process.env.TENCENT_CLOUD_SMS_APP_ID,\n      Sign: process.env.TENCENT_CLOUD_SMS_SIGN,\n      ExtendCode: process.env.TENCENT_CLOUD_SMS_EXTEND_CODE,\n      SenderId: process.env.TENCENT_CLOUD_SMS_SENDER_ID,\n    };\n  }\n\n  /**\n   * Create Tencent Cloud SMS client.\n   */\n  createClient(region: string = 'ap-guangzhou'): Client {\n    return new Client({\n      credential: getCredential(),\n      region,\n      profile: {\n        httpProfile: {\n          endpoint: 'sms.tencentcloudapi.com',\n        },\n      },\n    });\n  }\n\n  /**\n   * Send SMS.\n   * @param params Send SMS params.\n   */\n  async send(\n    params: Pick,\n    region: string = 'ap-guangzhou',\n  ) {\n    const client = this.createClient(region);\n    const request = Object.assign({}, this.baseOptions, params);\n    return await client.SendSms(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TencentCloudStsCredentials.html":{"url":"classes/TencentCloudStsCredentials.html","title":"class - TencentCloudStsCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TencentCloudStsCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/sts/entities/sts.entity.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Cloud STS credentials.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Credentials\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                TmpSecretId\n                            \n                            \n                                TmpSecretKey\n                            \n                            \n                                Token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TmpSecretId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials secrect id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:26\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials secrect id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TmpSecretKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials secrect key'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:34\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials secrect key\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials token'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:18\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials token\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Int, ObjectType } from '@nestjs/graphql';\nimport { GetFederationTokenResponse } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_models';\nimport { Credentials } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_models';\n\n/**\n * Tencent Cloud STS credentials.\n */\n@ObjectType({\n  description: 'Tencent Cloud STS credentials.',\n})\nexport class TencentCloudStsCredentials implements Credentials {\n  /**\n   * Tencent Cloud credentials token\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials token',\n  })\n  Token: string;\n\n  /**\n   * Tencent Cloud credentials secrect id\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials secrect id',\n  })\n  TmpSecretId: string;\n\n  /**\n   * Tencent Cloud credentials secrect key\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials secrect key',\n  })\n  TmpSecretKey: string;\n}\n\n/**\n * Tencent Clous STS federation token\n */\n@ObjectType({\n  description: 'Tencent Clous STS federation token',\n})\nexport class TencentCloudStsFederationToken\n  implements GetFederationTokenResponse {\n  /**\n   * Tencent Cloud credentials\n   */\n  @Field(() => TencentCloudStsCredentials, {\n    description: 'Tencent Cloud credentials',\n    nullable: true,\n  })\n  Credentials?: TencentCloudStsCredentials;\n\n  /**\n   * Tencent Cloud credentials expired Unix time\n   */\n  @Field(() => Int, {\n    description: 'Tencent Cloud credentials expired Unix time.',\n    nullable: true,\n  })\n  ExpiredTime?: number;\n\n  /**\n   * Tencent Cloud credentials expired ISO8601 date\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials expired ISO8601 date.',\n    nullable: true,\n  })\n  Expiration?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TencentCloudStsFederationToken.html":{"url":"classes/TencentCloudStsFederationToken.html","title":"class - TencentCloudStsFederationToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TencentCloudStsFederationToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/sts/entities/sts.entity.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Clous STS federation token\n\n            \n\n\n            \n                Implements\n            \n            \n                        GetFederationTokenResponse\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                Credentials\n                            \n                            \n                                    Optional\n                                Expiration\n                            \n                            \n                                    Optional\n                                ExpiredTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            Credentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TencentCloudStsCredentials\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:52\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            Expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials expired ISO8601 date.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:70\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials expired ISO8601 date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ExpiredTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials expired Unix time.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:61\n                            \n                        \n\n                \n                    \n                        Tencent Cloud credentials expired Unix time\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Int, ObjectType } from '@nestjs/graphql';\nimport { GetFederationTokenResponse } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_models';\nimport { Credentials } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_models';\n\n/**\n * Tencent Cloud STS credentials.\n */\n@ObjectType({\n  description: 'Tencent Cloud STS credentials.',\n})\nexport class TencentCloudStsCredentials implements Credentials {\n  /**\n   * Tencent Cloud credentials token\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials token',\n  })\n  Token: string;\n\n  /**\n   * Tencent Cloud credentials secrect id\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials secrect id',\n  })\n  TmpSecretId: string;\n\n  /**\n   * Tencent Cloud credentials secrect key\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials secrect key',\n  })\n  TmpSecretKey: string;\n}\n\n/**\n * Tencent Clous STS federation token\n */\n@ObjectType({\n  description: 'Tencent Clous STS federation token',\n})\nexport class TencentCloudStsFederationToken\n  implements GetFederationTokenResponse {\n  /**\n   * Tencent Cloud credentials\n   */\n  @Field(() => TencentCloudStsCredentials, {\n    description: 'Tencent Cloud credentials',\n    nullable: true,\n  })\n  Credentials?: TencentCloudStsCredentials;\n\n  /**\n   * Tencent Cloud credentials expired Unix time\n   */\n  @Field(() => Int, {\n    description: 'Tencent Cloud credentials expired Unix time.',\n    nullable: true,\n  })\n  ExpiredTime?: number;\n\n  /**\n   * Tencent Cloud credentials expired ISO8601 date\n   */\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials expired ISO8601 date.',\n    nullable: true,\n  })\n  Expiration?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TencentCloudStsService.html":{"url":"injectables/TencentCloudStsService.html","title":"injectable - TencentCloudStsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TencentCloudStsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/sts/sts.service.ts\n        \n\n            \n                Description\n            \n            \n                Tencent Cloud STS service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createClient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createClient\n                        \n                        \n                    \n                \n            \n            \n                \ncreateClient(region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/sts/sts.service.ts:14\n                \n            \n\n\n            \n                \n                    Create STS client for region.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'ap-guangzhou'\n                                    \n\n                                    \n                                        server region.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Client\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Client } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_client';\nimport { getCredential } from '../common';\n\n/**\n * Tencent Cloud STS service.\n */\n@Injectable()\nexport class TencentCloudStsService {\n  /**\n   * Create STS client for region.\n   * @param region server region.\n   */\n  createClient(region: string = 'ap-guangzhou'): Client {\n    return new Client({\n      credential: getCredential(),\n      region,\n      profile: {\n        httpProfile: {\n          endpoint: 'sts.tencentcloudapi.com',\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateViewerArgs.html":{"url":"classes/UpdateViewerArgs.html","title":"class - UpdateViewerArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateViewerArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-viewer.args.ts\n        \n\n            \n                Description\n            \n            \n                Update viewer args.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                newPhoneSecurity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserUpdateInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User update input'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-viewer.args.ts:20\n                            \n                        \n\n                \n                    \n                        User update input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            newPhoneSecurity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Update phone need set new phone security code'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-viewer.args.ts:29\n                            \n                        \n\n                \n                    \n                        Update phone need set new phone security code\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field, PickType } from '@nestjs/graphql';\nimport { CreateAuthorizationTokenArgs } from 'src/authorization-token/dto/create-authorization-token.args';\nimport { UserUpdateInput } from './user-update.input';\n\n/**\n * Update viewer args.\n */\n@ArgsType()\nexport class UpdateViewerArgs extends PickType(\n  CreateAuthorizationTokenArgs,\n  ['security', 'type'] as const,\n  ArgsType,\n) {\n  /**\n   * User update input\n   */\n  @Field(() => UserUpdateInput, {\n    description: 'User update input',\n  })\n  data: UserUpdateInput;\n\n  /**\n   * Update phone need set new phone security code\n   */\n  @Field(() => String, {\n    nullable: true,\n    description: 'Update phone need set new phone security code',\n  })\n  newPhoneSecurity?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n            \n                Description\n            \n            \n                User entity.\n\n            \n\n            \n                Extends\n            \n            \n                        UserInterface\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User registered date at.'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:45\n\n                            \n                        \n\n                \n                    \n                        User registered date at.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User ID'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:28\n\n                            \n                        \n\n                \n                    \n                        User ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User login name'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:37\n\n                            \n                        \n\n                \n                    \n                        User login name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UserProfile\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'The user profile'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:53\n\n                            \n                        \n\n                \n                    \n                        User profile.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType } from '@nestjs/graphql';\nimport { UserInterface } from './user.interface';\n\n/**\n * User entity.\n */\n@ObjectType({\n  implements: [UserInterface],\n  description: 'User entity',\n})\nexport class UserEntity extends UserInterface {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInterface.html":{"url":"classes/UserInterface.html","title":"class - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                User interface.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User registered date at.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.interface.ts:45\n                            \n                        \n\n                \n                    \n                        User registered date at.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.interface.ts:28\n                            \n                        \n\n                \n                    \n                        User ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User login name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.interface.ts:37\n                            \n                        \n\n                \n                    \n                        User login name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UserProfile\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'The user profile'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.interface.ts:53\n                            \n                        \n\n                \n                    \n                        User profile.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, GraphQLISODateTime, ID, InterfaceType } from '@nestjs/graphql';\nimport { Prisma, UserProfile } from '@prisma/client';\nimport { UserProfileEntity } from '../profile/entities/profile.entity';\n\n/**\n * User interface.\n */\n@InterfaceType({\n  description: 'User interface.',\n})\nexport class UserInterface\n  implements\n    Omit,\n      'phone' | 'email' | 'password'\n    > {\n  /**\n   * User ID\n   */\n  @Field((type) => ID, {\n    description: 'User ID',\n  })\n  id: string;\n\n  /**\n   * User login name\n   */\n  @Field((type) => String, {\n    nullable: true,\n    description: 'User login name',\n  })\n  login: string;\n\n  /**\n   * User registered date at.\n   */\n  @Field((type) => GraphQLISODateTime, {\n    description: 'User registered date at.',\n  })\n  createdAt: Date;\n\n  /**\n   * User profile.\n   */\n  @Field((type) => UserProfileEntity, {\n    description: 'The user profile',\n  })\n  profile: UserProfile;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInterfaceResolver.html":{"url":"classes/UserInterfaceResolver.html","title":"class - UserInterfaceResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInterfaceResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user-interface.resolver.ts\n        \n\n            \n                Description\n            \n            \n                GraphQL user interface resolver.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userProfileService: UserProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user-interface.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            Create GraphQL user interface resolver\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userProfileService\n                                                  \n                                                        \n                                                                        UserProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User profile service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            profile\n                        \n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user/user-interface.resolver.ts:23\n                \n            \n\n\n            \n                \n                    Resolve user profile field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent context user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Parent, ResolveField, Resolver } from '@nestjs/graphql';\nimport { User } from '@prisma/client';\nimport { UserInterface } from './entities/user.interface';\nimport { UserProfileEntity } from './profile/entities/profile.entity';\nimport { UserProfileService } from './profile/profile.service';\n\n/**\n * GraphQL user interface resolver.\n */\n@Resolver(() => UserInterface)\nexport class UserInterfaceResolver {\n  /**\n   * Create GraphQL user interface resolver\n   * @param userProfileService User profile service.\n   */\n  constructor(private readonly userProfileService: UserProfileService) {}\n\n  /**\n   * Resolve user profile field.\n   * @param user Parent context user.\n   */\n  @ResolveField(() => UserProfileEntity)\n  profile(@Parent() user: User) {\n    return this.userProfileService.resolveProfile(user);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nSecurityModule\n\nSecurityModule\n\nUserModule -->\n\nSecurityModule->UserModule\n\n\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserModule -->\n\nUserProfileModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n        \n            Description\n        \n        \n            User module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            SecurityModule\n                        \n                        \n                            UserProfileModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { SecurityModule } from 'src/security/security.module';\nimport { UserProfileModule } from './profile/profile.module';\nimport { UserInterfaceResolver } from './user-interface.resolver';\nimport { UserService } from './user.service';\nimport { ViewerResolver } from './viewer.resolver';\n\n/**\n * User module.\n */\n@Module({\n  imports: [PrismaModule, UserProfileModule, SecurityModule],\n  providers: [UserService, UserInterfaceResolver, ViewerResolver],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserOrderByInput.html":{"url":"classes/UserOrderByInput.html","title":"class - UserOrderByInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserOrderByInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user-order-by.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                login\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-order-by.input.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-order-by.input.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-order-by.input.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-order-by.input.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-order-by.input.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-order-by.input.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserProfileOrderByInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-order-by.input.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { UserProfileOrderByInput } from '../profile/dto/user-profile-order-by.input';\n\n@InputType({ description: 'User order by input' })\nexport class UserOrderByInput implements Prisma.UserOrderByInput {\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  id?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  login?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  email?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  phone?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  password?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  createdAt?: Prisma.SortOrder;\n\n  @Field(() => UserProfileOrderByInput, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  profile?: UserProfileOrderByInput;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileEntity.html":{"url":"classes/UserProfileEntity.html","title":"class - UserProfileEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/entities/profile.entity.ts\n        \n\n            \n                Description\n            \n            \n                User profile entity.\n\n            \n\n\n            \n                Implements\n            \n            \n                            UserProfileEntity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                bio\n                            \n                            \n                                location\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User avatar storage path.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:34\n                            \n                        \n\n                \n                    \n                        User avatar storage path\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User bio.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:43\n                            \n                        \n\n                \n                    \n                        User bio\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User location string.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:52\n                            \n                        \n\n                \n                    \n                        User location string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User name.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:25\n                            \n                        \n\n                \n                    \n                        User name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User profile updated at.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:61\n                            \n                        \n\n                \n                    \n                        User profile updated at\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Profile owner ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:16\n                            \n                        \n\n                \n                    \n                        Profile owner ID\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, GraphQLISODateTime, ID, ObjectType } from '@nestjs/graphql';\n\n/**\n * User profile entity.\n */\n@ObjectType({\n  description: 'User profile entity',\n})\nexport class UserProfileEntity implements UserProfileEntity {\n  /**\n   * Profile owner ID\n   */\n  @Field(() => ID, {\n    description: 'Profile owner ID',\n  })\n  userId: string;\n\n  /**\n   * User name\n   */\n  @Field((type) => String, {\n    description: 'User name.',\n    nullable: true,\n  })\n  name: string;\n\n  /**\n   * User avatar storage path\n   */\n  @Field((type) => String, {\n    description: 'User avatar storage path.',\n    nullable: true,\n  })\n  avatar: string;\n\n  /**\n   * User bio\n   */\n  @Field((type) => String, {\n    description: 'User bio.',\n    nullable: true,\n  })\n  bio: string;\n\n  /**\n   * User location string\n   */\n  @Field((type) => String, {\n    description: 'User location string.',\n    nullable: true,\n  })\n  location: string;\n\n  /**\n   * User profile updated at\n   */\n  @Field((type) => GraphQLISODateTime, {\n    description: 'User profile updated at.',\n    nullable: true,\n  })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserProfileModule.html":{"url":"modules/UserProfileModule.html","title":"module - UserProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    UserProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserProfileModule\n\n\n\ncluster_UserProfileModule_providers\n\n\n\ncluster_UserProfileModule_imports\n\n\n\ncluster_UserProfileModule_exports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserProfileModule -->\n\nPrismaModule->UserProfileModule\n\n\n\n\n\nUserProfileService \n\nUserProfileService \n\nUserProfileService  -->\n\nUserProfileModule->UserProfileService \n\n\n\n\n\nUserProfileService\n\nUserProfileService\n\nUserProfileModule -->\n\nUserProfileService->UserProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/profile/profile.module.ts\n        \n\n\n        \n            Description\n        \n        \n            User profile module.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserProfileService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserProfileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { UserProfileResolver } from './profile.resolver';\nimport { UserProfileService } from './profile.service';\n\n/**\n * User profile module.\n */\n@Module({\n  imports: [PrismaModule],\n  providers: [UserProfileService, UserProfileResolver],\n  exports: [UserProfileService],\n})\nexport class UserProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileOrderByInput.html":{"url":"classes/UserProfileOrderByInput.html","title":"class - UserProfileOrderByInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileOrderByInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/dto/user-profile-order-by.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                bio\n                            \n                            \n                                    Optional\n                                location\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-order-by.input.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            bio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-order-by.input.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-order-by.input.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-order-by.input.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-order-by.input.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Prisma.SortOrder\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Field sort order'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-order-by.input.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\n\n@InputType({ description: 'User profile order by input' })\nexport class UserProfileOrderByInput implements Prisma.UserProfileOrderByInput {\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  userId?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  name?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  avatar?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  bio?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  location?: Prisma.SortOrder;\n\n  @Field(() => Prisma.SortOrder, {\n    nullable: true,\n    description: 'Field sort order',\n  })\n  updatedAt?: Prisma.SortOrder;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileRelationFilter.html":{"url":"classes/UserProfileRelationFilter.html","title":"class - UserProfileRelationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileRelationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/dto/user-profile-relation.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                is\n                            \n                            \n                                    Optional\n                                isNot\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            is\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserProfileWhereInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'is where input'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-relation.filter.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            isNot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserProfileWhereInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'is not where input'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-relation.filter.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { UserProfileWhereInput } from './user-profile-where.input';\n\n@InputType({ description: 'User profile where filter' })\nexport class UserProfileRelationFilter\n  implements Prisma.UserProfileRelationFilter {\n  @Field(() => UserProfileWhereInput, {\n    nullable: true,\n    description: 'is where input',\n  })\n  is?: UserProfileWhereInput;\n\n  @Field(() => UserProfileWhereInput, {\n    nullable: true,\n    description: 'is not where input',\n  })\n  isNot?: UserProfileWhereInput;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileResolver.html":{"url":"classes/UserProfileResolver.html","title":"class - UserProfileResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/profile.resolver.ts\n        \n\n            \n                Description\n            \n            \n                User prifle entity resolver.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                updateViewerProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileService: UserProfileService, prismaClient: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/user/profile/profile.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            Create user prifle entity resolver\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        UserProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User profile service.\n\n                                                        \n                                                \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateViewerProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViewerProfile(context: ExecutionContext, data: UserProfileUpdateInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Update viewer profile'})@AuthorizationWith()\n                \n            \n\n            \n                \n                    Defined in src/user/profile/profile.resolver.ts:33\n                \n            \n\n\n            \n                \n                    Update viewer profile.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Socfony execution context.\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                UserProfileUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User profile update input.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Mutation, Resolver } from '@nestjs/graphql';\nimport { PrismaClient } from '@prisma/client';\nimport { AuthorizationWith } from 'src/authorization.decorator';\nimport { ExecutionContext } from 'src/execution-context';\nimport { UserProfileUpdateInput } from './dto/profile-update.input';\nimport { UserProfileEntity } from './entities/profile.entity';\nimport { UserProfileService } from './profile.service';\n\n/**\n * User prifle entity resolver.\n */\n@Resolver(() => UserProfileEntity)\nexport class UserProfileResolver {\n  /**\n   * Create user prifle entity resolver\n   * @param profileService User profile service.\n   * @param prismaClient Prisma client.\n   */\n  constructor(\n    private readonly profileService: UserProfileService,\n    private readonly prismaClient: PrismaClient,\n  ) {}\n\n  /**\n   * Update viewer profile.\n   * @param context Socfony execution context.\n   * @param data User profile update input.\n   */\n  @Mutation(() => UserProfileEntity, {\n    description: 'Update viewer profile',\n  })\n  @AuthorizationWith()\n  async updateViewerProfile(\n    @Context() context: ExecutionContext,\n    @Args({\n      name: 'data',\n      type: () => UserProfileUpdateInput,\n      description: 'Viewer profile update data.',\n    })\n    data: UserProfileUpdateInput,\n  ) {\n    const profile = await this.profileService.resolveProfile(context.user);\n    return await this.prismaClient.userProfile.update({\n      where: { userId: profile.userId },\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserProfileService.html":{"url":"injectables/UserProfileService.html","title":"injectable - UserProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/profile.service.ts\n        \n\n            \n                Description\n            \n            \n                User profile service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolveProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/user/profile/profile.service.ts:8\n                            \n                        \n\n                \n                    \n                            Create the user profile service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resolveProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveProfile(user: User | Prisma.UserGetPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/user/profile/profile.service.ts:19\n                \n            \n\n\n            \n                \n                    Resolve user profile.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User | Prisma.UserGetPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        need resolve profile user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma, PrismaClient, User, UserProfile } from '@prisma/client';\n\n/**\n * User profile service.\n */\n@Injectable()\nexport class UserProfileService {\n  /**\n   * Create the user profile service.\n   * @param prisma Prisma client.\n   */\n  constructor(private readonly prisma: PrismaClient) {}\n\n  /**\n   * Resolve user profile.\n   * @param user need resolve profile user.\n   */\n  async resolveProfile(\n    user:\n      | User\n      | Prisma.UserGetPayload,\n  ): Promise {\n    let { profile } = user as Prisma.UserGetPayload;\n    if (profile) {\n      return profile;\n    }\n    profile = await this.prisma.userProfile.findUnique({\n      where: { userId: user.id },\n      rejectOnNotFound: false,\n    });\n    if (profile) {\n      return profile;\n    }\n\n    return await this.prisma.userProfile.create({\n      data: { userId: user.id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileUpdateInput.html":{"url":"classes/UserProfileUpdateInput.html","title":"class - UserProfileUpdateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileUpdateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/dto/profile-update.input.ts\n        \n\n            \n                Description\n            \n            \n                User profile update input\n\n            \n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, OmitType, PartialType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { UserProfileEntity } from '../entities/profile.entity';\n\n/**\n * User profile update input\n */\n@InputType({\n  description: 'User profile update input',\n})\nexport class UserProfileUpdateInput\n  extends OmitType(\n    PartialType(UserProfileEntity),\n    ['updatedAt', 'userId'] as const,\n    InputType,\n  )\n  implements Omit {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileWhereInput.html":{"url":"classes/UserProfileWhereInput.html","title":"class - UserProfileWhereInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileWhereInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/dto/user-profile-where.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                AND\n                            \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                bio\n                            \n                            \n                                    Optional\n                                location\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                NOT\n                            \n                            \n                                    Optional\n                                OR\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            AND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserProfileWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'AND where'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User ID filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            bio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User ID filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User ID filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User ID filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            NOT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserProfileWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'NOT where'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            OR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserProfileWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'OR where'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRelationFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User relation filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User ID filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/dto/user-profile-where.input.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { StringFilter } from 'src/graphql';\nimport { UserRelationFilter } from 'src/user/dto/user-relation.filter';\n\n@InputType({ description: 'User profile where input' })\nexport class UserProfileWhereInput\n  implements Omit {\n  @Field(() => [UserProfileWhereInput], {\n    nullable: true,\n    description: 'AND where',\n  })\n  AND?: UserProfileWhereInput[];\n\n  @Field(() => [UserProfileWhereInput], {\n    nullable: true,\n    description: 'OR where',\n  })\n  OR?: UserProfileWhereInput[];\n\n  @Field(() => [UserProfileWhereInput], {\n    nullable: true,\n    description: 'NOT where',\n  })\n  NOT?: UserProfileWhereInput[];\n\n  @Field(() => StringFilter, { nullable: true, description: 'User ID filter' })\n  userId?: StringFilter;\n\n  @Field(() => UserRelationFilter, {\n    nullable: true,\n    description: 'User relation filter',\n  })\n  user?: UserRelationFilter;\n\n  @Field(() => StringFilter, { nullable: true, description: 'User ID filter' })\n  name?: StringFilter;\n\n  @Field(() => StringFilter, { nullable: true, description: 'User ID filter' })\n  avatar?: StringFilter;\n\n  @Field(() => StringFilter, { nullable: true, description: 'User ID filter' })\n  bio?: StringFilter;\n\n  @Field(() => StringFilter, { nullable: true, description: 'User ID filter' })\n  location?: StringFilter;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRelationFilter.html":{"url":"classes/UserRelationFilter.html","title":"class - UserRelationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRelationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user-relation.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                is\n                            \n                            \n                                    Optional\n                                isNot\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            is\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserWhereInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User relation filter is'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-relation.filter.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            isNot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserWhereInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User relation filter is not'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-relation.filter.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { UserWhereInput } from './user-where.input';\n\n@InputType({\n  description: 'User Relation filter',\n})\nexport class UserRelationFilter implements Prisma.UserRelationFilter {\n  @Field(() => UserWhereInput, {\n    nullable: true,\n    description: 'User relation filter is',\n  })\n  is?: UserWhereInput;\n\n  @Field(() => UserWhereInput, {\n    nullable: true,\n    description: 'User relation filter is not',\n  })\n  isNot?: UserWhereInput;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.resolver.ts\n        \n\n            \n                Description\n            \n            \n                User entity resolver\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaClient: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.resolver.ts:12\n                            \n                        \n\n                \n                    \n                            Create user entity resolver.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            user\n                        \n                        \n                    \n                \n            \n            \n                \nuser(where: UserWhereUniqueInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {description: 'query where.'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.resolver.ts:26\n                \n            \n\n\n            \n                \n                    Query a user where unique\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                                UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Query a user where unique\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Query, Resolver } from '@nestjs/graphql';\nimport { PrismaClient } from '@prisma/client';\nimport { USER_NOT_FOUND } from 'src/constants';\nimport { UserWhereUniqueInput } from './dto';\nimport { UserEntity } from './entities/user.entity';\nimport { UserUnion } from './entities/user.union';\n\n/**\n * User entity resolver\n */\n@Resolver(() => UserEntity)\nexport class UserResolver {\n  /**\n   * Create user entity resolver.\n   * @param prismaClient Prisma client.\n   */\n  constructor(private readonly prismaClient: PrismaClient) {}\n\n  /**\n   * Query a user where unique\n   * @param where Query a user where unique\n   */\n  @Query(() => UserUnion, {\n    description: 'query where.',\n  })\n  user(\n    @Args({\n      name: 'where',\n      type: () => UserWhereUniqueInput,\n      description: 'query where',\n    })\n    where: UserWhereUniqueInput,\n  ) {\n    return this.prismaClient.user.findUnique({\n      where,\n      rejectOnNotFound: () => new Error(USER_NOT_FOUND),\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n            \n                Description\n            \n            \n                User service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                comparePassword\n                            \n                            \n                                    Async\n                                compareSecurity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(securitySmsService: SecuritySmsService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            Create user service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        securitySmsService\n                                                  \n                                                        \n                                                                        SecuritySmsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Security SMS service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            comparePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    comparePassword(user: User, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:23\n                \n            \n\n\n            \n                \n                    Compore user password.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Need compare password user.\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        input password.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            compareSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    compareSecurity(user: User, type: UserSecurityCompareType, security: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:34\n                \n            \n\n\n            \n                \n                    Compare secuity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Need compare user.\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                UserSecurityCompareType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        compare type.\n\n                                    \n                                \n                                \n                                    security\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Security object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { User } from '@prisma/client';\nimport { PasswordHelper } from 'src/helper';\nimport { SecuritySmsService } from 'src/security/security-sms.service';\nimport { UserSecurityCompareType } from './enums';\n\n/**\n * User service.\n */\n@Injectable()\nexport class UserService {\n  /**\n   * Create user service.\n   * @param securitySmsService Security SMS service.\n   */\n  constructor(private readonly securitySmsService: SecuritySmsService) {}\n\n  /**\n   * Compore user password.\n   * @param user Need compare password user.\n   * @param password input password.\n   */\n  async comparePassword(user: User, password: string): Promise {\n    if (!user?.password) return false;\n    return await PasswordHelper.compare(password, user.password);\n  }\n\n  /**\n   * Compare secuity.\n   * @param user Need compare user.\n   * @param type compare type.\n   * @param security Security object.\n   */\n  async compareSecurity(\n    user: User,\n    type: UserSecurityCompareType,\n    security: string,\n  ): Promise {\n    switch (type) {\n      case UserSecurityCompareType.PASSWORD:\n        return await this.comparePassword(user, security);\n      case UserSecurityCompareType.SMS_CODE:\n        const value = await this.securitySmsService.compareCode(\n          user.phone,\n          security,\n        );\n        if (value) {\n          return () => this.securitySmsService.updateCodeToUsed(value);\n        }\n        return false;\n      default:\n        return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserUpdateInput.html":{"url":"classes/UserUpdateInput.html","title":"class - UserUpdateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserUpdateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user-update.input.ts\n        \n\n            \n                Description\n            \n            \n                User update input.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Pick\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User new password', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-update.input.ts:25\n                            \n                        \n\n                \n                    \n                        User new password.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, PartialType, PickType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { ViewerEntity } from '../entities/viewer.entity';\n\n/**\n * User update input.\n */\n@InputType({\n  description: 'User update input',\n})\nexport class UserUpdateInput\n  extends PartialType(\n    PickType(ViewerEntity, ['email', 'login', 'phone']),\n    InputType,\n  )\n  implements\n    Pick {\n  /**\n   * User new password.\n   */\n  @Field(() => String, {\n    description: 'User new password',\n    nullable: true,\n  })\n  password?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserWhereInput.html":{"url":"classes/UserWhereInput.html","title":"class - UserWhereInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserWhereInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user-where.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                AND\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                login\n                            \n                            \n                                    Optional\n                                moments\n                            \n                            \n                                    Optional\n                                NOT\n                            \n                            \n                                    Optional\n                                OR\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            AND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'AND where'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DateTimeFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'created at date time filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'E-Mail filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'ID filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'login name filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            moments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MomentListRelationFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'user moment list relation filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            NOT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'NOT where'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            OR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserWhereInput[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'OR where'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StringFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'user phone numberfilter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserProfileRelationFilter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'user profile relation filter'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where.input.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { DateTimeFilter, StringFilter } from 'src/graphql';\nimport { MomentListRelationFilter } from 'src/moment/dto/moment-list-relation.filter';\nimport { UserProfileRelationFilter } from '../profile/dto/user-profile-relation.filter';\n\n@InputType({\n  description: 'User where input',\n})\nexport class UserWhereInput\n  implements Omit {\n  @Field(() => [UserWhereInput], { nullable: true, description: 'AND where' })\n  AND?: UserWhereInput[];\n\n  @Field(() => [UserWhereInput], { nullable: true, description: 'OR where' })\n  OR?: UserWhereInput[];\n\n  @Field(() => [UserWhereInput], { nullable: true, description: 'NOT where' })\n  NOT?: UserWhereInput[];\n\n  @Field(() => StringFilter, { nullable: true, description: 'ID filter' })\n  id?: StringFilter;\n\n  @Field(() => StringFilter, {\n    nullable: true,\n    description: 'login name filter',\n  })\n  login?: StringFilter;\n\n  @Field(() => StringFilter, { nullable: true, description: 'E-Mail filter' })\n  email?: StringFilter;\n\n  @Field(() => StringFilter, {\n    nullable: true,\n    description: 'user phone numberfilter',\n  })\n  phone?: StringFilter;\n\n  @Field(() => DateTimeFilter, {\n    nullable: true,\n    description: 'created at date time filter',\n  })\n  createdAt?: DateTimeFilter;\n\n  @Field(() => UserProfileRelationFilter, {\n    nullable: true,\n    description: 'user profile relation filter',\n  })\n  profile?: UserProfileRelationFilter;\n\n  @Field(() => UserProfileRelationFilter, {\n    nullable: true,\n    description: 'user moment list relation filter',\n  })\n  moments?: MomentListRelationFilter;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserWhereUniqueInput.html":{"url":"classes/UserWhereUniqueInput.html","title":"class - UserWhereUniqueInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserWhereUniqueInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user-where-unique.input.ts\n        \n\n            \n                Description\n            \n            \n                User where inique input\n\n            \n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ID, InputType, PartialType, PickType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { ViewerEntity } from '../entities/viewer.entity';\n\n/**\n * User where inique input\n */\n@InputType({\n  description: 'User where inique input',\n})\nexport class UserWhereUniqueInput\n  extends PickType(\n    PartialType(ViewerEntity),\n    ['id', 'login', 'email', 'phone'] as const,\n    InputType,\n  )\n  implements Prisma.UserWhereUniqueInput {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewerEntity.html":{"url":"classes/ViewerEntity.html","title":"class - ViewerEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewerEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/viewer.entity.ts\n        \n\n            \n                Description\n            \n            \n                Viewer entity.\n\n            \n\n            \n                Extends\n            \n            \n                        UserInterface\n            \n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                phone\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User bound E-Mail address.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/viewer.entity.ts:22\n                            \n                        \n\n                \n                    \n                        User bound E-Mail address.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User bound Phone full number.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/viewer.entity.ts:31\n                            \n                        \n\n                \n                    \n                        User bound Phone full number.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User registered date at.'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:45\n\n                            \n                        \n\n                \n                    \n                        User registered date at.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User ID'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:28\n\n                            \n                        \n\n                \n                    \n                        User ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User login name'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:37\n\n                            \n                        \n\n                \n                    \n                        User login name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UserProfile\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'The user profile'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:53\n\n                            \n                        \n\n                \n                    \n                        User profile.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { User } from '@prisma/client';\nimport { UserInterface } from './user.interface';\n\n/**\n * Viewer entity.\n */\n@ObjectType({\n  implements: [UserInterface],\n  description: 'Viewer entity.',\n})\nexport class ViewerEntity\n  extends UserInterface\n  implements Omit {\n  /**\n   * User bound E-Mail address.\n   */\n  @Field((type) => String, {\n    nullable: true,\n    description: 'User bound E-Mail address.',\n  })\n  email: string;\n\n  /**\n   * User bound Phone full number.\n   */\n  @Field((type) => String, {\n    nullable: true,\n    description: 'User bound Phone full number.',\n  })\n  phone: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewerResolver.html":{"url":"classes/ViewerResolver.html","title":"class - ViewerResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewerResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/viewer.resolver.ts\n        \n\n            \n                Description\n            \n            \n                Viewer entity resolver.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                phone\n                            \n                            \n                                    Async\n                                updateViewer\n                            \n                            \n                                viewer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, prismaClient: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/user/viewer.resolver.ts:38\n                            \n                        \n\n                \n                    \n                            Create viewer entity resolver.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User service.\n\n                                                        \n                                                \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Prisma client.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            email\n                        \n                        \n                    \n                \n            \n            \n                \nemail(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user/viewer.resolver.ts:68\n                \n            \n\n\n            \n                \n                    Resolve viewer email field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent context user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            phone\n                        \n                        \n                    \n                \n            \n            \n                \nphone(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user/viewer.resolver.ts:54\n                \n            \n\n\n            \n                \n                    Resolver viewer phone field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent context user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateViewer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViewer(context: ExecutionContext, args: UpdateViewerArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Update viewer'})@AuthorizationWith()\n                \n            \n\n            \n                \n                    Defined in src/user/viewer.resolver.ts:98\n                \n            \n\n\n            \n                \n                    Update viewer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Scofony exection context\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                                UpdateViewerArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Update viewer args.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            viewer\n                        \n                        \n                    \n                \n            \n            \n                \nviewer(context: ExecutionContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {description: 'Query the HTTP endpoint Authorization user.'})@AuthorizationWith()\n                \n            \n\n            \n                \n                    Defined in src/user/viewer.resolver.ts:85\n                \n            \n\n\n            \n                \n                    Query the HTTP endpoint Authorization user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Socfony execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Args,\n  Mutation,\n  Parent,\n  Query,\n  ResolveField,\n  Resolver,\n} from '@nestjs/graphql';\nimport { PrismaClient, User } from '@prisma/client';\nimport { AuthorizationWith } from 'src/authorization.decorator';\nimport {\n  SECURITY_COMPARE_FAILED,\n  USER_EMAIL_FIELD_EXISTED,\n  USER_LOGIN_FIELD_EXISTED,\n  USER_PHONE_FIELD_EXISTED,\n} from 'src/constants';\nimport { Context } from 'src/context.decorator';\nimport { ExecutionContext } from 'src/execution-context';\nimport { PasswordHelper } from 'src/helper';\nimport { UpdateViewerArgs } from './dto/update-viewer.args';\nimport { ViewerEntity } from './entities/viewer.entity';\nimport { UserSecurityCompareType } from './enums';\nimport { UserService } from './user.service';\n\n/**\n * User error codes.\n */\nconst constants = {\n  USER_LOGIN_FIELD_EXISTED,\n  USER_PHONE_FIELD_EXISTED,\n  USER_EMAIL_FIELD_EXISTED,\n};\n\n/**\n * Viewer entity resolver.\n */\n@Resolver(() => ViewerEntity)\nexport class ViewerResolver {\n  /**\n   * Create viewer entity resolver.\n   * @param userService User service.\n   * @param prismaClient Prisma client.\n   */\n  constructor(\n    private readonly userService: UserService,\n    private readonly prismaClient: PrismaClient,\n  ) {}\n\n  /**\n   * Resolver viewer phone field.\n   * @param user Parent context user.\n   */\n  @ResolveField(() => String)\n  phone(@Parent() user: User) {\n    const { phone } = user;\n    if (phone) {\n      return phone.replace(/(.*)\\d{4}(\\d{4})/, '$1****$2');\n    }\n\n    return phone;\n  }\n\n  /**\n   * Resolve viewer email field.\n   * @param user Parent context user.\n   */\n  @ResolveField(() => String)\n  email(@Parent() user: User) {\n    const { email } = user;\n    if (email) {\n      return email.replace(/^(\\w{1}).*?(\\w{1}?)\\@(.*)$/, '$1***$2@$3');\n    }\n\n    return email;\n  }\n\n  /**\n   * Query the HTTP endpoint Authorization user.\n   * @param context Socfony execution context.\n   */\n  @Query(() => ViewerEntity, {\n    description: 'Query the HTTP endpoint Authorization user.',\n  })\n  @AuthorizationWith()\n  viewer(@Context() context: ExecutionContext) {\n    return context.user;\n  }\n\n  /**\n   * Update viewer.\n   * @param context Scofony exection context\n   * @param args Update viewer args.\n   */\n  @Mutation(() => ViewerEntity, {\n    description: 'Update viewer',\n  })\n  @AuthorizationWith()\n  async updateViewer(\n    @Context() context: ExecutionContext,\n    @Args({\n      type: () => UpdateViewerArgs,\n      description: 'Update viewer args.',\n    })\n    args: UpdateViewerArgs,\n  ) {\n    const { data, security, type, newPhoneSecurity } = args;\n    const { user } = context;\n    for await (const key of Object.keys(data)) {\n      // Convert to password hash\n      if (key === 'password') {\n        data[key] = await PasswordHelper.hash(data[key]);\n        continue;\n      }\n\n      // Check whether the unique field is used by other users\n      const other = await this.prismaClient.user.findUnique({\n        where: { [key]: data[key] },\n        rejectOnNotFound: false,\n      });\n      if (other && other.id !== user.id) {\n        throw new Error(constants[`USER_${key.toUpperCase()}_FIELD_EXISTED`]);\n      }\n\n      // Check whether the new mobile phone number verification code matches\n      if (key === 'phone' && data[key] !== user.phone) {\n        const compared = await this.userService.compareSecurity(\n          Object.assign({}, user, { phone: data[key] }),\n          UserSecurityCompareType.SMS_CODE,\n          newPhoneSecurity,\n        );\n        if (compared) {\n          if (compared instanceof Function) {\n            compared();\n          }\n          continue;\n        }\n\n        throw new Error(SECURITY_COMPARE_FAILED);\n      }\n    }\n    const compared = await this.userService.compareSecurity(\n      user,\n      type,\n      security,\n    );\n    if (compared) {\n      if (compared instanceof Function) {\n        compared();\n      }\n      return (context.user = await this.prismaClient.user.update({\n        where: { id: user.id },\n        data,\n      }));\n    }\n\n    throw new Error(SECURITY_COMPARE_FAILED);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.config.ts\n            \n            interface\n            SocfonyConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            function\n            getConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            function\n            loadConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/authorization-token.resolver.ts\n            \n            class\n            AuthorizationTokenEntityResolver\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/authorization-token/authorization-token.service.ts\n            \n            injectable\n            AuthorizationTokenService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_METADATA_HAS_AUTHORIZATION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_METADATA_HAS_AUTHORIZATION_TYPE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_DEFAULT_EXPIRED_IN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_DEFAULT_EXPIRED_UNIT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_IN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_UNIT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_VVALIDITY_PERIOD_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization-token/dto/create-authorization-token.args.ts\n            \n            class\n            CreateAuthorizationTokenArgs\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/authorization-token/entities/authorization-token.entity.ts\n            \n            class\n            AuthorizationTokenEntity\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/authorization-token/types.ts\n            \n            interface\n            AuthorizationTokenValidityPeriod\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/authorization.decorator.ts\n            \n            interface\n            AuthDecoratorOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/authorization.decorator.ts\n            \n            function\n            Authorization\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization.decorator.ts\n            \n            variable\n            AuthorizationWith\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization.decorator.ts\n            \n            variable\n            AuthorizationWithout\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization.guard.ts\n            \n            guard\n            AuthorizationGuard\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            AUTHORIZATION_TOKEN_NOT_FOUND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            MEDIA_TYPE_DONT_SUPPORTED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            MOMENT_NOT_FOUND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            SECURITY_COMPARE_FAILED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            UNAUTHORIZED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_EMAIL_FIELD_EXISTED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_LOGIN_FIELD_EXISTED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_NOT_FOUND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_NOT_SET_PHONE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_PHONE_FIELD_EXISTED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/context.decorator.ts\n            \n            variable\n            Context\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/execution-context.ts\n            \n            class\n            ExecutionContext\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/graphql/filters/date-time.filter.ts\n            \n            class\n            DateTimeFilter\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/graphql/filters/string.filter.ts\n            \n            class\n            StringFilter\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/graphql/graphql.module.ts\n            \n            variable\n            GraphQLModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            alphabet\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            custom\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            id\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            numeral\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            readability\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/password.helper.ts\n            \n            function\n            compare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/password.helper.ts\n            \n            function\n            hash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/moment/dto/moment-find-first.args.ts\n            \n            class\n            MomentFindFirstArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/moment/dto/moment-find-many.args.ts\n            \n            class\n            MomentFindManyArgs\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/moment/dto/moment-list-relation.filter.ts\n            \n            class\n            MomentListRelationFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/moment/dto/moment-order-by.input.ts\n            \n            class\n            MomentOrderByInput\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/moment/dto/moment-where-unique.input.ts\n            \n            class\n            MomentWhereUniqueInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/moment/dto/moment-where.input.ts\n            \n            class\n            MomentWhereInput\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/moment/entities/media.entity.ts\n            \n            class\n            MomentAudioMedia\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/moment/entities/media.entity.ts\n            \n            class\n            MomentImageMedia\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/moment/entities/media.entity.ts\n            \n            class\n            MomentMediaCommon\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/moment/entities/media.entity.ts\n            \n            class\n            MomentVideoMedia\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/moment/entities/media.entity.ts\n            \n            variable\n            MomentMedia\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/moment/entities/moment.entity.ts\n            \n            class\n            MomentEntity\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/moment/moment.resolver.ts\n            \n            class\n            MomentResolver\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/prisma/middleware/logger.middleware.ts\n            \n            function\n            PrismaLoggerMiddleware\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.module.ts\n            \n            variable\n            client\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/security/security-sms.resolver.ts\n            \n            class\n            SecuritySmsResolver\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/security/security-sms.service.ts\n            \n            injectable\n            SecuritySmsService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/tencent-cloud/common/index.ts\n            \n            function\n            getCredential\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tencent-cloud/cos/cos.resolver.ts\n            \n            class\n            TencentCloudCosResolver\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/tencent-cloud/cos/entities/cos.entity.ts\n            \n            class\n            TencentCloudCosCredentials\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/tencent-cloud/cos/soc.service.ts\n            \n            injectable\n            TencentCloudCosService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/tencent-cloud/sms/sms.service.ts\n            \n            injectable\n            TencentCloudSmsService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/tencent-cloud/sts/entities/sts.entity.ts\n            \n            class\n            TencentCloudStsCredentials\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/tencent-cloud/sts/entities/sts.entity.ts\n            \n            class\n            TencentCloudStsFederationToken\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/tencent-cloud/sts/sts.service.ts\n            \n            injectable\n            TencentCloudStsService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/user/dto/update-viewer.args.ts\n            \n            class\n            UpdateViewerArgs\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/dto/user-order-by.input.ts\n            \n            class\n            UserOrderByInput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/dto/user-relation.filter.ts\n            \n            class\n            UserRelationFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/user-update.input.ts\n            \n            class\n            UserUpdateInput\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/user/dto/user-where-unique.input.ts\n            \n            class\n            UserWhereUniqueInput\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/dto/user-where.input.ts\n            \n            class\n            UserWhereInput\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            UserEntity\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/user/entities/user.interface.ts\n            \n            class\n            UserInterface\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/user/entities/user.union.ts\n            \n            function\n            resolveType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.union.ts\n            \n            variable\n            UserUnion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/entities/viewer.entity.ts\n            \n            class\n            ViewerEntity\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/user/profile/dto/profile-update.input.ts\n            \n            class\n            UserProfileUpdateInput\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/profile/dto/user-profile-order-by.input.ts\n            \n            class\n            UserProfileOrderByInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/profile/dto/user-profile-relation.filter.ts\n            \n            class\n            UserProfileRelationFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/profile/dto/user-profile-where.input.ts\n            \n            class\n            UserProfileWhereInput\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/profile/entities/profile.entity.ts\n            \n            class\n            UserProfileEntity\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/user/profile/profile.resolver.ts\n            \n            class\n            UserProfileResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/profile/profile.service.ts\n            \n            injectable\n            UserProfileService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/user-interface.resolver.ts\n            \n            class\n            UserInterfaceResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/user/viewer.resolver.ts\n            \n            class\n            ViewerResolver\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/user/viewer.resolver.ts\n            \n            variable\n            constants\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.12\n        \n            @nestjs/core : ^7.6.12\n        \n            @nestjs/graphql : ^7.9.9\n        \n            @nestjs/platform-express : ^7.6.12\n        \n            @prisma/client : ^2.17.0\n        \n            apollo-server-express : ^2.21.0\n        \n            bcrypt : ^5.0.0\n        \n            class-transformer : ^0.3.2\n        \n            class-validator : ^0.13.1\n        \n            dayjs : ^1.10.4\n        \n            dotenv : ^8.2.0\n        \n            express : ^4.17.1\n        \n            graphql : ^15.5.0\n        \n            nanoid : ^3.1.20\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^6.6.3\n        \n            tencentcloud-sdk-nodejs : ^4.0.65\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllowUploadFileType   (src/.../cos.resolver.ts)\n                        \n                        \n                            HasTokenExpiredType   (src/.../enums.ts)\n                        \n                        \n                            MomentMediaType   (src/.../media.entity.ts)\n                        \n                        \n                            UserSecurityCompareType   (src/.../enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tencent-cloud/cos/cos.resolver.ts\n    \n        \n            \n                \n                    \n                        \n                        AllowUploadFileType\n                    \n                \n                    \n                        \n                            Allow upload File MIME-type.\n\n                        \n                    \n                        \n                            \n                                 JPG\n                            \n                        \n                        \n                            \n                                Value : .jpg\n                            \n                        \n                        \n                            \n                                 PNG\n                            \n                        \n                        \n                            \n                                Value : .png\n                            \n                        \n                        \n                            \n                                 GIF\n                            \n                        \n                        \n                            \n                                Value : .gif\n                            \n                        \n                        \n                            \n                                 MP4\n                            \n                        \n                        \n                            \n                                Value : .mp4\n                            \n                        \n                        \n                            \n                                 OGG\n                            \n                        \n                        \n                            \n                                Value : .ogg\n                            \n                        \n                        \n                            \n                                 MP3\n                            \n                        \n                        \n                            \n                                Value : .mp3\n                            \n                        \n                        \n                            \n                                 WAV\n                            \n                        \n                        \n                            \n                                Value : .wav\n                            \n                        \n            \n        \n\n    src/authorization-token/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        HasTokenExpiredType\n                    \n                \n                    \n                        \n                            AuthorizationToken has expired type.\n\n                        \n                    \n                        \n                            \n                                 AUTH\n                            \n                        \n                        \n                            \n                                 REFRESH\n                            \n                        \n            \n        \n\n    src/moment/entities/media.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        MomentMediaType\n                    \n                \n                    \n                        \n                            Media type.\n\n                        \n                    \n                        \n                            \n                                 VIDEO\n                            \n                        \n                        \n                            \n                                 IMAGE\n                            \n                        \n                        \n                            \n                                 AUDIO\n                            \n                        \n            \n        \n\n    src/user/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        UserSecurityCompareType\n                    \n                \n                    \n                        \n                            User security compare type.\n\n                        \n                    \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                 SMS_CODE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Authorization   (src/.../authorization.decorator.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            compare   (src/.../password.helper.ts)\n                        \n                        \n                            getConfig   (src/.../app.config.ts)\n                        \n                        \n                            getCredential   (src/.../index.ts)\n                        \n                        \n                            hash   (src/.../password.helper.ts)\n                        \n                        \n                            loadConfig   (src/.../app.config.ts)\n                        \n                        \n                            PrismaLoggerMiddleware   (src/.../logger.middleware.ts)\n                        \n                        \n                            resolveType   (src/.../user.union.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/authorization.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Authorization\n                        \n                        \n                    \n                \n            \n            \n                \nAuthorization(options?)\n                \n            \n\n\n\n\n            \n                \n                    Need validate HTTP endpoint Authorization token decorator.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Create SOcfony bootstrap.\n\n\n                \n            \n        \n    \n    src/helper/password.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            compare\n                        \n                        \n                    \n                \n            \n            \n                \ncompare(password, encrypted)\n                \n            \n\n\n\n\n            \n                \n                    Compare password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        password text.\n\n                                    \n                                \n                                \n                                    encrypted\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        encrpyted password text.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hash\n                        \n                        \n                    \n                \n            \n            \n                \nhash(password)\n                \n            \n\n\n\n\n            \n                \n                    Create a password encrpyted hash text.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        password text.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n\n\n            \n                \n                    Get app config.\n\n\n                    \n                    \n                    \n                        Returns :         SocfonyConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConfig\n                        \n                        \n                    \n                \n            \n            \n                \nloadConfig(path?)\n                \n            \n\n\n\n\n            \n                \n                    Load Socfony ENV config file.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        ENV file path.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/tencent-cloud/common/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getCredential\n                        \n                        \n                    \n                \n            \n            \n                \ngetCredential()\n                \n            \n\n\n\n\n            \n                \n                    Get Tencent Cloud common credential.\n\n\n                    \n                        Returns :     Credential\n\n                    \n                \n            \n        \n    \n    src/prisma/middleware/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PrismaLoggerMiddleware\n                        \n                        \n                    \n                \n            \n            \n                \nPrismaLoggerMiddleware(logger)\n                \n            \n\n\n\n\n            \n                \n                    Create Prisma logger middleware helper.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    logger\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Logger\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Prisma.Middleware\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/user/entities/user.union.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            resolveType\n                        \n                        \n                    \n                \n            \n            \n                \nresolveType(value, context)\n                \n            \n\n\n\n\n            \n                \n                    resolve UserUnion real type\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User object.\n\n                                    \n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Application context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSocfony\nSocfony is a full-stack open source software that builds full-platform application with social networking as the core. Socfony plugin mechanism allows more developers or teams to write more functions for it, can help you solve the complexity of developing full-platform software.\n\n\n\n\nEcosystem\n\n\n\nProject\nStatus\nDescription\n\n\n\n\nSocfony App\n\nSocfony App with Flutter\n\n\n\nDocumentation\nNo document has been written yet.\nLicense\nSocfony is BSD-3-Clause licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBSD 3-Clause License\nCopyright (c) 2021, Byte Gem\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\nNeither the name of the copyright holder nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationTokenModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MomentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SecurityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TencentCloudModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthorizationTokenModule\n\n\n\ncluster_AuthorizationTokenModule_exports\n\n\n\ncluster_AuthorizationTokenModule_providers\n\n\n\ncluster_SecurityModule\n\n\n\ncluster_SecurityModule_exports\n\n\n\ncluster_SecurityModule_providers\n\n\n\ncluster_TencentCloudModule\n\n\n\ncluster_TencentCloudModule_exports\n\n\n\ncluster_TencentCloudModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserProfileModule\n\n\n\ncluster_UserProfileModule_exports\n\n\n\ncluster_UserProfileModule_providers\n\n\n\n\nAuthorizationTokenModule\n\nAuthorizationTokenModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorizationTokenModule->AppModule\n\n\n\n\n\nAuthorizationTokenService \n\nAuthorizationTokenService \n\nAuthorizationTokenService  -->\n\nAuthorizationTokenModule->AuthorizationTokenService \n\n\n\n\n\nMomentModule\n\nMomentModule\n\nAppModule -->\n\nMomentModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthorizationTokenModule -->\n\nPrismaModule->AuthorizationTokenModule\n\n\n\nMomentModule -->\n\nPrismaModule->MomentModule\n\n\n\n\n\nSecurityModule\n\nSecurityModule\n\nSecurityModule -->\n\nPrismaModule->SecurityModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserProfileModule -->\n\nPrismaModule->UserProfileModule\n\n\n\nUserModule -->\n\nSecurityModule->UserModule\n\n\n\nAppModule -->\n\nSecurityModule->AppModule\n\n\n\n\n\nSecuritySmsService \n\nSecuritySmsService \n\nSecuritySmsService  -->\n\nSecurityModule->SecuritySmsService \n\n\n\n\n\nTencentCloudModule\n\nTencentCloudModule\n\nSecurityModule -->\n\nTencentCloudModule->SecurityModule\n\n\n\nAppModule -->\n\nTencentCloudModule->AppModule\n\n\n\n\n\nTencentCloudCosService \n\nTencentCloudCosService \n\nTencentCloudCosService  -->\n\nTencentCloudModule->TencentCloudCosService \n\n\n\n\n\nTencentCloudSmsService \n\nTencentCloudSmsService \n\nTencentCloudSmsService  -->\n\nTencentCloudModule->TencentCloudSmsService \n\n\n\n\n\nTencentCloudStsService \n\nTencentCloudStsService \n\nTencentCloudStsService  -->\n\nTencentCloudModule->TencentCloudStsService \n\n\n\nAuthorizationTokenModule -->\n\nUserModule->AuthorizationTokenModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthorizationTokenService\n\nAuthorizationTokenService\n\nAuthorizationTokenModule -->\n\nAuthorizationTokenService->AuthorizationTokenModule\n\n\n\n\n\nSecuritySmsService\n\nSecuritySmsService\n\nSecurityModule -->\n\nSecuritySmsService->SecurityModule\n\n\n\n\n\nTencentCloudCosService\n\nTencentCloudCosService\n\nTencentCloudModule -->\n\nTencentCloudCosService->TencentCloudModule\n\n\n\n\n\nTencentCloudSmsService\n\nTencentCloudSmsService\n\nTencentCloudModule -->\n\nTencentCloudSmsService->TencentCloudModule\n\n\n\n\n\nTencentCloudStsService\n\nTencentCloudStsService\n\nTencentCloudModule -->\n\nTencentCloudStsService->TencentCloudModule\n\n\n\nUserModule -->\n\nUserProfileModule->UserModule\n\n\n\n\n\nUserProfileService \n\nUserProfileService \n\nUserProfileService  -->\n\nUserProfileModule->UserProfileService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nUserProfileService\n\nUserProfileService\n\nUserProfileModule -->\n\nUserProfileService->UserProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    41 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            alphabet   (src/.../id.helper.ts)\n                        \n                        \n                            AUTH_METADATA_HAS_AUTHORIZATION   (src/.../constants.ts)\n                        \n                        \n                            AUTH_METADATA_HAS_AUTHORIZATION_TYPE   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_DEFAULT_EXPIRED_IN   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_DEFAULT_EXPIRED_UNIT   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_IN   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_UNIT   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_VVALIDITY_PERIOD_KEY   (src/.../constants.ts)\n                        \n                        \n                            AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE   (src/.../constants.ts)\n                        \n                        \n                            AUTHORIZATION_TOKEN_NOT_FOUND   (src/.../constants.ts)\n                        \n                        \n                            AuthorizationWith   (src/.../authorization.decorator.ts)\n                        \n                        \n                            AuthorizationWithout   (src/.../authorization.decorator.ts)\n                        \n                        \n                            client   (src/.../prisma.module.ts)\n                        \n                        \n                            constants   (src/.../viewer.resolver.ts)\n                        \n                        \n                            Context   (src/.../context.decorator.ts)\n                        \n                        \n                            custom   (src/.../id.helper.ts)\n                        \n                        \n                            GraphQLModule   (src/.../graphql.module.ts)\n                        \n                        \n                            id   (src/.../id.helper.ts)\n                        \n                        \n                            MEDIA_TYPE_DONT_SUPPORTED   (src/.../constants.ts)\n                        \n                        \n                            MOMENT_NOT_FOUND   (src/.../constants.ts)\n                        \n                        \n                            MomentMedia   (src/.../media.entity.ts)\n                        \n                        \n                            numeral   (src/.../id.helper.ts)\n                        \n                        \n                            readability   (src/.../id.helper.ts)\n                        \n                        \n                            SECURITY_COMPARE_FAILED   (src/.../constants.ts)\n                        \n                        \n                            UNAUTHORIZED   (src/.../constants.ts)\n                        \n                        \n                            USER_EMAIL_FIELD_EXISTED   (src/.../constants.ts)\n                        \n                        \n                            USER_LOGIN_FIELD_EXISTED   (src/.../constants.ts)\n                        \n                        \n                            USER_NOT_FOUND   (src/.../constants.ts)\n                        \n                        \n                            USER_NOT_SET_PHONE   (src/.../constants.ts)\n                        \n                        \n                            USER_PHONE_FIELD_EXISTED   (src/.../constants.ts)\n                        \n                        \n                               (src/.../main.ts)\n                        \n                        \n                            UserUnion   (src/.../user.union.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/helper/id.helper.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            alphabet\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n    customAlphabet('qwertyuiopasdfghjklzxcvbnm', size)()\n                        \n                    \n\n                \n                    \n                        Generate alphabet(a-z) ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            custom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (alphabet: string, size: number) =>\n    customAlphabet(alphabet, size)()\n                        \n                    \n\n                \n                    \n                        Generate a custom alphabet ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string => nanoid(size)\n                        \n                    \n\n                \n                    \n                        Generate secure URL-friendly unique ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numeral\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n    customAlphabet('0123456789', size)()\n                        \n                    \n\n                \n                    \n                        Generate numeral ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readability\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n    customAlphabet('23456789qwertyupasdfghjklzxcvbnm', size)()\n                        \n                    \n\n                \n                    \n                        Generate readability(23456789qwertyupasdfghjklzxcvbnm) ID.\n\n                    \n                \n\n            \n        \n\n    src/authorization-token/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_METADATA_HAS_AUTHORIZATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'metadata has authorization'\n                        \n                    \n\n                \n                    \n                        metadata has authorization\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_METADATA_HAS_AUTHORIZATION_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'metadata has authorization type'\n                        \n                    \n\n                \n                    \n                        metadata has authorization type\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_DEFAULT_EXPIRED_IN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n                \n                    \n                        token default expired in.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_DEFAULT_EXPIRED_UNIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'days'\n                        \n                    \n\n                \n                    \n                        token default expired in unit type.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_IN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n                \n                    \n                        token default refresh expired in.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_DEFAULT_REFRESH_EXPIRED_UNIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'months'\n                        \n                    \n\n                \n                    \n                        token default refresh expired in unit type.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_VVALIDITY_PERIOD_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'auth token validity period key'\n                        \n                    \n\n                \n                    \n                        auth token validity period key\n\n                    \n                \n\n            \n        \n\n    src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE'\n                        \n                    \n\n                \n                    \n                        Authorization Token create user where allow one\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTHORIZATION_TOKEN_NOT_FOUND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'AUTHORIZATION_TOKEN_NOT_FOUND'\n                        \n                    \n\n                \n                    \n                        Authorization Token Not Found\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MEDIA_TYPE_DONT_SUPPORTED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'MEDIA_TYPE_DONT_SUPPORTED'\n                        \n                    \n\n                \n                    \n                        Don't supported media type.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MOMENT_NOT_FOUND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'MOMENT_NOT_FOUND'\n                        \n                    \n\n                \n                    \n                        Moment not found.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SECURITY_COMPARE_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SECURITY_COMPARE_FAILED'\n                        \n                    \n\n                \n                    \n                        security code validate error\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UNAUTHORIZED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'UNAUTHORIZED'\n                        \n                    \n\n                \n                    \n                        User unauthorized\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_EMAIL_FIELD_EXISTED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_EMAIL_FIELD_EXISTED'\n                        \n                    \n\n                \n                    \n                        user email existed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_LOGIN_FIELD_EXISTED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_LOGIN_FIELD_EXISTED'\n                        \n                    \n\n                \n                    \n                        User login existed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NOT_FOUND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_NOT_FOUND'\n                        \n                    \n\n                \n                    \n                        User not found\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NOT_SET_PHONE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_NOT_SET_PHONE'\n                        \n                    \n\n                \n                    \n                        User not set phone.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_PHONE_FIELD_EXISTED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_PHONE_FIELD_EXISTED'\n                        \n                    \n\n                \n                    \n                        user phone existed.\n\n                    \n                \n\n            \n        \n\n    src/authorization.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthorizationWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () =>\n  Authorization({\n    hasAuthorization: true,\n    type: HasTokenExpiredType.AUTH,\n  })\n                        \n                    \n\n                \n                    \n                        Http auth validate token.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AuthorizationWithout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () =>\n  Authorization({\n    hasAuthorization: false,\n    type: HasTokenExpiredType.AUTH,\n  })\n                        \n                    \n\n                \n                    \n                        Http auth, without validate token.\n\n                    \n                \n\n            \n        \n\n    src/prisma/prisma.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassProvider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: PrismaClient,\n  useClass: class\n    extends PrismaClient\n    implements OnModuleInit, OnModuleDestroy {\n    private readonly logger = new Logger('Prisma');\n\n    /**\n     * Prisma client constructor\n     */\n    constructor() {\n      super({\n        datasources: {\n          database: { url: process.env.DATABASE_URL },\n        },\n      });\n    }\n\n    /**\n     * NestJS module init hook callback.\n     */\n    async onModuleInit() {\n      // Prisma connect database.\n      await this.$connect();\n\n      // Set Prisma client global logger middleware.\n      this.$use(PrismaLoggerMiddleware(this.logger));\n    }\n\n    /**\n     * NestJS module destory hook callback.\n     */\n    async onModuleDestroy() {\n      // Prisma disconnect database.\n      await this.$disconnect();\n    }\n  },\n}\n                        \n                    \n\n                \n                    \n                        Prisma class provider\n\n                    \n                \n\n            \n        \n\n    src/user/viewer.resolver.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            constants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  USER_LOGIN_FIELD_EXISTED,\n  USER_PHONE_FIELD_EXISTED,\n  USER_EMAIL_FIELD_EXISTED,\n}\n                        \n                    \n\n                \n                    \n                        User error codes.\n\n                    \n                \n\n            \n        \n\n    src/context.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator(function (\n  _data: unknown,\n  context: ExecutionContext,\n): IContext {\n  if (context.getType() === 'graphql') {\n    return GqlExecutionContext.create(context).getContext();\n  }\n\n  return context.switchToHttp().getRequest().context;\n})\n                        \n                    \n\n                \n                    \n                        Get Socfony execution context decorator.\n\n                    \n                \n\n            \n        \n\n    src/graphql/graphql.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GraphQLModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : _.forRootAsync({\n  imports: [PrismaModule],\n  inject: [PrismaClient],\n  useFactory(prisma: PrismaClient) {\n    const options = getConfig();\n    return {\n      autoSchemaFile: options.isProduction ? true : 'schema.graphql',\n      sortSchema: true,\n      debug: !options.isProduction,\n      playground: !options.isProduction,\n      path: options.endpoint,\n      context({ req }) {\n        return ExecutionContext.create(prisma, req);\n      },\n    };\n  },\n})\n                        \n                    \n\n\n            \n        \n\n    src/moment/entities/media.entity.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MomentMedia\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createUnionType({\n  name: 'MomentMedia',\n  types: () => [MomentAudioMedia, MomentImageMedia, MomentVideoMedia],\n  description: 'Moment media.',\n  resolveType(value: MomentMediaCommon) {\n    switch (value?.type) {\n      case MomentMediaType.AUDIO:\n        return MomentAudioMedia;\n      case MomentMediaType.IMAGE:\n        return MomentImageMedia;\n      case MomentMediaType.VIDEO:\n        return MomentVideoMedia;\n      default:\n        throw new Error(MEDIA_TYPE_DONT_SUPPORTED);\n    }\n  },\n})\n                        \n                    \n\n                \n                    \n                        Moment media union type.\n\n                    \n                \n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.argv\n                        \n                    \n\n                \n                    \n                        Get Socfony ENV filename\n\n                    \n                \n\n            \n        \n\n    src/user/entities/user.union.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserUnion\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createUnionType({\n  name: 'userUnion',\n  types: () => [UserEntity, ViewerEntity],\n  resolveType,\n  description: 'User union type.',\n})\n                        \n                    \n\n                \n                    \n                        User union type.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
