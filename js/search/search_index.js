var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.095,1,2.427]],["body/modules/AppModule.html",[0,1.684,1,4.801,2,1.529,3,1.63,4,1.868,5,1.868,6,1.63,7,2.391,8,1.742,9,2.973,10,2.973,11,3.979,12,0.022,13,3.047,14,3.673,15,3.673,16,3.673,17,2.563,18,1.868,19,1.742,20,0.222,21,0.171,22,0.196,23,3.487,24,3.416,25,0.442,26,3.269,27,1.015,28,1.529,29,2.973,30,2.099,31,1.205,32,3.487,33,0.719,34,3.487,35,3.616,36,3.487,37,1.015,38,2.012,39,3.487,40,3.487,41,4.786,42,2.635,43,2.992,44,2.973,45,2.121,46,0.856,47,1.868,48,1.742,49,3.487,50,3.487,51,3.487,52,1.075,53,2.18,54,1.244,55,3.487,56,1.015,57,3.487,58,4.786,59,3.487,60,2.635,61,3.487,62,4.786,63,3.487,64,2.635,65,2.635,66,0.222,67,0.189,68,0.011,69,0.014,70,0.011]],["title/interfaces/AuthDecoratorOptions.html",[71,2.05,72,2.684]],["body/interfaces/AuthDecoratorOptions.html",[12,0.022,20,0.238,21,0.183,22,0.21,25,0.385,27,1.089,37,1.892,43,2.339,44,3.19,52,1.547,53,2.339,54,0.972,56,1.089,66,0.385,68,0.011,69,0.015,70,0.011,71,2.159,72,4.28,73,2.827,74,2.556,75,0.357,76,1.637,77,1.324,78,4.44,79,0.709,80,3.869,81,3.493,82,5.02,83,5.02,84,3.742,85,2.556,86,3.429,87,3.19,88,2.827,89,3.138,90,4.063,91,3.024,92,1.869,93,2.451,94,3.19,95,2.83,96,3.19,97,3.742,98,3.742,99,2.339,100,3.19,101,3.742,102,3.742,103,3.742,104,3.268,105,3.742,106,3.793,107,2.159,108,2.827,109,2.827,110,1.749]],["title/guards/AuthorizationGuard.html",[43,2.221,111,2.684]],["body/guards/AuthorizationGuard.html",[12,0.022,20,0.168,21,0.13,22,0.149,25,0.408,27,0.77,28,3.056,29,2.256,30,2.707,33,0.545,37,1.51,38,1.527,42,1.999,43,2.456,45,2.333,46,0.65,52,1.444,54,1.604,56,1.144,66,0.168,67,0.143,68,0.008,69,0.012,70,0.008,75,0.252,77,1.314,79,0.698,80,2.684,81,2.992,85,2.684,86,2.684,87,2.256,88,1.999,90,2.456,91,1.322,93,1.027,104,1.527,112,2.646,113,2.256,114,1.211,115,1.893,116,5.186,117,4.686,118,3.929,119,3.929,120,3.929,121,3.929,122,1.211,123,2.646,124,5.805,125,3.219,126,0.904,127,2.646,128,1.75,129,1.166,130,3.929,131,2.646,132,1.69,133,2.105,134,2.646,135,2.646,136,3.929,137,2.646,138,3.929,139,2.646,140,3.929,141,2.646,142,3.929,143,2.646,144,3.996,145,1.211,146,2.646,147,2.646,148,1.999,149,1.808,150,1.999,151,1.999,152,1.654,153,0.969,154,2.19,155,1.528,156,3.35,157,1.999,158,2.256,159,2.256,160,3.929,161,3.929,162,2.456,163,0.911,164,2.646,165,2.646,166,1.357,167,2.646,168,2.646,169,2.646,170,2.646,171,2.646,172,2.646,173,2.646,174,2.646,175,2.646,176,1.654,177,0.863,178,2.646]],["title/classes/AuthorizationTokenEntity.html",[67,0.193,179,2.427]],["body/classes/AuthorizationTokenEntity.html",[12,0.022,20,0.194,21,0.149,22,0.171,25,0.323,31,1.05,33,0.627,37,1.826,46,0.746,66,0.194,67,0.165,68,0.009,69,0.013,70,0.009,75,0.29,76,1.418,79,0.608,91,2.535,92,2.535,93,2.69,96,4.722,126,0.881,153,1.591,163,1.615,179,2.97,180,0.665,181,2.512,182,5.196,183,2.593,184,0.951,185,4.001,186,3.466,187,4.327,188,2.928,189,3.217,190,1.523,191,2.144,192,4.382,193,3.041,194,3.782,195,3.041,196,1.281,197,5.538,198,3.041,199,6.094,200,2.97,201,3.041,202,2.508,203,2.23,204,3.041,205,1.113,206,2.329,207,2.172,208,2.593,209,2.593,210,4.001]],["title/classes/AuthorizationTokenEntityResolver.html",[67,0.193,211,2.427]],["body/classes/AuthorizationTokenEntityResolver.html",[12,0.023,20,0.153,21,0.118,22,0.135,25,0.416,28,2.55,30,2.453,31,1.834,33,0.494,37,1.787,38,3.227,45,1.916,46,0.589,52,1.125,54,1.38,56,1.437,66,0.153,67,0.13,68,0.007,69,0.011,70,0.007,75,0.229,77,1.161,78,2.493,79,0.678,81,1.384,91,2.466,92,2.466,93,2.327,95,1.121,104,1.384,110,1.121,114,1.125,115,1.441,122,1.125,125,2.996,126,0.799,128,1.546,129,1.031,132,1.437,150,1.813,154,1.706,155,1.19,162,2.282,163,1.495,166,1.261,176,2.282,177,1.19,179,3.627,180,0.525,181,2.306,184,0.513,185,3.017,190,1.283,191,0.878,194,3.372,203,1.336,205,1.336,207,1.823,208,2.046,209,3.766,211,2.493,212,2.046,213,4.417,214,3.112,215,2.399,216,2.399,217,2.399,218,2.399,219,3.112,220,2.399,221,2.399,222,3.32,223,2.758,224,2.399,225,3.064,226,2.399,227,2.399,228,2.399,229,2.399,230,2.399,231,2.282,232,2.493,233,3.017,234,1.955,235,1.5,236,1.813,237,1.639,238,1.5,239,1.813,240,1.384,241,1.5,242,1.285,243,1.384,244,1.813,245,2.399,246,2.046,247,2.399,248,2.399,249,1.639,250,3.65,251,2.399,252,2.399,253,3.65,254,1.706,255,2.399,256,1.813,257,2.399,258,1.285,259,1.813,260,3.65,261,2.399,262,1.198,263,2.046,264,1.121,265,2.046,266,2.399,267,1.955,268,2.399,269,2.399,270,2.399,271,2.399]],["title/modules/AuthorizationTokenModule.html",[0,1.095,11,2.221]],["body/modules/AuthorizationTokenModule.html",[0,1.853,2,1.854,3,1.977,4,2.265,5,2.265,6,1.977,7,3.004,8,3.004,11,4.442,12,0.022,13,3.143,16,3.879,17,2.914,18,2.265,19,2.112,20,0.269,21,0.207,22,0.238,24,3.401,25,0.418,26,3.716,27,1.231,37,1.584,38,2.44,66,0.269,67,0.229,68,0.013,69,0.016,70,0.013,125,3.828,150,3.195,181,1.743,211,3.716,272,3.605,273,4.229,274,3.605,275,3.605,276,4.229,277,2.888,278,4.229,279,4.229]],["title/injectables/AuthorizationTokenService.html",[125,1.903,145,1.095]],["body/injectables/AuthorizationTokenService.html",[12,0.023,20,0.128,21,0.099,22,0.113,25,0.38,27,0.587,31,1.366,37,1.647,38,3.148,45,1.746,46,0.495,52,1.743,54,1.354,56,0.587,66,0.128,67,0.109,68,0.006,69,0.01,70,0.006,75,0.192,77,1.071,79,0.674,80,2.178,81,2.594,90,1.993,93,2.599,95,1.849,99,1.26,104,1.163,110,0.942,114,0.983,115,1.985,122,0.983,125,1.708,126,0.784,128,1.426,129,1.011,132,1.426,133,2.624,145,0.983,152,1.26,154,1.491,155,1.04,162,3.804,163,1.474,166,1.954,176,2.473,177,1.467,181,2.25,184,0.556,186,3.072,187,3.373,188,1.163,189,0.942,192,3.346,194,3.072,196,1.139,214,3.373,233,1.377,238,1.26,241,1.26,242,1.08,243,2.594,244,1.523,249,1.377,254,2.102,258,1.08,262,1.593,267,1.708,280,1.007,281,1.719,282,3.956,283,3.189,284,4.497,285,3.956,286,1.719,287,2.922,288,2.016,289,2.016,290,2.016,291,2.016,292,2.016,293,1.593,294,3.558,295,2.016,296,2.016,297,2.719,298,2.719,299,2.016,300,2.016,301,2.016,302,2.016,303,2.409,304,3.072,305,1.523,306,1.377,307,2.016,308,2.409,309,2.409,310,2.409,311,2.409,312,2.409,313,1.377,314,1.719,315,4.497,316,2.016,317,2.016,318,2.016,319,2.016,320,1.972,321,2.409,322,2.719,323,2.016,324,2.719,325,2.016,326,2.016,327,2.016,328,2.016,329,2.016,330,2.016,331,2.016,332,3.189,333,2.016,334,2.016,335,2.016,336,1.523,337,2.016,338,2.016,339,2.016,340,3.189,341,2.016,342,2.016,343,2.016,344,2.016,345,2.016,346,2.016,347,3.834,348,1.719,349,1.523,350,2.016,351,1.719,352,3.189,353,2.016,354,2.016,355,1.377,356,2.016,357,2.016,358,2.016,359,2.016,360,2.016,361,2.016]],["title/interfaces/AuthorizationTokenValidityPeriod.html",[71,2.05,313,2.427]],["body/interfaces/AuthorizationTokenValidityPeriod.html",[12,0.022,20,0.29,21,0.223,22,0.256,25,0.29,66,0.29,68,0.014,69,0.017,70,0.014,71,2.628,73,3.442,75,0.434,76,1.86,79,0.711,93,2.661,181,1.878,184,0.64,304,3.111,313,3.895,320,2.501,321,4.93,322,5.564,324,4.863,362,3.884,363,5.564,364,6.226,365,2.666]],["title/classes/CreateAuthorizationTokenArgs.html",[67,0.193,222,2.221]],["body/classes/CreateAuthorizationTokenArgs.html",[12,0.022,20,0.252,21,0.194,22,0.223,25,0.371,33,0.817,37,1.804,66,0.252,67,0.215,68,0.012,69,0.016,70,0.012,75,0.378,76,1.702,79,0.709,126,0.877,162,3.873,163,1.492,180,0.867,181,2.554,184,0.928,190,1.516,191,2.134,196,1.275,205,2.268,222,3.261,243,3.574,244,2.996,254,3.149,293,3.095,320,2.288,366,4.681,367,3.381,368,3.965,369,3.965,370,3.873,371,5.217,372,3.563,373,3.942,374,3.965,375,4.448,376,3.965]],["title/classes/ExecutionContext.html",[28,1.558,67,0.193]],["body/classes/ExecutionContext.html",[12,0.022,20,0.165,21,0.127,22,0.146,25,0.246,28,2.031,30,2.409,31,0.896,37,1.348,45,2.517,46,0.637,52,1.693,54,1.428,56,0.755,66,0.165,67,0.141,68,0.008,69,0.012,70,0.008,75,0.247,76,1.263,77,1.342,79,0.62,91,1.934,92,1.934,93,2.64,95,2.165,99,1.622,110,1.213,114,1.193,115,1.511,122,1.193,126,0.898,128,1.495,129,0.997,132,1.348,133,2.751,148,5.361,149,3.753,154,2.869,162,4.187,163,1.502,166,0.896,177,0.846,180,0.567,184,0.651,196,1.305,240,3.541,258,1.39,293,2.565,320,1.698,349,1.96,377,2.212,378,6.273,379,6.273,380,4.632,381,3.872,382,2.595,383,2.595,384,3.301,385,2.595,386,2.595,387,2.595,388,3.872,389,2.595,390,3.872,391,2.595,392,2.595,393,3.872,394,2.595,395,3.872,396,2.595,397,4.632,398,2.595,399,2.595,400,2.595,401,2.595,402,1.622,403,2.595,404,2.595,405,2.595,406,2.595,407,2.595,408,2.595,409,2.595,410,2.595,411,2.595,412,2.595,413,2.595]],["title/modules/PrismaModule.html",[0,1.095,13,1.661]],["body/modules/PrismaModule.html",[0,1.9,2,1.718,7,1.956,8,1.956,12,0.023,13,2.419,20,0.249,21,0.192,22,0.22,25,0.369,26,3.958,27,1.14,31,2.214,45,2.25,46,0.961,52,1.207,64,2.959,65,2.959,66,0.249,67,0.314,68,0.012,69,0.016,70,0.012,115,1.688,122,1.594,153,1.434,154,1.831,155,1.277,166,1.787,177,1.277,267,3.434,303,4.379,414,2.959,415,4.412,416,4.379,417,4.941,418,4.941,419,2.959,420,3.91,421,3.339,422,2.098,423,3.339,424,3.339,425,3.339,426,3.339,427,3.339,428,4.412,429,3.339,430,4.412,431,4.412,432,3.339,433,3.339,434,2.959,435,3.339,436,3.339,437,3.339,438,3.339]],["title/modules/SecurityModule.html",[0,1.095,14,2.05]],["body/modules/SecurityModule.html",[0,1.86,2,1.869,3,1.992,4,2.283,5,2.283,6,1.992,7,3.016,8,3.016,12,0.022,13,3.15,14,4.104,15,3.888,17,2.929,18,2.283,19,2.129,20,0.271,21,0.209,22,0.24,24,3.418,25,0.419,27,1.241,48,2.129,66,0.271,67,0.231,68,0.013,69,0.017,70,0.013,254,2.556,277,2.911,439,3.634,440,4.263,441,3.634,442,3.634,443,3.832,444,4.263,445,1.56,446,3.735,447,4.263,448,3.221]],["title/classes/SecuritySmsResolver.html",[67,0.193,446,2.427]],["body/classes/SecuritySmsResolver.html",[12,0.022,20,0.218,21,0.168,22,0.193,25,0.413,28,2.56,30,2.56,33,0.706,37,1.377,52,1.457,54,1.229,56,1.377,66,0.218,67,0.186,68,0.01,69,0.014,70,0.01,75,0.327,77,1.184,78,2.341,79,0.657,81,1.977,88,2.589,89,2.142,104,1.977,114,1.457,115,2.065,122,1.056,126,0.814,128,1.576,129,1.133,132,1.377,155,1.118,166,1.633,176,2.142,177,1.118,180,0.749,181,1.413,184,0.481,186,3.23,190,1.229,196,1.276,219,2.922,223,2.589,225,2.728,231,3.385,234,2.533,235,2.142,238,2.142,239,2.589,240,1.977,254,1.602,264,2.96,365,1.602,443,3.392,446,3.23,448,2.589,449,3.987,450,2.922,451,5.414,452,4.729,453,2.922,454,3.427,455,3.427,456,3.427,457,3.427,458,3.427,459,3.427,460,4.091,461,2.589,462,1.836,463,2.589,464,2.142,465,3.427,466,3.427,467,2.922,468,3.427,469,3.427]],["title/injectables/SecuritySmsService.html",[145,1.095,443,1.903]],["body/injectables/SecuritySmsService.html",[12,0.023,20,0.166,21,0.128,22,0.147,25,0.35,27,0.759,31,1.604,45,1.999,46,0.64,52,1.894,53,1.63,54,1.554,66,0.166,67,0.141,68,0.008,69,0.012,70,0.008,75,0.248,77,1.204,79,0.571,80,3.173,95,1.219,110,2.171,114,1.197,115,2.049,122,1.197,126,0.828,128,1.603,129,1.068,132,1.499,133,2.081,145,1.197,154,1.816,155,1.267,166,1.604,177,0.85,184,0.366,186,2.654,189,1.219,196,1.373,203,1.422,241,1.63,242,1.397,254,2.698,258,1.397,262,1.941,263,2.223,264,3.071,280,1.302,304,2.654,321,3.89,365,1.816,443,2.081,445,0.954,449,3.943,463,4.362,464,3.997,470,2.223,471,4.645,472,3.313,473,3.886,474,2.607,475,3.331,476,2.607,477,2.607,478,2.607,479,3.886,480,2.607,481,4.645,482,5.148,483,4.645,484,3.886,485,2.607,486,2.936,487,3.886,488,5.148,489,2.607,490,2.607,491,2.607,492,2.607,493,2.607,494,2.607,495,2.607,496,2.607,497,2.607,498,2.607,499,2.607,500,2.607,501,2.607,502,2.607,503,3.886,504,2.607,505,2.607,506,2.607,507,2.607,508,2.607,509,2.607,510,2.607,511,2.607,512,2.607,513,2.607,514,2.607,515,2.607,516,2.607,517,2.607,518,2.607,519,1.781,520,2.607,521,2.607,522,2.607,523,2.607,524,2.607,525,2.607,526,2.607]],["title/classes/TencentCloudCosCredentials.html",[67,0.193,527,2.427]],["body/classes/TencentCloudCosCredentials.html",[12,0.022,20,0.258,21,0.199,22,0.228,25,0.337,33,0.836,37,1.888,47,3.562,48,3.322,66,0.258,67,0.22,68,0.012,69,0.016,70,0.012,75,0.387,76,1.727,79,0.612,93,2.056,126,0.887,180,0.887,184,0.934,190,1.532,191,2.158,196,1.454,205,2.288,206,2.836,445,2.288,527,3.617,528,3.458,529,5.775,530,4.429,531,3.606,532,3.685,533,4.056,534,4.269,535,4.056,536,4.056]],["title/classes/TencentCloudCosResolver.html",[67,0.193,537,2.427]],["body/classes/TencentCloudCosResolver.html",[12,0.023,20,0.181,21,0.139,22,0.16,25,0.379,33,0.585,37,1.9,47,2.874,48,2.68,54,1.269,66,0.263,67,0.154,68,0.009,69,0.013,70,0.009,75,0.271,77,1.067,79,0.686,107,2.388,114,1.275,115,1.942,122,0.875,126,0.807,128,1.422,129,1.107,132,1.422,133,3.292,155,0.926,180,0.621,184,0.801,190,1.269,223,3.127,225,2.388,231,3.052,232,2.827,234,2.217,235,1.775,241,1.775,242,1.521,293,2.849,363,3.529,445,2.087,462,1.521,527,3.664,531,2.388,532,1.775,534,3.664,537,2.827,538,2.146,539,5.365,540,4.883,541,2.84,542,3.095,543,2.84,544,4.139,545,2.84,546,2.146,547,2.84,548,3.529,549,3.052,550,2.84,551,2.84,552,5.076,553,3.127,554,2.84,555,2.84,556,2.84,557,3.127,558,2.84,559,2.84,560,2.84,561,3.529,562,3.529,563,3.529,564,3.529,565,3.529,566,3.529,567,3.529,568,2.84,569,3.127,570,4.139,571,2.84,572,2.422,573,2.84]],["title/injectables/TencentCloudCosService.html",[145,1.095,542,2.05]],["body/injectables/TencentCloudCosService.html",[12,0.023,20,0.181,21,0.14,22,0.16,25,0.311,27,0.83,47,3.193,48,2.977,52,1.837,53,3.059,54,1.397,66,0.181,67,0.154,68,0.009,69,0.013,70,0.009,75,0.272,77,0.907,79,0.431,95,1.332,114,1.278,115,1.944,122,0.878,126,0.859,128,1.208,129,1.157,132,1.208,145,1.278,155,0.93,166,1.433,184,0.4,196,1.07,241,1.782,242,1.527,280,1.424,293,2.684,294,2.834,402,2.594,445,2.182,462,1.527,472,2.43,529,4.172,530,3.342,532,3.059,534,4.071,542,2.394,548,3.538,549,3.726,553,3.135,572,3.538,574,2.43,575,5.374,576,4.149,577,3.538,578,4.893,579,2.85,580,3.1,581,2.85,582,2.85,583,5.961,584,4.149,585,2.85,586,2.85,587,2.85,588,2.85,589,4.149,590,4.149,591,2.85,592,2.85,593,2.85,594,4.149,595,4.149,596,4.149,597,4.149,598,4.149,599,4.149,600,4.149,601,4.149,602,4.149,603,4.149,604,4.149,605,4.149,606,4.149,607,4.149,608,4.149,609,4.149,610,4.149,611,4.149,612,2.85,613,2.85,614,2.85,615,2.85,616,2.85,617,2.85,618,2.85,619,3.538,620,2.85,621,2.85,622,2.85,623,2.85,624,2.85,625,2.85]],["title/modules/TencentCloudModule.html",[0,1.095,15,2.05]],["body/modules/TencentCloudModule.html",[0,1.819,2,1.783,3,1.901,4,2.178,5,2.178,6,1.901,7,2.949,8,2.949,12,0.022,15,4.121,17,2.841,18,2.178,19,2.031,20,0.259,21,0.199,22,0.229,25,0.413,27,1.184,66,0.259,67,0.22,68,0.012,69,0.016,70,0.012,445,1.488,475,4.1,486,3.072,532,2.542,534,2.778,537,3.623,542,4.1,580,4.1,626,3.467,627,3.467,628,3.467,629,4.067,630,4.067,631,4.067,632,4.067]],["title/injectables/TencentCloudSmsService.html",[145,1.095,475,2.05]],["body/injectables/TencentCloudSmsService.html",[12,0.022,20,0.217,21,0.167,22,0.192,25,0.371,27,0.994,47,2.525,48,2.355,52,1.453,54,1.404,66,0.217,67,0.185,68,0.01,69,0.014,70,0.01,75,0.325,77,1.031,79,0.489,92,1.705,95,1.595,114,1.453,115,1.762,126,0.813,128,1.373,129,0.915,132,1.373,145,1.453,148,2.578,166,1.179,177,1.113,184,0.479,196,1.383,267,3.472,280,1.705,293,2.355,320,2.068,445,2.133,463,4.897,475,2.72,486,4.778,530,4.177,549,2.133,569,2.578,577,4.02,633,2.91,634,4.02,635,5.402,636,4.02,637,3.413,638,3.22,639,4.968,640,4.968,641,3.413,642,4.968,643,3.413,644,6.324,645,3.413,646,3.413,647,2.947,648,2.947,649,3.413,650,3.413,651,3.413,652,3.22,653,2.91,654,3.413,655,3.413,656,3.413,657,3.413,658,3.413,659,3.413,660,3.413,661,3.413,662,1.595,663,2.91,664,3.413,665,3.413,666,3.413,667,3.413]],["title/classes/TencentCloudStsCredentials.html",[67,0.193,668,2.427]],["body/classes/TencentCloudStsCredentials.html",[12,0.022,20,0.22,21,0.17,22,0.195,25,0.347,33,0.714,47,3.603,48,3.36,56,1.585,66,0.303,67,0.258,68,0.01,69,0.014,70,0.01,75,0.33,76,1.554,79,0.565,93,2.387,126,0.819,153,1.993,180,0.757,184,0.945,189,1.619,190,1.415,191,1.993,192,3.254,196,1.503,203,1.744,205,2.382,206,2.917,365,1.619,402,2.978,445,2.146,531,1.999,647,2.978,648,2.978,668,4.005,669,2.618,670,5.951,671,4.643,672,4.643,673,5,674,3.465,675,3.465,676,3.465,677,4.062,678,4.062,679,4.062,680,2.545,681,2.954,682,2.954,683,2.954,684,2.954,685,2.954]],["title/classes/TencentCloudStsFederationToken.html",[67,0.193,531,2.05]],["body/classes/TencentCloudStsFederationToken.html",[12,0.022,20,0.214,21,0.165,22,0.189,25,0.341,33,0.694,47,3.581,48,3.34,56,1.834,66,0.297,67,0.253,68,0.01,69,0.014,70,0.01,75,0.321,76,1.524,77,1.377,79,0.557,93,1.814,126,0.807,153,1.964,180,0.737,184,0.939,189,2.184,190,1.395,191,1.964,192,3.958,196,1.462,203,1.233,205,2.364,206,2.874,365,2.184,402,2.106,445,2.121,531,2.696,647,2.921,648,2.921,668,3.958,669,2.546,670,5.963,671,2.873,672,2.873,673,3.985,677,3.985,678,4.575,679,3.985,680,2.944,681,3.985,682,3.985,683,4.575,684,3.985,685,4.575,686,3.369,687,3.369,688,3.369]],["title/injectables/TencentCloudStsService.html",[145,1.095,580,2.05]],["body/injectables/TencentCloudStsService.html",[12,0.022,20,0.271,21,0.209,22,0.24,25,0.384,27,1.241,54,1.108,66,0.271,67,0.231,68,0.013,69,0.017,70,0.013,75,0.406,77,0.932,79,0.442,92,2.129,95,1.992,114,1.685,126,0.641,128,1.241,129,0.827,132,1.241,145,1.685,177,1.39,184,0.599,196,1.32,267,3.609,280,2.129,293,2.731,320,1.869,445,2.001,530,4.68,532,3.418,549,2.665,580,3.155,634,4.662,636,4.662,638,2.911,639,4.662,640,4.662,647,2.665,648,2.665,652,3.735,653,3.634,662,1.992,663,3.634,689,3.634,690,4.263,691,4.662,692,4.263,693,4.263]],["title/classes/UpdateViewerArgs.html",[67,0.193,694,2.427]],["body/classes/UpdateViewerArgs.html",[12,0.022,20,0.259,21,0.2,22,0.229,25,0.376,33,0.84,37,1.187,52,1.256,56,1.547,66,0.259,67,0.221,68,0.012,69,0.016,70,0.012,75,0.388,76,1.733,77,1.162,79,0.613,89,3.321,126,0.799,163,1.37,177,1.733,180,0.891,181,1.681,184,0.88,190,1.381,191,1.945,196,1.292,205,2.163,222,3.321,246,3.476,254,2.763,262,2.952,264,2.927,355,4.277,366,3.08,373,4.014,375,5.039,422,2.184,434,4.014,464,3.321,680,2.483,694,3.629,695,5.039,696,3.476,697,5.039,698,4.277,699,4.077,700,4.077,701,4.53,702,3.476]],["title/classes/UserEntity.html",[67,0.193,703,2.221]],["body/classes/UserEntity.html",[12,0.022,20,0.257,21,0.198,22,0.228,25,0.336,33,0.834,56,1.178,66,0.257,67,0.219,68,0.012,69,0.016,70,0.012,75,0.386,76,1.724,79,0.648,126,0.939,129,1.026,153,1.481,163,1.635,180,0.885,184,0.933,185,4.022,189,2.752,190,1.623,191,2.285,196,1.156,202,3.602,203,2.285,206,2.832,422,2.832,519,3.611,662,2.918,680,1.891,703,3.305,704,3.45,705,3.961,706,3.994,707,5.324,708,3.45,709,3.45,710,3.45,711,2.763,712,3.45,713,3.45]],["title/classes/UserInterface.html",[67,0.193,705,2.05]],["body/classes/UserInterface.html",[12,0.022,20,0.218,21,0.168,22,0.192,25,0.344,31,1.181,33,0.705,46,0.84,56,1.375,66,0.218,67,0.185,68,0.01,69,0.014,70,0.01,71,3.12,75,0.326,76,1.54,79,0.605,126,0.877,129,1.132,153,1.728,163,1.66,180,0.748,184,0.954,189,2.958,190,1.516,191,2.135,196,1.338,202,3.742,203,2.455,205,1.252,210,3.983,264,1.599,460,3.568,519,3.694,662,3.031,680,2.207,705,2.724,706,4.406,711,3.694,714,2.916,715,3.568,716,3.42,717,3.42,718,3.42,719,3.42,720,4.722,721,2.529,722,2.916,723,2.138,724,1.973]],["title/classes/UserInterfaceResolver.html",[67,0.193,725,2.427]],["body/classes/UserInterfaceResolver.html",[12,0.022,20,0.274,21,0.211,22,0.242,25,0.42,33,0.888,46,1.058,54,1.12,66,0.274,67,0.234,68,0.013,69,0.017,70,0.013,75,0.411,77,1.204,79,0.571,114,1.697,122,1.328,126,0.828,128,1.603,129,1.068,132,1.254,155,1.405,163,1.566,180,0.942,190,1.12,232,2.943,234,2.949,462,2.308,546,3.255,557,4.16,662,2.574,705,3.176,721,2.949,722,3.674,725,3.761,726,5.174,727,3.674,728,4.309,729,3.62,730,4.309,731,4.309,732,4.309,733,4.309,734,4.309,735,4.309,736,4.309]],["title/modules/UserModule.html",[0,1.095,16,2.05]],["body/modules/UserModule.html",[0,1.821,2,1.788,3,1.906,4,2.184,5,2.184,6,1.906,7,2.952,8,2.952,12,0.022,13,3.112,14,3.842,16,4.123,17,2.846,18,2.184,19,2.036,20,0.259,21,0.2,22,0.229,24,3.321,25,0.432,27,1.187,66,0.259,67,0.221,68,0.012,69,0.016,70,0.012,163,0.945,277,2.785,287,3.808,725,3.629,737,3.476,738,3.476,739,3.476,740,3.476,741,4.163,742,4.077,743,4.077,744,4.077,745,4.077,746,3.476,747,3.629,748,4.077]],["title/classes/UserProfileEntity.html",[67,0.193,721,1.903]],["body/classes/UserProfileEntity.html",[12,0.022,20,0.214,21,0.165,22,0.189,25,0.214,33,0.694,56,1.971,60,3.531,66,0.214,67,0.183,68,0.01,69,0.014,70,0.01,75,0.321,76,1.524,79,0.654,126,0.947,129,1.181,153,1.711,163,1.569,180,0.737,184,0.969,188,3.095,189,2.184,190,1.637,191,2.305,196,1.545,203,2.121,205,1.233,206,2.503,210,4.302,460,3.531,662,2.709,680,3.164,721,3.104,749,2.873,750,6.087,751,6.087,752,6.087,753,4.575,754,4.673,755,3.369,756,3.369,757,3.369,758,3.369,759,4.673,760,3.369,761,4.673,762,3.369]],["title/modules/UserProfileModule.html",[0,1.095,741,2.221]],["body/modules/UserProfileModule.html",[0,1.899,2,1.953,3,2.082,4,2.385,5,2.385,6,2.082,7,3.078,8,3.078,12,0.022,13,3.186,17,3.012,18,2.385,19,2.225,20,0.283,21,0.218,22,0.25,24,3.515,25,0.412,27,1.297,66,0.283,67,0.241,68,0.013,69,0.017,70,0.013,277,3.042,729,3.855,741,4.417,763,3.797,764,3.797,765,4.454,766,3.797,767,4.454,768,3.84,769,4.454,770,3.797]],["title/classes/UserProfileResolver.html",[67,0.193,768,2.427]],["body/classes/UserProfileResolver.html",[12,0.022,20,0.237,21,0.183,22,0.209,25,0.422,28,2.65,30,2.765,33,0.767,45,2.575,46,0.914,52,1.147,54,0.968,66,0.237,67,0.202,68,0.011,69,0.015,70,0.011,75,0.355,77,1.094,79,0.586,107,2.887,114,1.542,115,1.843,122,1.542,126,0.753,128,1.457,129,1.097,132,1.084,154,2.339,155,1.632,166,1.728,180,0.814,184,0.523,188,2.148,190,0.968,200,2.544,225,2.887,231,3.128,234,2.68,235,2.328,240,2.148,262,3.242,355,2.544,662,2.339,702,3.175,721,3.027,729,3.236,768,3.418,770,3.175,771,3.175,772,5.651,773,3.724,774,3.724,775,5.004,776,3.724,777,4.306,778,3.175,779,3.724,780,3.724,781,3.175,782,3.724,783,3.724,784,3.724]],["title/injectables/UserProfileService.html",[145,1.095,729,1.903]],["body/injectables/UserProfileService.html",[12,0.022,20,0.259,21,0.199,22,0.229,25,0.338,27,1.184,31,2.039,45,2.429,46,0.998,54,1.534,66,0.259,67,0.22,68,0.012,69,0.016,70,0.012,75,0.387,77,1.16,79,0.55,110,1.901,114,1.634,115,1.925,122,1.253,126,0.798,128,1.544,129,1.029,132,1.184,133,2.841,145,1.634,155,1.326,163,1.571,166,1.832,188,3.06,258,2.178,262,2.031,280,2.031,286,3.467,336,4.007,462,2.178,662,3.11,711,2.778,729,2.841,785,3.467,786,5.903,787,4.067,788,4.067,789,6.256,790,4.067,791,4.067,792,4.067]],["title/classes/UserProfileUpdateInput.html",[67,0.193,777,2.427]],["body/classes/UserProfileUpdateInput.html",[12,0.022,20,0.318,21,0.245,22,0.281,25,0.413,31,1.727,33,1.03,46,1.227,52,1.54,66,0.318,67,0.271,68,0.015,69,0.018,70,0.015,153,2.21,180,1.093,188,2.884,422,2.678,715,4.563,721,2.678,753,4.262,777,4.125,781,4.262,793,4.262,794,3.777,795,4.902,796,6.039,797,4.262,798,4.999]],["title/classes/UserResolver.html",[67,0.193,799,2.684]],["body/classes/UserResolver.html",[12,0.022,20,0.256,21,0.197,22,0.226,25,0.422,33,0.83,45,2.576,46,0.988,54,1.046,66,0.256,67,0.218,68,0.012,69,0.016,70,0.012,75,0.384,77,1.152,79,0.61,114,1.623,122,1.24,126,0.793,128,1.534,129,1.14,132,1.172,155,1.313,163,1.499,177,1.313,180,0.88,184,0.825,190,1.046,225,3.04,233,4.418,234,2.822,237,2.749,238,2.516,258,2.156,265,3.432,370,4.043,372,3.599,462,2.156,703,3.294,799,3.981,800,3.432,801,4.025,802,4.025,803,4.025,804,3.432,805,4.025,806,4.025,807,4.025,808,3.599,809,4.025,810,3.432]],["title/injectables/UserService.html",[145,1.095,287,1.903]],["body/injectables/UserService.html",[12,0.022,20,0.215,21,0.166,22,0.19,25,0.388,27,0.985,46,0.831,52,1.043,54,1.639,66,0.215,67,0.183,68,0.01,69,0.014,70,0.01,75,0.322,77,1.176,79,0.671,89,2.93,95,2.191,110,2.514,114,1.444,115,2.057,122,1.043,126,0.809,128,1.566,129,1.044,132,1.365,133,3.109,145,1.444,155,1.104,163,1.631,166,1.857,184,0.475,196,1.379,242,1.812,243,3.349,249,2.311,254,2.849,259,2.556,280,1.69,287,2.511,320,2.055,373,3.541,443,3.378,448,2.556,449,2.311,453,2.885,462,1.812,638,2.311,724,3.909,811,2.885,812,4.687,813,5.378,814,3.384,815,4.687,816,3.384,817,4.687,818,3.541,819,3.384,820,3.384,821,2.885,822,3.384,823,3.384,824,3.384,825,3.384,826,4.687,827,3.384,828,3.384,829,3.384,830,2.885,831,3.384]],["title/classes/UserUpdateInput.html",[67,0.193,698,2.427]],["body/classes/UserUpdateInput.html",[12,0.022,20,0.285,21,0.22,22,0.252,25,0.393,31,1.547,33,0.923,46,1.099,56,1.643,66,0.285,67,0.243,68,0.014,69,0.017,70,0.014,75,0.427,76,1.84,77,1.234,79,0.465,126,0.674,153,2.065,163,1.308,177,1.84,180,0.979,184,0.793,190,1.164,191,1.639,196,1.351,202,2.584,205,2.065,207,2.237,264,2.093,422,2.399,642,4.811,680,2.637,698,3.854,701,3.819,723,2.8,724,3.857,794,3.384,795,4.668,797,4.811,832,4.263,833,4.479,834,3.819,835,4.479]],["title/classes/UserWhereUniqueInput.html",[67,0.193,370,2.221]],["body/classes/UserWhereUniqueInput.html",[12,0.022,20,0.234,21,0.18,22,0.207,25,0.316,31,1.271,33,0.759,46,0.904,56,1.958,66,0.234,67,0.199,68,0.011,69,0.015,70,0.011,75,0.351,76,1.619,77,1.47,79,0.624,126,0.905,129,0.963,153,1.817,163,1.558,180,0.805,184,0.944,190,1.563,191,2.201,196,1.519,202,3.622,203,2.42,205,2.298,264,2.935,365,2.321,370,3.104,680,3.143,723,3.925,795,3.751,832,4.744,836,3.138,837,3.681,838,3.681,839,3.681,840,3.681,841,3.681]],["title/classes/ViewerEntity.html",[67,0.193,207,1.775]],["body/classes/ViewerEntity.html",[12,0.022,20,0.204,21,0.157,22,0.18,25,0.332,33,0.661,46,0.787,56,1.74,66,0.204,67,0.174,68,0.01,69,0.014,70,0.01,75,0.306,76,1.472,79,0.643,126,0.933,129,0.876,153,1.912,163,1.634,180,0.701,184,0.941,185,3.569,189,2.442,190,1.612,191,2.27,196,1.422,200,3.569,202,3.272,203,2.076,205,1.174,206,2.418,207,2.255,210,3.083,264,2.978,365,2.651,422,2.418,519,3.083,662,2.651,680,2.794,705,3.752,706,3.411,707,4.835,708,2.734,709,2.734,710,2.734,711,2.19,712,2.734,713,2.734,715,3.411,723,3.266,842,2.734,843,6.504,844,5.671,845,5.671,846,5.671,847,3.206,848,4.835,849,3.206]],["title/classes/ViewerResolver.html",[67,0.193,747,2.427]],["body/classes/ViewerResolver.html",[12,0.023,20,0.143,21,0.11,22,0.127,25,0.399,28,2.493,30,2.575,33,0.464,37,1.012,45,2.207,46,0.552,52,1.856,54,1.417,66,0.143,67,0.122,68,0.007,69,0.01,70,0.007,75,0.214,77,1.128,79,0.609,91,1.736,92,1.736,99,2.172,107,2.449,110,1.052,114,1.071,115,1.384,122,1.071,126,0.776,128,1.502,129,1.001,132,1.39,152,1.406,154,1.624,155,1.133,163,1.549,166,1.884,176,2.653,177,1.557,180,0.492,184,0.596,190,1.241,196,0.76,200,2.899,203,0.823,205,0.823,207,2.384,225,3.279,231,2.172,232,1.537,233,3.26,234,1.861,235,1.406,238,1.406,239,1.7,240,1.298,242,1.205,243,1.298,249,1.537,254,1.624,258,1.205,259,1.7,262,1.736,264,2.744,287,2.921,306,1.537,336,2.625,347,5.006,348,2.962,349,2.625,351,2.962,355,1.537,365,1.052,372,1.537,402,2.984,464,1.406,467,2.962,546,2.625,557,3.207,569,1.7,694,3.524,697,2.962,723,3.225,724,2.004,746,1.918,747,2.373,778,1.918,804,1.918,810,1.918,821,1.918,830,1.918,834,1.918,850,1.7,851,4.245,852,2.25,853,2.25,854,2.25,855,2.25,856,2.25,857,2.25,858,2.25,859,2.25,860,2.25,861,2.25,862,2.25,863,2.625,864,2.625,865,2.625,866,2.25,867,2.25,868,2.25,869,2.25,870,2.25,871,2.25,872,2.25,873,2.25,874,2.25,875,2.25,876,2.25,877,1.7,878,4.774,879,2.25,880,3.475,881,3.475,882,2.962,883,1.918,884,2.25,885,2.25,886,2.25,887,2.25,888,2.25,889,2.25,890,2.25]],["title/coverage.html",[891,4.133]],["body/coverage.html",[6,1.024,12,0.022,22,0.123,28,0.961,30,0.961,35,1.655,37,0.991,38,1.964,43,1.37,67,0.37,68,0.007,69,0.01,70,0.007,71,1.964,72,1.655,74,3.215,79,0.227,85,1.496,86,1.496,99,3.737,107,1.264,109,1.655,111,1.655,113,1.868,125,1.174,145,1.735,151,1.655,152,1.37,177,0.715,179,1.496,181,2.605,182,1.868,183,1.868,203,0.802,207,1.094,211,1.496,212,1.868,222,1.37,236,1.655,237,1.496,240,1.264,267,1.174,281,1.868,287,1.174,305,1.655,306,1.496,308,1.655,309,1.655,310,1.655,311,1.655,312,1.655,313,1.496,362,1.868,366,1.655,367,1.868,370,1.37,377,1.868,414,1.655,419,1.655,443,1.174,445,2.13,446,1.496,449,2.325,450,1.868,461,1.655,470,1.868,475,1.264,527,1.496,528,1.868,531,1.264,537,1.496,538,1.655,542,1.264,574,1.868,580,1.264,633,1.868,652,1.496,668,1.496,669,2.572,689,1.868,694,1.496,695,1.868,696,1.868,698,1.496,703,1.37,704,1.868,705,1.264,714,1.868,721,1.174,725,1.496,726,1.868,727,1.868,729,1.174,747,1.496,749,1.868,768,1.496,771,1.868,777,1.496,785,1.868,793,1.868,794,2.572,799,1.655,800,1.868,808,1.496,811,1.868,818,1.655,832,2.572,836,1.868,842,1.868,850,2.572,863,1.655,864,1.655,865,1.655,877,1.655,891,1.868,892,1.655,893,2.191,894,2.191,895,2.902,896,7.218,897,6.983,898,1.868,899,3.404,900,3.404,901,2.191,902,2.191,903,4.8,904,7.004,905,5.097,906,6.601,907,2.191,908,2.191,909,5.395,910,6.222,911,2.191,912,5.096,913,1.868,914,2.191,915,2.191,916,4.346,917,1.868,918,1.868,919,1.868,920,1.868,921,2.902,922,2.572,923,1.868,924,1.868,925,3.404,926,3.404,927,2.191,928,2.191,929,2.191,930,2.191,931,2.191,932,3.404,933,2.572,934,1.655,935,2.191,936,2.191,937,2.191,938,2.191,939,2.191,940,2.191,941,2.191]],["title/dependencies.html",[3,1.997,942,2.968]],["body/dependencies.html",[3,2.205,12,0.022,27,1.373,33,0.972,42,3.564,46,1.158,67,0.316,68,0.014,69,0.018,70,0.014,149,4.32,157,3.564,304,3.222,647,2.949,648,2.949,691,4.022,943,6.325,944,4.718,945,4.718,946,4.718,947,4.718,948,4.718,949,4.718,950,4.718,951,4.718,952,4.718,953,4.718,954,4.718,955,4.718,956,4.718,957,4.718,958,4.718,959,4.718,960,4.718,961,4.718,962,4.718,963,4.022,964,4.718,965,4.718,966,4.718,967,4.718,968,4.718]],["title/miscellaneous/enumerations.html",[969,1.712,970,3.643]],["body/miscellaneous/enumerations.html",[12,0.022,68,0.015,69,0.018,70,0.015,75,0.465,81,3.432,106,3.684,181,2.011,194,3.331,243,3.432,320,3.095,445,1.785,538,3.684,552,5.072,561,5.072,562,5.072,563,5.072,564,5.072,565,5.072,566,5.072,567,5.072,724,2.813,969,2.813,970,4.158,971,4.877,972,5.949,973,4.877,974,4.877,975,4.877]],["title/miscellaneous/functions.html",[969,1.712,976,3.228]],["body/miscellaneous/functions.html",[6,2.766,12,0.021,30,2.595,31,1.412,35,4.471,37,1.723,53,2.555,60,3.088,68,0.012,69,0.016,70,0.012,74,2.792,75,0.389,77,1.457,79,0.424,89,2.555,90,2.555,91,2.042,92,2.042,93,1.587,94,3.485,100,3.485,128,1.94,129,1.293,132,1.549,163,0.947,184,0.748,293,2.042,294,2.792,320,1.792,384,4.538,416,4.471,419,4.021,420,3.088,445,1.496,549,2.555,652,4.042,724,3.07,808,2.792,818,4.021,877,4.021,895,3.485,898,4.538,921,3.485,922,3.088,923,3.485,924,3.485,933,3.088,934,4.021,969,2.358,976,3.088,977,3.485,978,3.485,979,5.322,980,5.322,981,4.088,982,4.088,983,3.485,984,4.088,985,5.322,986,4.088,987,4.088,988,4.088,989,4.088,990,4.088,991,4.088,992,4.088,993,4.088,994,3.485]],["title/index.html",[75,0.283,995,2.53,996,2.53]],["body/index.html",[12,0.018,21,0.239,68,0.015,69,0.018,70,0.015,184,0.685,553,3.684,848,5.473,892,3.684,976,3.684,994,4.158,997,6.97,998,4.877,999,4.877,1000,5.072,1001,4.877,1002,5.949,1003,4.877,1004,4.877,1005,4.877,1006,4.877,1007,4.877,1008,4.877,1009,5.949,1010,4.877,1011,4.877,1012,4.877,1013,4.877,1014,4.877,1015,4.877,1016,4.877,1017,4.877,1018,4.877,1019,5.949,1020,4.877,1021,4.877,1022,4.158,1023,3.684,1024,4.158,1025,4.158,1026,4.158,1027,4.877]],["title/license.html",[995,2.53,996,2.53,1023,2.242]],["body/license.html",[12,0.016,19,1.956,21,0.254,68,0.012,69,0.016,70,0.012,108,3.91,129,0.76,149,2.675,262,1.956,464,2.448,619,4.412,882,3.339,883,3.339,892,2.959,1000,4.941,1022,3.339,1023,2.959,1024,3.339,1025,3.339,1026,3.339,1028,6.585,1029,3.917,1030,3.917,1031,3.917,1032,3.917,1033,3.917,1034,3.917,1035,3.917,1036,5.796,1037,5.175,1038,3.917,1039,3.917,1040,3.917,1041,5.796,1042,5.796,1043,5.796,1044,3.917,1045,5.175,1046,3.917,1047,5.175,1048,5.175,1049,5.175,1050,3.917,1051,3.917,1052,3.917,1053,3.917,1054,3.917,1055,5.175,1056,3.917,1057,5.796,1058,3.917,1059,3.917,1060,3.917,1061,3.917,1062,3.917,1063,3.917,1064,3.917,1065,3.917,1066,5.175,1067,5.175,1068,5.796,1069,5.175,1070,3.917,1071,3.917,1072,3.917,1073,3.917,1074,3.917,1075,3.917,1076,3.917,1077,3.917,1078,3.917,1079,3.917,1080,3.917,1081,3.917,1082,3.917,1083,3.917,1084,3.917,1085,3.917,1086,3.917,1087,3.917,1088,3.917,1089,3.917,1090,3.917,1091,3.917,1092,3.917,1093,3.917,1094,3.917,1095,5.175,1096,3.917,1097,3.917,1098,3.917,1099,3.917,1100,3.917,1101,3.917,1102,3.917,1103,3.917,1104,3.917,1105,3.917,1106,3.917,1107,3.917]],["title/modules.html",[2,2.126]],["body/modules.html",[1,3.48,2,2.234,11,3.185,12,0.018,13,2.382,14,2.939,15,2.939,16,2.939,68,0.015,69,0.018,70,0.015,741,3.185,1108,7.042,1109,7.042,1110,7.042,1111,7.12,1112,5.095,1113,5.095]],["title/overview.html",[1114,4.133]],["body/overview.html",[0,1.049,1,4.72,2,1.493,3,1.592,4,1.824,5,1.824,6,1.592,7,1.701,8,1.701,9,2.903,10,2.903,11,4.241,12,0.022,13,3.028,14,3.953,15,4.016,16,4.016,17,2.522,18,1.824,19,1.701,68,0.01,69,0.014,70,0.01,73,2.573,111,2.573,125,3.47,180,0.744,256,2.573,272,2.903,274,2.903,275,2.903,280,1.701,287,3.47,439,2.903,441,2.903,442,2.903,443,3.47,475,3.737,542,3.737,580,3.737,626,2.903,627,2.903,628,2.903,729,3.47,737,2.903,738,2.903,739,2.903,740,2.903,741,4.127,763,2.903,764,2.903,766,2.903,1114,2.903,1115,4.708,1116,3.405,1117,3.405]],["title/miscellaneous/variables.html",[969,1.712,1118,3.643]],["body/miscellaneous/variables.html",[0,1.044,12,0.022,26,1.488,28,0.956,30,1.824,31,1.756,37,1.366,45,1.316,54,0.881,56,0.634,64,1.646,65,1.646,67,0.184,68,0.007,69,0.01,70,0.007,74,1.488,75,0.208,78,2.315,79,0.714,85,2.315,86,2.315,90,2.119,91,1.693,93,1.615,104,1.955,106,3.143,107,1.955,108,1.646,109,2.561,110,1.018,115,1.105,122,1.044,129,0.423,144,1.858,151,3.143,152,2.119,153,0.798,154,1.018,155,0.711,156,1.858,157,1.646,158,1.858,159,1.858,163,0.785,166,1.171,177,0.711,181,0.898,184,0.306,196,1.473,203,1.97,207,1.088,236,3.143,237,2.841,256,2.561,267,2.513,294,1.488,297,1.858,298,1.858,303,3.143,305,3.143,306,2.841,308,2.561,309,2.561,310,2.561,311,2.561,312,2.561,314,1.858,320,3.07,365,2.626,372,1.488,414,1.646,415,1.858,416,2.561,417,2.89,418,2.89,420,1.646,421,1.858,422,1.167,423,1.858,424,1.858,425,1.858,426,2.89,427,1.858,428,2.89,429,1.858,430,2.89,431,2.89,432,1.858,433,1.858,434,1.646,435,1.858,436,1.858,437,1.858,438,1.858,461,3.143,638,4.781,703,1.362,808,2.841,850,1.646,863,3.545,864,3.545,865,3.545,903,1.858,912,1.858,913,1.858,916,1.858,917,3.546,918,2.89,919,3.546,920,2.89,922,1.646,933,1.646,934,1.646,963,2.89,969,1.257,977,2.89,978,1.858,983,1.858,1118,1.858,1119,5.084,1120,6.595,1121,2.179,1122,2.179,1123,2.179,1124,5.968,1125,2.179,1126,4.693,1127,2.179,1128,2.179,1129,2.179,1130,2.179,1131,2.179,1132,2.179,1133,2.179,1134,2.179,1135,2.179,1136,2.179,1137,2.179,1138,2.179,1139,2.179,1140,2.179,1141,2.179,1142,2.179,1143,3.389]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":256,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1***$2@$3",{"_index":873,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["1****$2",{"_index":870,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["1.10.4",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":930,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["15.4.0",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1117,"title":{},"body":{"overview.html":{}}}],["2.0",{"_index":607,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["2.15.0",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":1030,"title":{},"body":{"license.html":{}}}],["21",{"_index":1116,"title":{},"body":{"overview.html":{}}}],["25",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1025,"title":{},"body":{"index.html":{},"license.html":{}}}],["3.1.20",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":493,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["37",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["4.0.55",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["4/7",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["6.6.3",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["60).tostring",{"_index":511,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["66",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1115,"title":{},"body":{"overview.html":{}}}],["7.6.5",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["7.9.8",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["7200",{"_index":593,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["8.2.0",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":597,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["_data",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":1047,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":577,"title":{},"body":{"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{}}}],["action",{"_index":611,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["add(setting.expiredin.value",{"_index":338,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["add(setting.refreshexpiredin.value",{"_index":341,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["address",{"_index":846,"title":{},"body":{"classes/ViewerEntity.html":{}}}],["advised",{"_index":1104,"title":{},"body":{"license.html":{}}}],["allow",{"_index":610,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["allows",{"_index":1008,"title":{},"body":{"index.html":{}}}],["allowuploadfiletype",{"_index":552,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["alphabet",{"_index":917,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["alphabet(a",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":1052,"title":{},"body":{"license.html":{}}}],["ap",{"_index":639,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["api",{"_index":197,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["apollo",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":1019,"title":{},"body":{"index.html":{}}}],["app.config",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":994,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["applydecorators",{"_index":82,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":225,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["argstype",{"_index":375,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/UpdateViewerArgs.html":{}}}],["arising",{"_index":1101,"title":{},"body":{"license.html":{}}}],["array.isarray(token",{"_index":410,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["async",{"_index":115,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":106,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["auth_metadata_has_authorization",{"_index":85,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_metadata_has_authorization_type",{"_index":86,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_default_expored_in",{"_index":308,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_default_expored_unit",{"_index":309,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_default_refresh_expored_in",{"_index":310,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_default_refresh_expored_unit",{"_index":311,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token_vvalidity_period_key",{"_index":312,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authdecoratoroptions",{"_index":72,"title":{"interfaces/AuthDecoratorOptions.html":{}},"body":{"interfaces/AuthDecoratorOptions.html":{},"coverage.html":{}}}],["authoprization",{"_index":295,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["authorization",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UpdateViewerArgs.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["authorization(options",{"_index":100,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"miscellaneous/functions.html":{}}}],["authorization(undefined",{"_index":545,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["authorization.guard",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{}}}],["authorization_token_create_user_where_allow_one",{"_index":236,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization_token_not_found",{"_index":305,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorizationguard",{"_index":43,"title":{"guards/AuthorizationGuard.html":{}},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"coverage.html":{}}}],["authorizationtoken",{"_index":162,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{}}}],["authorizationtoken(@context",{"_index":252,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["authorizationtoken(context",{"_index":217,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["authorizationtoken.expiredat.gettime",{"_index":356,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["authorizationtoken.token",{"_index":359,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["authorizationtoken?.user",{"_index":400,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["authorizationtokenentity",{"_index":179,"title":{"classes/AuthorizationTokenEntity.html":{}},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"coverage.html":{}}}],["authorizationtokenentityresolver",{"_index":211,"title":{"classes/AuthorizationTokenEntityResolver.html":{}},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"coverage.html":{}}}],["authorizationtokenmodule",{"_index":11,"title":{"modules/AuthorizationTokenModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules.html":{},"overview.html":{}}}],["authorizationtokenservice",{"_index":125,"title":{"injectables/AuthorizationTokenService.html":{}},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"coverage.html":{},"overview.html":{}}}],["authorizationtokenvalidityperiod",{"_index":313,"title":{"interfaces/AuthorizationTokenValidityPeriod.html":{}},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"coverage.html":{}}}],["authorizationwith",{"_index":107,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorizationwithout",{"_index":109,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authotizationtoken",{"_index":328,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["autoschemafile",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":1113,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":750,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["await",{"_index":166,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["baseoptions",{"_index":635,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["bcrypt",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["binary",{"_index":1037,"title":{},"body":{"license.html":{}}}],["bio",{"_index":751,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["boolean",{"_index":80,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bound",{"_index":843,"title":{},"body":{"classes/ViewerEntity.html":{}}}],["browse",{"_index":1111,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1108,"title":{},"body":{"modules.html":{}}}],["bsd",{"_index":1024,"title":{},"body":{"index.html":{},"license.html":{}}}],["bucket",{"_index":529,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"injectables/TencentCloudCosService.html":{}}}],["bucket.split",{"_index":599,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["builds",{"_index":1001,"title":{},"body":{"index.html":{}}}],["business",{"_index":1091,"title":{},"body":{"license.html":{}}}],["byte",{"_index":1031,"title":{},"body":{"license.html":{}}}],["c",{"_index":1029,"title":{},"body":{"license.html":{}}}],["callback",{"_index":431,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["canactivate",{"_index":116,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["canactivate(context",{"_index":130,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["canactivelytokenhandler",{"_index":117,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["canactivelytokenhandler(context",{"_index":134,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["case",{"_index":826,"title":{},"body":{"injectables/UserService.html":{}}}],["caused",{"_index":1093,"title":{},"body":{"license.html":{}}}],["check",{"_index":881,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["class",{"_index":67,"title":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":180,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"overview.html":{}}}],["classprovider",{"_index":415,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["clause",{"_index":1026,"title":{},"body":{"index.html":{},"license.html":{}}}],["client",{"_index":267,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"modules/PrismaModule.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client.sendsms(request",{"_index":667,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["cloud",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/SecurityModule.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["cloud.module.ts",{"_index":630,"title":{},"body":{"modules/TencentCloudModule.html":{}}}],["cloud/common/index.ts",{"_index":924,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cloud/cos/cos.resolver.ts",{"_index":538,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["cloud/cos/cos.resolver.ts:33",{"_index":543,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cloud/cos/cos.resolver.ts:37",{"_index":547,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cloud/cos/cos.resolver.ts:51",{"_index":550,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cloud/cos/cos.resolver.ts:65",{"_index":555,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["cloud/cos/entities/cos.entity.ts",{"_index":528,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"coverage.html":{}}}],["cloud/cos/entities/cos.entity.ts:14",{"_index":535,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{}}}],["cloud/cos/entities/cos.entity.ts:19",{"_index":536,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{}}}],["cloud/cos/entities/cos.entity.ts:9",{"_index":533,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{}}}],["cloud/cos/soc.service.ts",{"_index":574,"title":{},"body":{"injectables/TencentCloudCosService.html":{},"coverage.html":{}}}],["cloud/cos/soc.service.ts:19",{"_index":588,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/cos/soc.service.ts:26",{"_index":582,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/cos/soc.service.ts:54",{"_index":585,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/cos/soc.service.ts:6",{"_index":581,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/cos/soc.service.ts:9",{"_index":586,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["cloud/sms",{"_index":490,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["cloud/sms/sms.service.ts",{"_index":633,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"coverage.html":{}}}],["cloud/sms/sms.service.ts:23",{"_index":637,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["cloud/sms/sms.service.ts:39",{"_index":643,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["cloud/sms/sms.service.ts:8",{"_index":646,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["cloud/sts/entities/sts.entity.ts",{"_index":669,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"coverage.html":{}}}],["cloud/sts/entities/sts.entity.ts:10",{"_index":676,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{}}}],["cloud/sts/entities/sts.entity.ts:15",{"_index":674,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{}}}],["cloud/sts/entities/sts.entity.ts:20",{"_index":675,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{}}}],["cloud/sts/entities/sts.entity.ts:30",{"_index":686,"title":{},"body":{"classes/TencentCloudStsFederationToken.html":{}}}],["cloud/sts/entities/sts.entity.ts:36",{"_index":688,"title":{},"body":{"classes/TencentCloudStsFederationToken.html":{}}}],["cloud/sts/entities/sts.entity.ts:42",{"_index":687,"title":{},"body":{"classes/TencentCloudStsFederationToken.html":{}}}],["cloud/sts/sts.service.ts",{"_index":689,"title":{},"body":{"injectables/TencentCloudStsService.html":{},"coverage.html":{}}}],["cloud/sts/sts.service.ts:11",{"_index":690,"title":{},"body":{"injectables/TencentCloudStsService.html":{}}}],["cloud/tencent",{"_index":629,"title":{},"body":{"modules/TencentCloudModule.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authorizationtokenmodule",{"_index":272,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"overview.html":{}}}],["cluster_authorizationtokenmodule_exports",{"_index":274,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"overview.html":{}}}],["cluster_authorizationtokenmodule_imports",{"_index":273,"title":{},"body":{"modules/AuthorizationTokenModule.html":{}}}],["cluster_authorizationtokenmodule_providers",{"_index":275,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"overview.html":{}}}],["cluster_securitymodule",{"_index":439,"title":{},"body":{"modules/SecurityModule.html":{},"overview.html":{}}}],["cluster_securitymodule_exports",{"_index":441,"title":{},"body":{"modules/SecurityModule.html":{},"overview.html":{}}}],["cluster_securitymodule_imports",{"_index":440,"title":{},"body":{"modules/SecurityModule.html":{}}}],["cluster_securitymodule_providers",{"_index":442,"title":{},"body":{"modules/SecurityModule.html":{},"overview.html":{}}}],["cluster_tencentcloudmodule",{"_index":626,"title":{},"body":{"modules/TencentCloudModule.html":{},"overview.html":{}}}],["cluster_tencentcloudmodule_exports",{"_index":628,"title":{},"body":{"modules/TencentCloudModule.html":{},"overview.html":{}}}],["cluster_tencentcloudmodule_providers",{"_index":627,"title":{},"body":{"modules/TencentCloudModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":737,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":738,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":739,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":740,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule",{"_index":763,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_exports",{"_index":764,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_imports",{"_index":765,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["cluster_userprofilemodule_providers",{"_index":766,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["code",{"_index":464,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/ViewerResolver.html":{},"license.html":{}}}],["common",{"_index":653,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["compare",{"_index":818,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["compare(password",{"_index":984,"title":{},"body":{"miscellaneous/functions.html":{}}}],["comparecode",{"_index":471,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["comparecode(phone",{"_index":477,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["compared",{"_index":347,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/ViewerResolver.html":{}}}],["comparepassword",{"_index":812,"title":{},"body":{"injectables/UserService.html":{}}}],["comparepassword(user",{"_index":815,"title":{},"body":{"injectables/UserService.html":{}}}],["comparesecurity",{"_index":813,"title":{},"body":{"injectables/UserService.html":{}}}],["comparesecurity(user",{"_index":819,"title":{},"body":{"injectables/UserService.html":{}}}],["complexity",{"_index":1014,"title":{},"body":{"index.html":{}}}],["compore",{"_index":817,"title":{},"body":{"injectables/UserService.html":{}}}],["conditions",{"_index":1043,"title":{},"body":{"license.html":{}}}],["connect",{"_index":432,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["consequential",{"_index":1083,"title":{},"body":{"license.html":{}}}],["const",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["constants",{"_index":152,"title":{},"body":{"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":122,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["constructor(authorizationtokenservice",{"_index":215,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["constructor(cosservice",{"_index":541,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["constructor(prisma",{"_index":286,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/UserProfileService.html":{}}}],["constructor(prismaclient",{"_index":801,"title":{},"body":{"classes/UserResolver.html":{}}}],["constructor(private",{"_index":462,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"classes/UserInterfaceResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["constructor(profileservice",{"_index":773,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["constructor(reflector",{"_index":123,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["constructor(request",{"_index":382,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["constructor(securitysmsservice",{"_index":453,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/UserService.html":{}}}],["constructor(sts",{"_index":579,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["constructor(tencentcloudsmsservice",{"_index":474,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["constructor(userprofileservice",{"_index":728,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["constructor(userservice",{"_index":852,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["context",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["context.authorizationtoken",{"_index":253,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["context.gethandler",{"_index":161,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["context.gettype",{"_index":156,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["context.request.context",{"_index":401,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.switchtohttp().getrequest",{"_index":169,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["context.switchtohttp().getrequest().context",{"_index":159,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["context.ts",{"_index":377,"title":{},"body":{"classes/ExecutionContext.html":{},"coverage.html":{}}}],["context.ts:15",{"_index":389,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:4",{"_index":383,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:42",{"_index":394,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:6",{"_index":386,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:61",{"_index":392,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:7",{"_index":385,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.ts:8",{"_index":387,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["context.user",{"_index":467,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"classes/ViewerResolver.html":{}}}],["continue",{"_index":880,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["contract",{"_index":1096,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":1057,"title":{},"body":{"license.html":{}}}],["convert",{"_index":876,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["copyright",{"_index":1028,"title":{},"body":{"license.html":{}}}],["core",{"_index":1005,"title":{},"body":{"index.html":{}}}],["cos",{"_index":534,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{}}}],["cos/cos.resolver",{"_index":631,"title":{},"body":{"modules/TencentCloudModule.html":{}}}],["cosservice",{"_index":544,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["coverage",{"_index":891,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":293,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"miscellaneous/functions.html":{}}}],["create(prismaclient",{"_index":388,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["createauthorizationtoken",{"_index":213,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["createauthorizationtoken(args",{"_index":221,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["createauthorizationtokenargs",{"_index":222,"title":{"classes/CreateAuthorizationTokenArgs.html":{}},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/UpdateViewerArgs.html":{},"coverage.html":{}}}],["createclient",{"_index":634,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["createclient(region",{"_index":636,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["createcostemporaryreadcredential",{"_index":539,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["createcostemporarywritecredential",{"_index":540,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["createcostemporarywritecredential(type",{"_index":551,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["createdat",{"_index":519,"title":{},"body":{"injectables/SecuritySmsService.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/ViewerEntity.html":{}}}],["createparamdecorator(function",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createsecurity",{"_index":451,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["createsecurity(phone",{"_index":455,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["createtemporaryreadcredential",{"_index":575,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["createtemporarywritecredential",{"_index":576,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["createtemporarywritecredential(name",{"_index":584,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["createtokenwithsecurity",{"_index":282,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["createtokenwithsecurity(user",{"_index":289,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["createuniontype",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuserauthorizationtoken",{"_index":283,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["createuserauthorizationtoken(user",{"_index":291,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["createviewersecurity",{"_index":452,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["createviewersecurity(@context",{"_index":466,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["createviewersecurity(context",{"_index":457,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["credential",{"_index":549,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"miscellaneous/functions.html":{}}}],["credential'})@authorizationwith",{"_index":554,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["credentials",{"_index":670,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["custom",{"_index":918,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["customalphabet('0123456789",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customalphabet('23456789qwertyupasdfghjklzxcvbnm",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customalphabet('qwertyuiopasdfghjklzxcvbnm",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customalphabet(alphabet",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damage",{"_index":1107,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1084,"title":{},"body":{"license.html":{}}}],["data",{"_index":262,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/ViewerResolver.html":{},"license.html":{}}}],["data[key",{"_index":878,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["database",{"_index":303,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["datasources",{"_index":425,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":189,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/ViewerEntity.html":{}}}],["date.now",{"_index":523,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["dayjs",{"_index":304,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"injectables/SecuritySmsService.html":{},"dependencies.html":{}}}],["dayjs().add(10",{"_index":345,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["dayjs().add(options.expiredin",{"_index":501,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["days",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["decorator",{"_index":94,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"miscellaneous/functions.html":{}}}],["decorators",{"_index":190,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["default",{"_index":638,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":126,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derived",{"_index":1061,"title":{},"body":{"license.html":{}}}],["desc",{"_index":520,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["description",{"_index":184,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["destory",{"_index":436,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["developers",{"_index":1010,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1015,"title":{},"body":{"index.html":{}}}],["direct",{"_index":1078,"title":{},"body":{"license.html":{}}}],["disclaimed",{"_index":1074,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1049,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":437,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["distribution",{"_index":1054,"title":{},"body":{"license.html":{}}}],["document",{"_index":1021,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":892,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["don't",{"_index":171,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["dotenv",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":806,"title":{},"body":{"classes/UserResolver.html":{}}}],["dto/create",{"_index":245,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["dto/profile",{"_index":780,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["dto/update",{"_index":866,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["duration",{"_index":589,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["durationseconds",{"_index":602,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["e",{"_index":844,"title":{},"body":{"classes/ViewerEntity.html":{}}}],["ecosystem",{"_index":1016,"title":{},"body":{"index.html":{}}}],["effect",{"_index":609,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["email",{"_index":723,"title":{},"body":{"classes/UserInterface.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["email(@parent",{"_index":871,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["email(user",{"_index":854,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["email.replace(/^(\\w{1}).*?(\\w{1",{"_index":872,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["encrypted",{"_index":985,"title":{},"body":{"miscellaneous/functions.html":{}}}],["endorse",{"_index":1058,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":92,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{}}}],["endpoit",{"_index":96,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntity.html":{}}}],["entities/authorization",{"_index":247,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["entities/cos.entity",{"_index":558,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["entities/profile.entity",{"_index":781,"title":{},"body":{"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{}}}],["entities/user.entity",{"_index":807,"title":{},"body":{"classes/UserResolver.html":{}}}],["entities/user.interface",{"_index":733,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["entities/user.union",{"_index":809,"title":{},"body":{"classes/UserResolver.html":{}}}],["entities/viewer.entity",{"_index":834,"title":{},"body":{"classes/UserUpdateInput.html":{},"classes/ViewerResolver.html":{}}}],["entity",{"_index":185,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["entity.'})@authorization({hasauthorization",{"_index":227,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["enum",{"_index":560,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["enumerations",{"_index":970,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":249,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["error",{"_index":353,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["error(authorization_token_create_user_where_allow_one",{"_index":257,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["error(authorization_token_not_found",{"_index":354,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["error(constants[`user_${key.touppercase()}_field_existed",{"_index":886,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["error(security_compare_failed",{"_index":351,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/ViewerResolver.html":{}}}],["error(unauthorized",{"_index":178,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["error(user_not_found",{"_index":265,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/UserResolver.html":{}}}],["error(user_not_set_phone",{"_index":468,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["even",{"_index":1103,"title":{},"body":{"license.html":{}}}],["event",{"_index":1075,"title":{},"body":{"license.html":{}}}],["execution",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{}}}],["executioncontext",{"_index":28,"title":{"classes/ExecutionContext.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["executioncontext.create(prisma",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["exemplary",{"_index":1082,"title":{},"body":{"license.html":{}}}],["expiration",{"_index":685,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["expired",{"_index":192,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["expiredat",{"_index":186,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{}}}],["expiredat.gettime",{"_index":331,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["expiredin",{"_index":321,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"injectables/SecuritySmsService.html":{}}}],["expiredin.unit",{"_index":325,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["expiredin.value",{"_index":323,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["expiredtime",{"_index":683,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["export",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["express",{"_index":149,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/ExecutionContext.html":{},"dependencies.html":{},"license.html":{}}}],["extendcode",{"_index":658,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["extends",{"_index":422,"title":{},"body":{"modules/PrismaModule.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerEntity.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":110,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"injectables/SecuritySmsService.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":205,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["field((type",{"_index":210,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/ViewerEntity.html":{}}}],["field(undefined",{"_index":191,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{}}}],["file",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{}}}],["find",{"_index":371,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["fitness",{"_index":1071,"title":{},"body":{"license.html":{}}}],["fiveminutesdate",{"_index":360,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["fiveminutesdate.gettime",{"_index":357,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["flutter",{"_index":1020,"title":{},"body":{"index.html":{}}}],["following",{"_index":1042,"title":{},"body":{"license.html":{}}}],["form",{"_index":1050,"title":{},"body":{"license.html":{}}}],["forms",{"_index":1038,"title":{},"body":{"license.html":{}}}],["found",{"_index":352,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["friendly",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full",{"_index":848,"title":{},"body":{"classes/ViewerEntity.html":{},"index.html":{}}}],["function",{"_index":99,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/ViewerResolver.html":{},"coverage.html":{}}}],["functions",{"_index":976,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["gem",{"_index":1032,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getauthorizationtoken",{"_index":380,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["getauthorizationtoken(prismaclient",{"_index":391,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["getbaseoptions",{"_index":645,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["getconfig",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcredential",{"_index":652,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getfederationtokenresponse",{"_index":678,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["gethasauthorization",{"_index":118,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gethasauthorization(context",{"_index":136,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gethasauthorizationtype",{"_index":119,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gethasauthorizationtype(context",{"_index":138,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gethttpauthorization",{"_index":381,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["gethttpauthorization(request",{"_index":393,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["getoptions",{"_index":472,"title":{},"body":{"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{}}}],["getoptions(haschina",{"_index":479,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["gettemporarycredentialdurationseconds",{"_index":587,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["getting",{"_index":995,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettokenexpiredin",{"_index":284,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["gif",{"_index":563,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["global",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["goods",{"_index":1087,"title":{},"body":{"license.html":{}}}],["gqlcontexttype",{"_index":146,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gqlexecutioncontext",{"_index":147,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext",{"_index":158,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":1112,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":157,"title":{},"body":{"guards/AuthorizationGuard.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["graphqlisodatetime",{"_index":460,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{}}}],["graphqlmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forrootasync",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["guangzhou",{"_index":640,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["guard",{"_index":111,"title":{"guards/AuthorizationGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":112,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["hasauthorization",{"_index":78,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"miscellaneous/variables.html":{}}}],["haschina",{"_index":481,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["hash",{"_index":877,"title":{},"body":{"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hash(password",{"_index":986,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hastokenexpired",{"_index":285,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["hastokenexpired(token",{"_index":299,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["hastokenexpiredtype",{"_index":81,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"miscellaneous/enumerations.html":{}}}],["hastokenexpiredtype.auth",{"_index":104,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"miscellaneous/variables.html":{}}}],["hastokenexpiredtype.refresh",{"_index":269,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["header",{"_index":395,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["headers",{"_index":405,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["headers[key",{"_index":409,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["headers[key.tolowercase",{"_index":407,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["help",{"_index":1012,"title":{},"body":{"index.html":{}}}],["helper",{"_index":989,"title":{},"body":{"miscellaneous/functions.html":{}}}],["holder",{"_index":1055,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1065,"title":{},"body":{"license.html":{}}}],["hook",{"_index":430,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":91,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpprofile",{"_index":663,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["icontext",{"_index":144,"title":{},"body":{"guards/AuthorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["icontext.create",{"_index":167,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["id",{"_index":203,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["idhelper",{"_index":241,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{}}}],["idhelper.alphabet(32",{"_index":601,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["idhelper.id(128",{"_index":337,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["idhelper.id(32",{"_index":263,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/SecuritySmsService.html":{}}}],["idhelper.numeral(6",{"_index":500,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["implements",{"_index":153,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"modules/PrismaModule.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"miscellaneous/variables.html":{}}}],["implied",{"_index":1066,"title":{},"body":{"license.html":{}}}],["import",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["imports",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{}}}],["incidental",{"_index":1080,"title":{},"body":{"license.html":{}}}],["include",{"_index":413,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["including",{"_index":1068,"title":{},"body":{"license.html":{}}}],["index",{"_index":75,"title":{"index.html":{}},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":1079,"title":{},"body":{"license.html":{}}}],["info",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["inherited",{"_index":707,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["init",{"_index":429,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["initializecontext",{"_index":120,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["initializecontext(context",{"_index":140,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["inject",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":145,"title":{"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":280,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":373,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/UpdateViewerArgs.html":{},"injectables/UserService.html":{}}}],["inputtype",{"_index":795,"title":{},"body":{"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{}}}],["instanceof",{"_index":349,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/ViewerResolver.html":{}}}],["int",{"_index":677,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["interface",{"_index":71,"title":{"interfaces/AuthDecoratorOptions.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{}},"body":{"interfaces/AuthDecoratorOptions.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/UserInterface.html":{},"coverage.html":{}}}],["interface.resolver",{"_index":745,"title":{},"body":{"modules/UserModule.html":{}}}],["interface.resolver.ts",{"_index":727,"title":{},"body":{"classes/UserInterfaceResolver.html":{},"coverage.html":{}}}],["interface.resolver.ts:12",{"_index":732,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["interface.resolver.ts:8",{"_index":730,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["interfaces",{"_index":73,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"overview.html":{}}}],["interfacetype",{"_index":720,"title":{},"body":{"classes/UserInterface.html":{}}}],["interruption",{"_index":1092,"title":{},"body":{"license.html":{}}}],["iso8601",{"_index":684,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["item",{"_index":507,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["jpg",{"_index":561,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["json.stringify",{"_index":605,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["kernel",{"_index":390,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["key",{"_index":402,"title":{},"body":{"classes/ExecutionContext.html":{},"injectables/TencentCloudCosService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/ViewerResolver.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["liability",{"_index":1095,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1077,"title":{},"body":{"license.html":{}}}],["license",{"_index":1023,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":1027,"title":{},"body":{"index.html":{}}}],["limited",{"_index":1069,"title":{},"body":{"license.html":{}}}],["list",{"_index":619,"title":{},"body":{"injectables/TencentCloudCosService.html":{},"license.html":{}}}],["literal",{"_index":363,"title":{},"body":{"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/TencentCloudCosResolver.html":{}}}],["loadconfig",{"_index":898,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadconfig(path",{"_index":987,"title":{},"body":{"miscellaneous/functions.html":{}}}],["location",{"_index":752,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["logged",{"_index":199,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["logger",{"_index":416,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["logger('prisma",{"_index":423,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":202,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{}}}],["loss",{"_index":1089,"title":{},"body":{"license.html":{}}}],["lte",{"_index":344,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["mail",{"_index":845,"title":{},"body":{"classes/ViewerEntity.html":{}}}],["map((item",{"_index":506,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["matches",{"_index":889,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["matching",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materials",{"_index":1053,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":1007,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1070,"title":{},"body":{"license.html":{}}}],["met",{"_index":1044,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":963,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":114,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["middleware",{"_index":420,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["minutes').todate",{"_index":346,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["miscellaneous",{"_index":969,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":887,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["modification",{"_index":1039,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["months",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":1009,"title":{},"body":{"index.html":{}}}],["mp3",{"_index":566,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["mp4",{"_index":564,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["mutation",{"_index":231,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{}}}],["mutation((returns",{"_index":268,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["mutation(undefined",{"_index":223,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{}}}],["mutation(undefined)@authorization({hasauthorization",{"_index":458,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["mutation(undefined)@authorizationwith",{"_index":778,"title":{},"body":{"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{}}}],["name",{"_index":129,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["name/cos:abortmultipartupload",{"_index":624,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:completemultipartupload",{"_index":623,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:getobject",{"_index":612,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:headobject",{"_index":613,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:initiatemultipartupload",{"_index":618,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:listmultipartuploads",{"_index":620,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:listparts",{"_index":621,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:optionsobject",{"_index":614,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:postobject",{"_index":617,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:putobject",{"_index":616,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["name/cos:uploadpart",{"_index":622,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["names",{"_index":1056,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":318,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["namespace_name",{"_index":317,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["nanoid",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["nanoid(size",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":89,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/SecuritySmsResolver.html":{},"classes/UpdateViewerArgs.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["negligence",{"_index":1099,"title":{},"body":{"license.html":{}}}],["nestjs",{"_index":428,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["networking",{"_index":1004,"title":{},"body":{"index.html":{}}}],["new",{"_index":177,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserResolver.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newphonesecurity",{"_index":697,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"classes/ViewerResolver.html":{}}}],["nodejs",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["nodejs/tencentcloud/services/sms/v20190711/sms_client",{"_index":649,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["nodejs/tencentcloud/services/sms/v20190711/sms_models",{"_index":651,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["nodejs/tencentcloud/services/sts/v20180813/sts_client",{"_index":692,"title":{},"body":{"injectables/TencentCloudStsService.html":{}}}],["nodejs/tencentcloud/services/sts/v20180813/sts_models",{"_index":679,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["notice",{"_index":1048,"title":{},"body":{"license.html":{}}}],["nullable",{"_index":680,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{}}}],["number",{"_index":365,"title":{},"body":{"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["number.parseint",{"_index":491,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["numeral",{"_index":919,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":294,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/TencentCloudCosService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":569,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudSmsService.html":{},"classes/ViewerResolver.html":{}}}],["object.keys(data",{"_index":875,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["object.keys(where).length",{"_index":255,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["objecttype",{"_index":206,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UserEntity.html":{},"classes/UserProfileEntity.html":{},"classes/ViewerEntity.html":{}}}],["ogg",{"_index":565,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["omit",{"_index":715,"title":{},"body":{"classes/UserInterface.html":{},"classes/UserProfileUpdateInput.html":{},"classes/ViewerEntity.html":{}}}],["omittype",{"_index":796,"title":{},"body":{"classes/UserProfileUpdateInput.html":{}}}],["onmoduledestroy",{"_index":417,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":418,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":999,"title":{},"body":{"index.html":{}}}],["optional",{"_index":77,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"miscellaneous/functions.html":{}}}],["options.endpoint",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["options.expiredin",{"_index":510,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["options.isproduction",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["options.templateid",{"_index":515,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["options.veriables",{"_index":504,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["options?.hasauthorization",{"_index":102,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["options?.type",{"_index":103,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["orderby",{"_index":518,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["other.id",{"_index":885,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["otherwise",{"_index":1100,"title":{},"body":{"license.html":{}}}],["out",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1114,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":761,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["package",{"_index":942,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":95,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserService.html":{}}}],["param.hasauthorization",{"_index":97,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["param.type",{"_index":98,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["parameters",{"_index":128,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":644,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["paramsset",{"_index":503,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["parent",{"_index":232,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"classes/ViewerResolver.html":{}}}],["partialtype",{"_index":797,"title":{},"body":{"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{}}}],["partialtype(userprofileentity",{"_index":798,"title":{},"body":{"classes/UserProfileUpdateInput.html":{}}}],["particular",{"_index":1072,"title":{},"body":{"license.html":{}}}],["password",{"_index":724,"title":{},"body":{"classes/UserInterface.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerResolver.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["passwordhelper",{"_index":821,"title":{},"body":{"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["passwordhelper.compare(password",{"_index":823,"title":{},"body":{"injectables/UserService.html":{}}}],["passwordhelper.hash(data[key",{"_index":879,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["path",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"classes/UserProfileEntity.html":{},"miscellaneous/functions.html":{}}}],["period",{"_index":298,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":1064,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1040,"title":{},"body":{"license.html":{}}}],["phone",{"_index":264,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserInterface.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["phone(@parent",{"_index":868,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["phone(user",{"_index":856,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["phone.replace(/(.*)\\d{4}(\\d{4",{"_index":869,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["phone.startswith('+86",{"_index":498,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["phonenumberset",{"_index":514,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["pick",{"_index":642,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"classes/UserUpdateInput.html":{}}}],["picktype",{"_index":701,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"classes/UserUpdateInput.html":{}}}],["picktype(viewerentity",{"_index":835,"title":{},"body":{"classes/UserUpdateInput.html":{}}}],["platform",{"_index":1002,"title":{},"body":{"index.html":{}}}],["playground",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin",{"_index":1006,"title":{},"body":{"index.html":{}}}],["png",{"_index":562,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["policy",{"_index":604,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["possibility",{"_index":1105,"title":{},"body":{"license.html":{}}}],["prior",{"_index":1063,"title":{},"body":{"license.html":{}}}],["prisma",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"classes/UserInterface.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma.authorizationtokengetpayload",{"_index":209,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{}}}],["prisma.middleware",{"_index":990,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prisma.usergetpayload",{"_index":789,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["prisma.userwhereuniqueinput",{"_index":841,"title":{},"body":{"classes/UserWhereUniqueInput.html":{}}}],["prisma/client",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["prismaclient.authorizationtoken.findunique",{"_index":412,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["prismaloggermiddleware",{"_index":419,"title":{},"body":{"modules/PrismaModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["prismaloggermiddleware(logger",{"_index":988,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prismamodule",{"_index":13,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["private",{"_index":154,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"injectables/SecuritySmsService.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["process.argv",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_url",{"_index":427,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.tencent_cloud_cos_bucket",{"_index":591,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["process.env.tencent_cloud_cos_region",{"_index":592,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["process.env.tencent_cloud_sms_app_id",{"_index":655,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["process.env.tencent_cloud_sms_china_template_id",{"_index":494,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_china_veriables",{"_index":495,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_expired_in",{"_index":492,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_extend_code",{"_index":659,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["process.env.tencent_cloud_sms_other_template_id",{"_index":496,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_other_veriables",{"_index":497,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["process.env.tencent_cloud_sms_sender_id",{"_index":661,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["process.env.tencent_cloud_sms_sign",{"_index":657,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["procurement",{"_index":1085,"title":{},"body":{"license.html":{}}}],["products",{"_index":1060,"title":{},"body":{"license.html":{}}}],["profile",{"_index":662,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/ViewerEntity.html":{}}}],["profile(@parent",{"_index":735,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["profile(user",{"_index":731,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["profile.resolver",{"_index":769,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["profile.service",{"_index":770,"title":{},"body":{"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{}}}],["profile.userid",{"_index":784,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["profile/entities/profile.entity",{"_index":722,"title":{},"body":{"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{}}}],["profile/profile.module",{"_index":744,"title":{},"body":{"modules/UserModule.html":{}}}],["profile/profile.service",{"_index":734,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["profileservice",{"_index":775,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["profits",{"_index":1090,"title":{},"body":{"license.html":{}}}],["project",{"_index":1017,"title":{},"body":{"index.html":{}}}],["promise",{"_index":133,"title":{},"body":{"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/UserProfileService.html":{},"injectables/UserService.html":{}}}],["promote",{"_index":1059,"title":{},"body":{"license.html":{}}}],["properties",{"_index":76,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"classes/AuthorizationTokenEntity.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{}}}],["provide",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1041,"title":{},"body":{"license.html":{}}}],["provider",{"_index":421,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["public",{"_index":378,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["purpose",{"_index":1073,"title":{},"body":{"license.html":{}}}],["qcs::cos:${region}:uid/${uid}:${bucket",{"_index":615,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["qcs::cos:${region}:uid/${uid}:${bucket}/${name",{"_index":625,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["query",{"_index":233,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["query(undefined",{"_index":804,"title":{},"body":{"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["query(undefined)@authorization({hasauthorization",{"_index":218,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["read",{"_index":548,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{}}}],["readability",{"_index":920,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["readability(23456789qwertyupasdfghjklzxcvbnm",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":155,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"modules/PrismaModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["real",{"_index":993,"title":{},"body":{"miscellaneous/functions.html":{}}}],["redistribution",{"_index":1035,"title":{},"body":{"license.html":{}}}],["redistributions",{"_index":1045,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":124,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["refresh",{"_index":194,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"miscellaneous/enumerations.html":{}}}],["refreshauthorizationtoken",{"_index":214,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{}}}],["refreshauthorizationtoken(@context",{"_index":270,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["refreshauthorizationtoken(authorizationtoken",{"_index":301,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["refreshauthorizationtoken(context",{"_index":226,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["refreshexpiredat",{"_index":187,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{}}}],["refreshexpiredin",{"_index":322,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{}}}],["refreshexpiredin.unit",{"_index":327,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["refreshexpiredin.value",{"_index":326,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["region",{"_index":530,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{}}}],["registered",{"_index":706,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/ViewerEntity.html":{}}}],["registerenumtype",{"_index":556,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["registerenumtype(allowuploadfiletype",{"_index":568,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["rejectonnotfound",{"_index":258,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"injectables/SecuritySmsService.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["replace('#code",{"_index":508,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["replace('#expired",{"_index":509,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["reproduce",{"_index":1051,"title":{},"body":{"license.html":{}}}],["req",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["request",{"_index":148,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/ExecutionContext.html":{},"injectables/TencentCloudSmsService.html":{}}}],["request.context",{"_index":397,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["request.context.authorizationtoken?.token",{"_index":398,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["request.header",{"_index":403,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["request.header(key",{"_index":404,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["request.headers",{"_index":406,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["reserved",{"_index":1034,"title":{},"body":{"license.html":{}}}],["reset",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}],["resolve",{"_index":992,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolvecontext",{"_index":121,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["resolvecontext(context",{"_index":142,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["resolvefield",{"_index":557,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"classes/ViewerResolver.html":{}}}],["resolvefield(undefined",{"_index":546,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"classes/ViewerResolver.html":{}}}],["resolveprofile",{"_index":786,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["resolveprofile(user",{"_index":788,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["resolver",{"_index":234,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["resolvers",{"_index":632,"title":{},"body":{"modules/TencentCloudModule.html":{}}}],["resolvetype",{"_index":934,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["resolvetype(value",{"_index":991,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resource",{"_index":572,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{}}}],["result",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1046,"title":{},"body":{"license.html":{}}}],["return",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":132,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1033,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["sdk",{"_index":648,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"dependencies.html":{}}}],["seconds",{"_index":590,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["seconds').todate",{"_index":502,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["secrect",{"_index":673,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["secure",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["security",{"_index":254,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/UpdateViewerArgs.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["security.expiredat.gettime",{"_index":522,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["security.id",{"_index":525,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["security.usedat",{"_index":521,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["security/security.module",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["security_compare_failed",{"_index":306,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["securitymodule",{"_index":14,"title":{"modules/SecurityModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SecurityModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["securitysmscode",{"_index":488,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["securitysmsresolver",{"_index":446,"title":{"classes/SecuritySmsResolver.html":{}},"body":{"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"coverage.html":{}}}],["securitysmsservice",{"_index":443,"title":{"injectables/SecuritySmsService.html":{}},"body":{"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["send",{"_index":463,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/TencentCloudSmsService.html":{}}}],["send(params",{"_index":641,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["send(phone",{"_index":484,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["senderid",{"_index":660,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["sendsmsrequest",{"_index":650,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["server",{"_index":691,"title":{},"body":{"injectables/TencentCloudStsService.html":{},"dependencies.html":{}}}],["services",{"_index":1088,"title":{},"body":{"license.html":{}}}],["set",{"_index":434,"title":{},"body":{"modules/PrismaModule.html":{},"classes/UpdateViewerArgs.html":{},"miscellaneous/variables.html":{}}}],["setmetadata",{"_index":83,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["setmetadata(auth_metadata_has_authorization",{"_index":101,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["setting",{"_index":315,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["setting.expiredin.unit",{"_index":339,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["setting.refreshexpiredin.unit",{"_index":342,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["shall",{"_index":1076,"title":{},"body":{"license.html":{}}}],["sign",{"_index":656,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["size",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sms",{"_index":486,"title":{},"body":{"injectables/SecuritySmsService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{}}}],["sms.resolver",{"_index":447,"title":{},"body":{"modules/SecurityModule.html":{}}}],["sms.resolver.ts",{"_index":450,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"coverage.html":{}}}],["sms.resolver.ts:10",{"_index":454,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["sms.resolver.ts:14",{"_index":456,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["sms.resolver.ts:28",{"_index":459,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["sms.service",{"_index":448,"title":{},"body":{"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/UserService.html":{}}}],["sms.service.ts",{"_index":470,"title":{},"body":{"injectables/SecuritySmsService.html":{},"coverage.html":{}}}],["sms.service.ts:14",{"_index":480,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.service.ts:37",{"_index":485,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.service.ts:68",{"_index":478,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.service.ts:8",{"_index":476,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.service.ts:92",{"_index":489,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["sms.tencentcloudapi.com",{"_index":664,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["sms_code",{"_index":975,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["smssdkappid",{"_index":654,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["soc.service",{"_index":559,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["socfony",{"_index":997,"title":{},"body":{"index.html":{}}}],["social",{"_index":1003,"title":{},"body":{"index.html":{}}}],["software",{"_index":1000,"title":{},"body":{"index.html":{},"license.html":{}}}],["solve",{"_index":1013,"title":{},"body":{"index.html":{}}}],["source",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"modules/PrismaModule.html":{},"modules/SecurityModule.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"index.html":{},"license.html":{}}}],["special",{"_index":1081,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1062,"title":{},"body":{"license.html":{}}}],["split",{"_index":505,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["src/.../app.config.ts",{"_index":980,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../authorization.decorator.ts",{"_index":977,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../context.decorator.ts",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cos.resolver.ts",{"_index":971,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../enums.ts",{"_index":972,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../id.helper.ts",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":981,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logger.middleware.ts",{"_index":982,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":978,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../password.helper.ts",{"_index":979,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prisma.module.ts",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.union.ts",{"_index":983,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../viewer.resolver.ts",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.config.ts",{"_index":895,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["src/authorization",{"_index":181,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/SecuritySmsResolver.html":{},"classes/UpdateViewerArgs.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/authorization.decorator",{"_index":235,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudCosResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{}}}],["src/authorization.decorator.ts",{"_index":74,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/authorization.guard.ts",{"_index":113,"title":{},"body":{"guards/AuthorizationGuard.html":{},"coverage.html":{}}}],["src/authorization.guard.ts:16",{"_index":127,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:23",{"_index":143,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:31",{"_index":137,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:38",{"_index":139,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:45",{"_index":135,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:58",{"_index":141,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/authorization.guard.ts:67",{"_index":131,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["src/constants",{"_index":238,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["src/constants.ts",{"_index":912,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/context.decorator",{"_index":239,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{},"classes/ViewerResolver.html":{}}}],["src/context.decorator.ts",{"_index":913,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/execution",{"_index":240,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{},"coverage.html":{}}}],["src/helper",{"_index":242,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["src/helper/id.helper.ts",{"_index":916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/helper/password.helper.ts",{"_index":921,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/main.ts",{"_index":922,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/prisma",{"_index":277,"title":{},"body":{"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{}}}],["src/prisma/middleware/logger.middleware.ts",{"_index":923,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":414,"title":{},"body":{"modules/PrismaModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/security/security",{"_index":449,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/security/security.module",{"_index":743,"title":{},"body":{"modules/UserModule.html":{}}}],["src/security/security.module.ts",{"_index":444,"title":{},"body":{"modules/SecurityModule.html":{}}}],["src/tencent",{"_index":445,"title":{},"body":{"modules/SecurityModule.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/user/dto",{"_index":376,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["src/user/dto/update",{"_index":695,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"coverage.html":{}}}],["src/user/dto/user",{"_index":832,"title":{},"body":{"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts",{"_index":704,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["src/user/entities/user.interface.ts",{"_index":714,"title":{},"body":{"classes/UserInterface.html":{},"coverage.html":{}}}],["src/user/entities/user.interface.ts:27",{"_index":717,"title":{},"body":{"classes/UserInterface.html":{}}}],["src/user/entities/user.interface.ts:36",{"_index":718,"title":{},"body":{"classes/UserInterface.html":{}}}],["src/user/entities/user.interface.ts:44",{"_index":716,"title":{},"body":{"classes/UserInterface.html":{}}}],["src/user/entities/user.interface.ts:52",{"_index":719,"title":{},"body":{"classes/UserInterface.html":{}}}],["src/user/entities/user.union.ts",{"_index":933,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/user/entities/viewer.entity",{"_index":208,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{}}}],["src/user/entities/viewer.entity.ts",{"_index":842,"title":{},"body":{"classes/ViewerEntity.html":{},"coverage.html":{}}}],["src/user/entities/viewer.entity.ts:22",{"_index":847,"title":{},"body":{"classes/ViewerEntity.html":{}}}],["src/user/entities/viewer.entity.ts:31",{"_index":849,"title":{},"body":{"classes/ViewerEntity.html":{}}}],["src/user/enums",{"_index":244,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{}}}],["src/user/enums.ts",{"_index":974,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/user/profile/dto/profile",{"_index":793,"title":{},"body":{"classes/UserProfileUpdateInput.html":{},"coverage.html":{}}}],["src/user/profile/entities/profile.entity.ts",{"_index":749,"title":{},"body":{"classes/UserProfileEntity.html":{},"coverage.html":{}}}],["src/user/profile/entities/profile.entity.ts:14",{"_index":758,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:20",{"_index":755,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:26",{"_index":756,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:32",{"_index":757,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:38",{"_index":760,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/entities/profile.entity.ts:8",{"_index":762,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["src/user/profile/profile.module.ts",{"_index":767,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["src/user/profile/profile.resolver.ts",{"_index":771,"title":{},"body":{"classes/UserProfileResolver.html":{},"coverage.html":{}}}],["src/user/profile/profile.resolver.ts:10",{"_index":774,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["src/user/profile/profile.resolver.ts:18",{"_index":779,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["src/user/profile/profile.service.ts",{"_index":785,"title":{},"body":{"injectables/UserProfileService.html":{},"coverage.html":{}}}],["src/user/profile/profile.service.ts:5",{"_index":787,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["src/user/profile/profile.service.ts:8",{"_index":790,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["src/user/user",{"_index":726,"title":{},"body":{"classes/UserInterfaceResolver.html":{},"coverage.html":{}}}],["src/user/user.module",{"_index":278,"title":{},"body":{"modules/AuthorizationTokenModule.html":{}}}],["src/user/user.module.ts",{"_index":742,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.resolver.ts",{"_index":800,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["src/user/user.resolver.ts:15",{"_index":805,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.resolver.ts:9",{"_index":802,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.service",{"_index":307,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["src/user/user.service.ts",{"_index":811,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:16",{"_index":816,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:21",{"_index":820,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:8",{"_index":814,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/viewer.resolver.ts",{"_index":850,"title":{},"body":{"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/viewer.resolver.ts:32",{"_index":853,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["src/user/viewer.resolver.ts:39",{"_index":857,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["src/user/viewer.resolver.ts:49",{"_index":855,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["src/user/viewer.resolver.ts:62",{"_index":862,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["src/user/viewer.resolver.ts:68",{"_index":859,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["stack",{"_index":998,"title":{},"body":{"index.html":{}}}],["started",{"_index":996,"title":{"index.html":{},"license.html":{}},"body":{}}],["statement",{"_index":608,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["statements",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":379,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["status",{"_index":1018,"title":{},"body":{"index.html":{}}}],["storage",{"_index":754,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["strict",{"_index":1097,"title":{},"body":{"license.html":{}}}],["string",{"_index":196,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["sts",{"_index":532,"title":{},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudStsService.html":{}}}],["sts.tencentcloudapi.com",{"_index":693,"title":{},"body":{"injectables/TencentCloudStsService.html":{}}}],["stsclient",{"_index":595,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["stsclient.getfederationtoken",{"_index":600,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["substitute",{"_index":1086,"title":{},"body":{"license.html":{}}}],["such",{"_index":1106,"title":{},"body":{"license.html":{}}}],["super",{"_index":424,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":1109,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1110,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":825,"title":{},"body":{"injectables/UserService.html":{}}}],["system",{"_index":319,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["table",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["teams",{"_index":1011,"title":{},"body":{"index.html":{}}}],["templateid",{"_index":482,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["templateparamset",{"_index":516,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["temporary",{"_index":583,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["temporarycredentialdurationseconds",{"_index":578,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["tencent",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["tencentcloud",{"_index":647,"title":{},"body":{"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"dependencies.html":{}}}],["tencentcloudcoscredentials",{"_index":527,"title":{"classes/TencentCloudCosCredentials.html":{}},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"coverage.html":{}}}],["tencentcloudcosresolver",{"_index":537,"title":{"classes/TencentCloudCosResolver.html":{}},"body":{"classes/TencentCloudCosResolver.html":{},"modules/TencentCloudModule.html":{},"coverage.html":{}}}],["tencentcloudcosservice",{"_index":542,"title":{"injectables/TencentCloudCosService.html":{}},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"coverage.html":{},"overview.html":{}}}],["tencentcloudmodule",{"_index":15,"title":{"modules/TencentCloudModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules.html":{},"overview.html":{}}}],["tencentcloudsmsservice",{"_index":475,"title":{"injectables/TencentCloudSmsService.html":{}},"body":{"injectables/SecuritySmsService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudSmsService.html":{},"coverage.html":{},"overview.html":{}}}],["tencentcloudstscredentials",{"_index":668,"title":{"classes/TencentCloudStsCredentials.html":{}},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"coverage.html":{}}}],["tencentcloudstsfederationtoken",{"_index":531,"title":{"classes/TencentCloudStsFederationToken.html":{}},"body":{"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"coverage.html":{}}}],["tencentcloudstsservice",{"_index":580,"title":{"injectables/TencentCloudStsService.html":{}},"body":{"injectables/TencentCloudCosService.html":{},"modules/TencentCloudModule.html":{},"injectables/TencentCloudStsService.html":{},"coverage.html":{},"overview.html":{}}}],["theory",{"_index":1094,"title":{},"body":{"license.html":{}}}],["this.$connect",{"_index":433,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["this.$disconnect",{"_index":438,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["this.$use(prismaloggermiddleware(this.logger",{"_index":435,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["this.authorizationtokenservice.createtokenwithsecurity",{"_index":266,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["this.authorizationtokenservice.hastokenexpired",{"_index":165,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.authorizationtokenservice.refreshauthorizationtoken",{"_index":271,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["this.baseoptions",{"_index":666,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["this.canactivelytokenhandler(context",{"_index":175,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.comparepassword(user",{"_index":828,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cosservice.createtemporaryreadcredential",{"_index":571,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["this.cosservice.createtemporarywritecredential(idhelper.id(64",{"_index":573,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["this.cosservice.options",{"_index":570,"title":{},"body":{"classes/TencentCloudCosResolver.html":{}}}],["this.createclient(region",{"_index":665,"title":{},"body":{"injectables/TencentCloudSmsService.html":{}}}],["this.createsecurity(phone",{"_index":469,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["this.createuserauthorizationtoken(authorizationtoken.userid",{"_index":361,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.createuserauthorizationtoken(user",{"_index":350,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.getauthorizationtoken",{"_index":399,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["this.gethasauthorization(context",{"_index":173,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.gethasauthorizationtype(context",{"_index":174,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.gethttpauthorization(request",{"_index":396,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["this.getoptions(haschina",{"_index":499,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.gettokenexpiredin",{"_index":332,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.initializecontext(context",{"_index":170,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.options",{"_index":594,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["this.prisma.$transaction",{"_index":333,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.authorizationtoken.create",{"_index":334,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.authorizationtoken.deletemany",{"_index":343,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.authorizationtoken.update",{"_index":358,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.securitysmscode.create",{"_index":512,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.prisma.securitysmscode.findfirst",{"_index":517,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.prisma.securitysmscode.update",{"_index":524,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.prisma.setting.findunique",{"_index":316,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["this.prisma.user.create",{"_index":261,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["this.prisma.user.findunique",{"_index":250,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["this.prisma.userprofile.create",{"_index":792,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["this.prisma.userprofile.findunique",{"_index":791,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["this.prismaclient",{"_index":168,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.prismaclient.user.findunique",{"_index":810,"title":{},"body":{"classes/UserResolver.html":{},"classes/ViewerResolver.html":{}}}],["this.prismaclient.user.update",{"_index":890,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["this.prismaclient.userprofile.update",{"_index":783,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["this.profileservice.resolveprofile(context.user",{"_index":782,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["this.reflector.get",{"_index":160,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.resolvecontext(context",{"_index":164,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["this.securitysmsservice.comparecode",{"_index":829,"title":{},"body":{"injectables/UserService.html":{}}}],["this.securitysmsservice.send(phone",{"_index":465,"title":{},"body":{"classes/SecuritySmsResolver.html":{}}}],["this.securitysmsservice.updatecodetoused(value",{"_index":831,"title":{},"body":{"injectables/UserService.html":{}}}],["this.sts.createclient(region",{"_index":596,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["this.temporarycredentialdurationseconds",{"_index":603,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["this.tencentcloudsmsservice.send",{"_index":513,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["this.userprofileservice.resolveprofile(user",{"_index":736,"title":{},"body":{"classes/UserInterfaceResolver.html":{}}}],["this.userservice.comparesecurity",{"_index":348,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/ViewerResolver.html":{}}}],["throw",{"_index":176,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/SecuritySmsResolver.html":{},"classes/ViewerResolver.html":{}}}],["time",{"_index":682,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["tmpsecretid",{"_index":671,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["tmpsecretkey",{"_index":672,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["todate",{"_index":340,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token",{"_index":93,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/ExecutionContext.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["token.args",{"_index":246,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/UpdateViewerArgs.html":{}}}],["token.args.ts",{"_index":367,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"coverage.html":{}}}],["token.args.ts:10",{"_index":374,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["token.args.ts:15",{"_index":369,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["token.args.ts:20",{"_index":368,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{}}}],["token.entity",{"_index":248,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.entity.ts",{"_index":183,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"coverage.html":{}}}],["token.entity.ts:23",{"_index":204,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.entity.ts:31",{"_index":201,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.entity.ts:39",{"_index":198,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.entity.ts:47",{"_index":193,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.entity.ts:55",{"_index":195,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{}}}],["token.expiredat",{"_index":329,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.length",{"_index":408,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["token.module",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["token.module.ts",{"_index":276,"title":{},"body":{"modules/AuthorizationTokenModule.html":{}}}],["token.pop",{"_index":411,"title":{},"body":{"classes/ExecutionContext.html":{}}}],["token.refreshexpiredat",{"_index":330,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.resolver",{"_index":279,"title":{},"body":{"modules/AuthorizationTokenModule.html":{}}}],["token.resolver.ts",{"_index":212,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"coverage.html":{}}}],["token.resolver.ts:103",{"_index":228,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.resolver.ts:26",{"_index":216,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.resolver.ts:33",{"_index":230,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.resolver.ts:54",{"_index":220,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.resolver.ts:59",{"_index":224,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token.service",{"_index":150,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{}}}],["token.service.ts",{"_index":281,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"coverage.html":{}}}],["token.service.ts:107",{"_index":290,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:131",{"_index":302,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:22",{"_index":288,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:31",{"_index":296,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:61",{"_index":300,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.service.ts:78",{"_index":292,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["token.userid",{"_index":251,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["token/authorization",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"modules/AuthorizationTokenModule.html":{},"injectables/AuthorizationTokenService.html":{},"coverage.html":{}}}],["token/constants",{"_index":87,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{}}}],["token/constants.ts",{"_index":903,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["token/dto/create",{"_index":366,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/UpdateViewerArgs.html":{},"coverage.html":{}}}],["token/entities/authorization",{"_index":182,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"coverage.html":{}}}],["token/enums",{"_index":88,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/SecuritySmsResolver.html":{}}}],["token/enums.ts",{"_index":973,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["token/types.ts",{"_index":362,"title":{},"body":{"interfaces/AuthorizationTokenValidityPeriod.html":{},"coverage.html":{}}}],["tort",{"_index":1098,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserProfileEntity.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":79,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/SecuritySmsResolver.html":{},"injectables/SecuritySmsService.html":{},"classes/TencentCloudCosCredentials.html":{},"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"injectables/TencentCloudSmsService.html":{},"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{},"injectables/TencentCloudStsService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":335,"title":{},"body":{"injectables/AuthorizationTokenService.html":{}}}],["types",{"_index":314,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"miscellaneous/variables.html":{}}}],["uid",{"_index":598,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["unauthorized",{"_index":151,"title":{},"body":{"guards/AuthorizationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":219,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/SecuritySmsResolver.html":{}}}],["union",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unique",{"_index":372,"title":{},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/UserResolver.html":{},"classes/ViewerResolver.html":{},"miscellaneous/variables.html":{}}}],["unique.input.ts",{"_index":836,"title":{},"body":{"classes/UserWhereUniqueInput.html":{},"coverage.html":{}}}],["unique.input.ts:10",{"_index":838,"title":{},"body":{"classes/UserWhereUniqueInput.html":{}}}],["unique.input.ts:16",{"_index":839,"title":{},"body":{"classes/UserWhereUniqueInput.html":{}}}],["unique.input.ts:22",{"_index":837,"title":{},"body":{"classes/UserWhereUniqueInput.html":{}}}],["unique.input.ts:28",{"_index":840,"title":{},"body":{"classes/UserWhereUniqueInput.html":{}}}],["unit",{"_index":324,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{}}}],["unittype",{"_index":364,"title":{},"body":{"interfaces/AuthorizationTokenValidityPeriod.html":{}}}],["unix",{"_index":681,"title":{},"body":{"classes/TencentCloudStsCredentials.html":{},"classes/TencentCloudStsFederationToken.html":{}}}],["unknown",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update",{"_index":355,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerResolver.html":{}}}],["update.input",{"_index":702,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"classes/UserProfileResolver.html":{}}}],["update.input.ts",{"_index":794,"title":{},"body":{"classes/UserProfileUpdateInput.html":{},"classes/UserUpdateInput.html":{},"coverage.html":{}}}],["update.input.ts:17",{"_index":833,"title":{},"body":{"classes/UserUpdateInput.html":{}}}],["updatecodetoused",{"_index":473,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["updatecodetoused(security",{"_index":487,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["updated",{"_index":759,"title":{},"body":{"classes/UserProfileEntity.html":{}}}],["updatedat",{"_index":753,"title":{},"body":{"classes/UserProfileEntity.html":{},"classes/UserProfileUpdateInput.html":{}}}],["updateviewer",{"_index":851,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["updateviewer(context",{"_index":858,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["updateviewerargs",{"_index":694,"title":{"classes/UpdateViewerArgs.html":{}},"body":{"classes/UpdateViewerArgs.html":{},"classes/ViewerResolver.html":{},"coverage.html":{}}}],["updateviewerprofile",{"_index":772,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["updateviewerprofile(context",{"_index":776,"title":{},"body":{"classes/UserProfileResolver.html":{}}}],["url",{"_index":426,"title":{},"body":{"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":1036,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":883,"title":{},"body":{"classes/ViewerResolver.html":{},"license.html":{}}}],["usedat",{"_index":526,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["usefactory(prisma",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":84,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["useguards(authorizationguard",{"_index":105,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{}}}],["user",{"_index":163,"title":{},"body":{"guards/AuthorizationGuard.html":{},"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"classes/UpdateViewerArgs.html":{},"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"classes/UserProfileEntity.html":{},"injectables/UserProfileService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"classes/UserUpdateInput.html":{},"classes/UserWhereUniqueInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["user(token",{"_index":229,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["user(where",{"_index":803,"title":{},"body":{"classes/UserResolver.html":{}}}],["user.'})@authorizationwith",{"_index":861,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["user.id",{"_index":336,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"injectables/UserProfileService.html":{},"classes/ViewerResolver.html":{}}}],["user.interface",{"_index":713,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["user.password",{"_index":824,"title":{},"body":{"injectables/UserService.html":{}}}],["user.phone",{"_index":830,"title":{},"body":{"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["user.service",{"_index":746,"title":{},"body":{"modules/UserModule.html":{},"classes/ViewerResolver.html":{}}}],["user/user.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["user?.password",{"_index":822,"title":{},"body":{"injectables/UserService.html":{}}}],["user_email_field_existed",{"_index":863,"title":{},"body":{"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_login_field_existed",{"_index":864,"title":{},"body":{"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_not_found",{"_index":237,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_not_set_phone",{"_index":461,"title":{},"body":{"classes/SecuritySmsResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_phone_field_existed",{"_index":865,"title":{},"body":{"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userentity",{"_index":703,"title":{"classes/UserEntity.html":{}},"body":{"classes/UserEntity.html":{},"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":188,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"injectables/AuthorizationTokenService.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"classes/UserProfileUpdateInput.html":{}}}],["userinterface",{"_index":705,"title":{"classes/UserInterface.html":{}},"body":{"classes/UserEntity.html":{},"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/ViewerEntity.html":{},"coverage.html":{}}}],["userinterface:27",{"_index":709,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["userinterface:36",{"_index":710,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["userinterface:44",{"_index":708,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["userinterface:52",{"_index":712,"title":{},"body":{"classes/UserEntity.html":{},"classes/ViewerEntity.html":{}}}],["userinterfaceresolver",{"_index":725,"title":{"classes/UserInterfaceResolver.html":{}},"body":{"classes/UserInterfaceResolver.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":16,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userprofile",{"_index":711,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserInterface.html":{},"injectables/UserProfileService.html":{},"classes/ViewerEntity.html":{}}}],["userprofileentity",{"_index":721,"title":{"classes/UserProfileEntity.html":{}},"body":{"classes/UserInterface.html":{},"classes/UserInterfaceResolver.html":{},"classes/UserProfileEntity.html":{},"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"coverage.html":{}}}],["userprofilemodule",{"_index":741,"title":{"modules/UserProfileModule.html":{}},"body":{"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["userprofileresolver",{"_index":768,"title":{"classes/UserProfileResolver.html":{}},"body":{"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"coverage.html":{}}}],["userprofileservice",{"_index":729,"title":{"injectables/UserProfileService.html":{}},"body":{"classes/UserInterfaceResolver.html":{},"modules/UserProfileModule.html":{},"classes/UserProfileResolver.html":{},"injectables/UserProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["userprofileupdateinput",{"_index":777,"title":{"classes/UserProfileUpdateInput.html":{}},"body":{"classes/UserProfileResolver.html":{},"classes/UserProfileUpdateInput.html":{},"coverage.html":{}}}],["userresolver",{"_index":799,"title":{"classes/UserResolver.html":{}},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["users",{"_index":884,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["usersecuritycomparetype",{"_index":243,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/AuthorizationTokenService.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"miscellaneous/enumerations.html":{}}}],["usersecuritycomparetype.password",{"_index":827,"title":{},"body":{"injectables/UserService.html":{}}}],["usersecuritycomparetype.sms_code",{"_index":259,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{}}}],["userservice",{"_index":287,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthorizationTokenService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"overview.html":{}}}],["userunion",{"_index":808,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["userupdateinput",{"_index":698,"title":{"classes/UserUpdateInput.html":{}},"body":{"classes/UpdateViewerArgs.html":{},"classes/UserUpdateInput.html":{},"coverage.html":{}}}],["userwhereuniqueinput",{"_index":370,"title":{"classes/UserWhereUniqueInput.html":{}},"body":{"classes/CreateAuthorizationTokenArgs.html":{},"classes/UserResolver.html":{},"classes/UserWhereUniqueInput.html":{},"coverage.html":{}}}],["validate",{"_index":90,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"guards/AuthorizationGuard.html":{},"injectables/AuthorizationTokenService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["validity",{"_index":297,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":320,"title":{},"body":{"injectables/AuthorizationTokenService.html":{},"interfaces/AuthorizationTokenValidityPeriod.html":{},"classes/CreateAuthorizationTokenArgs.html":{},"classes/ExecutionContext.html":{},"injectables/TencentCloudSmsService.html":{},"injectables/TencentCloudStsService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1118,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veriables",{"_index":483,"title":{},"body":{"injectables/SecuritySmsService.html":{}}}],["verification",{"_index":888,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["verified",{"_index":172,"title":{},"body":{"guards/AuthorizationGuard.html":{}}}],["version",{"_index":606,"title":{},"body":{"injectables/TencentCloudCosService.html":{}}}],["viewer",{"_index":200,"title":{},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/UserProfileResolver.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{}}}],["viewer(@context",{"_index":874,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["viewer(context",{"_index":860,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["viewer.args",{"_index":867,"title":{},"body":{"classes/ViewerResolver.html":{}}}],["viewer.args.ts",{"_index":696,"title":{},"body":{"classes/UpdateViewerArgs.html":{},"coverage.html":{}}}],["viewer.args.ts:14",{"_index":699,"title":{},"body":{"classes/UpdateViewerArgs.html":{}}}],["viewer.args.ts:20",{"_index":700,"title":{},"body":{"classes/UpdateViewerArgs.html":{}}}],["viewer.resolver",{"_index":748,"title":{},"body":{"modules/UserModule.html":{}}}],["viewerentity",{"_index":207,"title":{"classes/ViewerEntity.html":{}},"body":{"classes/AuthorizationTokenEntity.html":{},"classes/AuthorizationTokenEntityResolver.html":{},"classes/UserUpdateInput.html":{},"classes/ViewerEntity.html":{},"classes/ViewerResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["viewerresolver",{"_index":747,"title":{"classes/ViewerResolver.html":{}},"body":{"modules/UserModule.html":{},"classes/ViewerResolver.html":{},"coverage.html":{}}}],["warranties",{"_index":1067,"title":{},"body":{"license.html":{}}}],["wav",{"_index":567,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"miscellaneous/enumerations.html":{}}}],["way",{"_index":1102,"title":{},"body":{"license.html":{}}}],["where.phone",{"_index":260,"title":{},"body":{"classes/AuthorizationTokenEntityResolver.html":{}}}],["whether",{"_index":882,"title":{},"body":{"classes/ViewerResolver.html":{},"license.html":{}}}],["without",{"_index":108,"title":{},"body":{"interfaces/AuthDecoratorOptions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["write",{"_index":553,"title":{},"body":{"classes/TencentCloudCosResolver.html":{},"injectables/TencentCloudCosService.html":{},"index.html":{}}}],["written",{"_index":1022,"title":{},"body":{"index.html":{},"license.html":{}}}],["yes",{"_index":384,"title":{},"body":{"classes/ExecutionContext.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthorizationTokenModule.html":{},"modules/SecurityModule.html":{},"modules/TencentCloudModule.html":{},"modules/UserModule.html":{},"modules/UserProfileModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthorizationTokenModule\n\nAuthorizationTokenModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorizationTokenModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSecurityModule\n\nSecurityModule\n\nAppModule -->\n\nSecurityModule->AppModule\n\n\n\n\n\nTencentCloudModule\n\nTencentCloudModule\n\nAppModule -->\n\nTencentCloudModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthorizationTokenModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SecurityModule\n                        \n                        \n                            TencentCloudModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ExecutionContext } from './execution-context';\nimport { PrismaModule } from './prisma';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { SecurityModule } from './security/security.module';\nimport { getConfig } from './app.config';\nimport { AuthorizationTokenModule } from './authorization-token/authorization-token.module';\nimport { UserModule } from './user/user.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AuthorizationGuard } from './authorization.guard';\nimport { PrismaClient } from '@prisma/client';\nimport { TencentCloudModule } from './tencent-cloud';\n\n@Global()\n@Module({\n  imports: [\n    GraphQLModule.forRootAsync({\n      imports: [PrismaModule],\n      inject: [PrismaClient],\n      useFactory(prisma: PrismaClient) {\n        const options = getConfig();\n        return {\n          autoSchemaFile: true,\n          debug: !options.isProduction,\n          playground: !options.isProduction,\n          path: options.endpoint,\n          context({ req }) {\n            return ExecutionContext.create(prisma, req);\n          },\n        };\n      },\n    }),\n    PrismaModule,\n    AuthorizationTokenModule,\n    UserModule,\n    SecurityModule,\n    TencentCloudModule,\n  ],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: AuthorizationGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthDecoratorOptions.html":{"url":"interfaces/AuthDecoratorOptions.html","title":"interface - AuthDecoratorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthDecoratorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization.decorator.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        hasAuthorization\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasAuthorization\n                                    \n                                \n                                \n                                    \n                                        hasAuthorization:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         HasTokenExpiredType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HasTokenExpiredType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { applyDecorators, SetMetadata, UseGuards } from '@nestjs/common';\nimport {\n  AUTH_METADATA_HAS_AUTHORIZATION,\n  AUTH_METADATA_HAS_AUTHORIZATION_TYPE,\n} from './authorization-token/constants';\nimport { HasTokenExpiredType } from './authorization-token/enums';\nimport { AuthorizationGuard } from './authorization.guard';\n\nexport interface AuthDecoratorOptions {\n  hasAuthorization?: boolean;\n  type?: HasTokenExpiredType;\n}\n\n/**\n * Need validate HTTP endpoint `Authorization` token decorator.\n * @param param validate HTTP endpoit `Authorization` token options.\n * @param param.hasAuthorization Has need validate\n * @param param.type validate token type.\n */\nexport function Authorization(options?: AuthDecoratorOptions) {\n  return applyDecorators(\n    SetMetadata(AUTH_METADATA_HAS_AUTHORIZATION, options?.hasAuthorization),\n    SetMetadata(\n      AUTH_METADATA_HAS_AUTHORIZATION_TYPE,\n      options?.type || HasTokenExpiredType.AUTH,\n    ),\n    UseGuards(AuthorizationGuard),\n  );\n}\n\n/**\n * Http auth validate token.\n */\nexport const AuthorizationWith = () =>\n  Authorization({\n    hasAuthorization: true,\n    type: HasTokenExpiredType.AUTH,\n  });\n\n/**\n * Http auth, without validate token.\n */\nexport const AuthorizationWithout = () =>\n  Authorization({\n    hasAuthorization: false,\n    type: HasTokenExpiredType.AUTH,\n  });\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthorizationGuard.html":{"url":"guards/AuthorizationGuard.html","title":"guard - AuthorizationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthorizationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/authorization.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                canActivelyTokenHandler\n                            \n                            \n                                getHasAuthorization\n                            \n                            \n                                getHasAuthorizationType\n                            \n                            \n                                    Async\n                                initializeContext\n                            \n                            \n                                resolveContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, authorizationTokenService: AuthorizationTokenService, prismaClient: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/authorization.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationTokenService\n                                                  \n                                                        \n                                                                        AuthorizationTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivelyTokenHandler\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivelyTokenHandler(context: ExecutionContext, type: HasTokenExpiredType)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                HasTokenExpiredType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHasAuthorization\n                        \n                        \n                    \n                \n            \n            \n                \ngetHasAuthorization(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHasAuthorizationType\n                        \n                        \n                    \n                \n            \n            \n                \ngetHasAuthorizationType(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            initializeContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeContext(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveContext\n                        \n                        \n                    \n                \n            \n            \n                \nresolveContext(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization.guard.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IContext\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { GqlContextType, GqlExecutionContext } from '@nestjs/graphql';\nimport { PrismaClient } from '@prisma/client';\nimport { Request } from 'express';\nimport { AuthorizationTokenService } from './authorization-token/authorization-token.service';\nimport {\n  AUTH_METADATA_HAS_AUTHORIZATION,\n  AUTH_METADATA_HAS_AUTHORIZATION_TYPE,\n} from './authorization-token/constants';\nimport { HasTokenExpiredType } from './authorization-token/enums';\nimport { UNAUTHORIZED } from './constants';\nimport { ExecutionContext as IContext } from './execution-context';\n\n@Injectable()\nexport class AuthorizationGuard implements CanActivate {\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly authorizationTokenService: AuthorizationTokenService,\n    private readonly prismaClient: PrismaClient,\n  ) {}\n\n  resolveContext(context: ExecutionContext): IContext {\n    if (context.getType() === 'graphql') {\n      return GqlExecutionContext.create(context).getContext();\n    }\n\n    return context.switchToHttp().getRequest().context;\n  }\n\n  getHasAuthorization(context: ExecutionContext) {\n    return this.reflector.get(\n      AUTH_METADATA_HAS_AUTHORIZATION,\n      context.getHandler(),\n    );\n  }\n\n  getHasAuthorizationType(context: ExecutionContext) {\n    return this.reflector.get(\n      AUTH_METADATA_HAS_AUTHORIZATION_TYPE,\n      context.getHandler(),\n    );\n  }\n\n  canActivelyTokenHandler(\n    context: ExecutionContext,\n    type: HasTokenExpiredType,\n  ): boolean {\n    const { authorizationToken, user } = this.resolveContext(context);\n    const has = !this.authorizationTokenService.hasTokenExpired(\n      authorizationToken,\n      type,\n    );\n\n    return user && has;\n  }\n\n  async initializeContext(context: ExecutionContext) {\n    if (context.getType() === 'http') {\n      return await IContext.create(\n        this.prismaClient,\n        context.switchToHttp().getRequest(),\n      );\n    }\n  }\n\n  async canActivate(context: ExecutionContext): Promise {\n    await this.initializeContext(context);\n\n    // If Don't validate or verified\n    if (!this.getHasAuthorization(context)) return true;\n\n    // get `Authorization` token validate type\n    const type = this.getHasAuthorizationType(context);\n\n    if (\n      !this.canActivelyTokenHandler(context, type || HasTokenExpiredType.AUTH)\n    ) {\n      throw new Error(UNAUTHORIZED);\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthorizationTokenEntity.html":{"url":"classes/AuthorizationTokenEntity.html","title":"class - AuthorizationTokenEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthorizationTokenEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/entities/authorization-token.entity.ts\n        \n\n            \n                Description\n            \n            \n                HTTP endpoint authorization entity.\n\n            \n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expiredAt\n                            \n                            \n                                refreshExpiredAt\n                            \n                            \n                                token\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiredAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Token expired date'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:47\n                            \n                        \n\n                \n                    \n                        Token expired date.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshExpiredAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Token on refresh expired date'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:55\n                            \n                        \n\n                \n                    \n                        Token on refresh expired date.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User API endpoit authorization token.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:39\n                            \n                        \n\n                \n                    \n                        User API endpoit authorization token.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Logged Viewer entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:31\n                            \n                        \n\n                \n                    \n                        Logged User\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Login user ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/entities/authorization-token.entity.ts:23\n                            \n                        \n\n                \n                    \n                        Logged user id.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ID, ObjectType } from '@nestjs/graphql';\nimport { Prisma, User } from '@prisma/client';\nimport { ViewerEntity } from 'src/user/entities/viewer.entity';\n/**\n * HTTP endpoint authorization entity.\n */\n@ObjectType({\n  description: 'HTTP endpoint authorization entity.',\n})\nexport class AuthorizationTokenEntity\n  implements\n    Prisma.AuthorizationTokenGetPayload {\n  /**\n   * Logged user id.\n   */\n  @Field((type) => ID, {\n    description: 'Login user ID',\n  })\n  userId: string;\n\n  /**\n   * Logged User\n   */\n  @Field((type) => ViewerEntity, {\n    description: 'Logged Viewer entity',\n  })\n  user: User;\n\n  /**\n   * User API endpoit authorization token.\n   */\n  @Field((type) => String, {\n    description: 'User API endpoit authorization token.',\n  })\n  token: string;\n\n  /**\n   * Token expired date.\n   */\n  @Field((type) => Date, {\n    description: 'Token expired date',\n  })\n  expiredAt: Date;\n\n  /**\n   * Token on refresh expired date.\n   */\n  @Field((type) => Date, {\n    description: 'Token on refresh expired date',\n  })\n  refreshExpiredAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthorizationTokenEntityResolver.html":{"url":"classes/AuthorizationTokenEntityResolver.html","title":"class - AuthorizationTokenEntityResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthorizationTokenEntityResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/authorization-token.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorizationToken\n                            \n                            \n                                    Async\n                                createAuthorizationToken\n                            \n                            \n                                refreshAuthorizationToken\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authorizationTokenService: AuthorizationTokenService, prisma: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/authorization-token/authorization-token.resolver.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorizationTokenService\n                                                  \n                                                        \n                                                                        AuthorizationTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \nauthorizationToken(context: ExecutionContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)@Authorization({hasAuthorization: true, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/authorization-token/authorization-token.resolver.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAuthorizationToken(args: CreateAuthorizationTokenArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/authorization-token/authorization-token.resolver.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                CreateAuthorizationTokenArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshAuthorizationToken(context: ExecutionContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Refresh HTTP endpoint authorization token entity.'})@Authorization({hasAuthorization: true, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/authorization-token/authorization-token.resolver.ts:103\n                \n            \n\n\n            \n                \n                    Refresh HTTP endpoint authorization token entity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            user\n                        \n                        \n                    \n                \n            \n            \n                \nuser(token: Prisma.AuthorizationTokenGetPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Field(undefined)\n                \n            \n\n            \n                \n                    Defined in src/authorization-token/authorization-token.resolver.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                Prisma.AuthorizationTokenGetPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Args,\n  Field,\n  Mutation,\n  Parent,\n  Query,\n  Resolver,\n} from '@nestjs/graphql';\nimport { Prisma, PrismaClient } from '@prisma/client';\nimport { Authorization } from 'src/authorization.decorator';\nimport {\n  AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE,\n  USER_NOT_FOUND,\n} from 'src/constants';\nimport { Context } from 'src/context.decorator';\nimport { ExecutionContext } from 'src/execution-context';\nimport { IDHelper } from 'src/helper';\nimport { ViewerEntity } from 'src/user/entities/viewer.entity';\nimport { UserSecurityCompareType } from 'src/user/enums';\nimport { AuthorizationTokenService } from './authorization-token.service';\nimport { CreateAuthorizationTokenArgs } from './dto/create-authorization-token.args';\nimport { AuthorizationTokenEntity } from './entities/authorization-token.entity';\nimport { HasTokenExpiredType } from './enums';\n\n@Resolver(() => AuthorizationTokenEntity)\nexport class AuthorizationTokenEntityResolver {\n  constructor(\n    private readonly authorizationTokenService: AuthorizationTokenService,\n    private readonly prisma: PrismaClient,\n  ) {}\n\n  @Field(() => ViewerEntity)\n  user(\n    @Parent()\n    token: Prisma.AuthorizationTokenGetPayload,\n  ) {\n    const { user } = token;\n    if (user) {\n      return user;\n    }\n\n    return this.prisma.user.findUnique({\n      where: { id: token.userId },\n    });\n  }\n\n  @Query(() => AuthorizationTokenEntity)\n  @Authorization({\n    hasAuthorization: true,\n    type: HasTokenExpiredType.AUTH,\n  })\n  authorizationToken(@Context() context: ExecutionContext) {\n    return context.authorizationToken;\n  }\n\n  @Mutation(() => AuthorizationTokenEntity)\n  async createAuthorizationToken(\n    @Args({\n      type: () => CreateAuthorizationTokenArgs,\n    })\n    args: CreateAuthorizationTokenArgs,\n  ) {\n    const { type, user: where, security } = args;\n    if (Object.keys(where).length > 1) {\n      throw new Error(AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE);\n    }\n\n    let user = await this.prisma.user.findUnique({\n      where,\n      rejectOnNotFound: false,\n    });\n    if (type === UserSecurityCompareType.SMS_CODE && !user && where.phone) {\n      user = await this.prisma.user.create({\n        data: {\n          id: IDHelper.id(32),\n          phone: where.phone,\n        },\n      });\n    } else if (!user) {\n      throw new Error(USER_NOT_FOUND);\n    }\n\n    return this.authorizationTokenService.createTokenWithSecurity(\n      user,\n      type,\n      security,\n    );\n  }\n\n  /**\n   * Refresh HTTP endpoint authorization token entity.\n   * @param client token query Prisma client.\n   */\n  @Mutation((returns) => AuthorizationTokenEntity, {\n    description: 'Refresh HTTP endpoint authorization token entity.',\n  })\n  @Authorization({\n    hasAuthorization: true,\n    type: HasTokenExpiredType.REFRESH,\n  })\n  refreshAuthorizationToken(@Context() context: ExecutionContext) {\n    return this.authorizationTokenService.refreshAuthorizationToken(\n      context.authorizationToken,\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationTokenModule.html":{"url":"modules/AuthorizationTokenModule.html","title":"module - AuthorizationTokenModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationTokenModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorizationTokenModule\n\n\n\ncluster_AuthorizationTokenModule_imports\n\n\n\ncluster_AuthorizationTokenModule_exports\n\n\n\ncluster_AuthorizationTokenModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthorizationTokenModule\n\nAuthorizationTokenModule\n\nAuthorizationTokenModule -->\n\nPrismaModule->AuthorizationTokenModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthorizationTokenModule -->\n\nUserModule->AuthorizationTokenModule\n\n\n\n\n\nAuthorizationTokenService \n\nAuthorizationTokenService \n\nAuthorizationTokenService  -->\n\nAuthorizationTokenModule->AuthorizationTokenService \n\n\n\n\n\nAuthorizationTokenService\n\nAuthorizationTokenService\n\nAuthorizationTokenModule -->\n\nAuthorizationTokenService->AuthorizationTokenModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/authorization-token/authorization-token.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationTokenService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationTokenService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { UserModule } from 'src/user/user.module';\nimport { AuthorizationTokenEntityResolver } from './authorization-token.resolver';\nimport { AuthorizationTokenService } from './authorization-token.service';\n\n@Global()\n@Module({\n  imports: [PrismaModule, UserModule],\n  providers: [AuthorizationTokenService, AuthorizationTokenEntityResolver],\n  exports: [AuthorizationTokenService],\n})\nexport class AuthorizationTokenModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationTokenService.html":{"url":"injectables/AuthorizationTokenService.html","title":"injectable - AuthorizationTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/authorization-token.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTokenWithSecurity\n                            \n                            \n                                    Async\n                                createUserAuthorizationToken\n                            \n                            \n                                    Async\n                                getTokenExpiredIn\n                            \n                            \n                                hasTokenExpired\n                            \n                            \n                                    Async\n                                refreshAuthorizationToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaClient, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/authorization-token/authorization-token.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTokenWithSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTokenWithSecurity(user: User, type: UserSecurityCompareType, security: string)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                UserSecurityCompareType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    security\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUserAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserAuthorizationToken(user: User | string)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:78\n                \n            \n\n\n            \n                \n                    Create authorization token object for user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Create authoprization token object user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTokenExpiredIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokenExpiredIn()\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:31\n                \n            \n\n\n            \n                \n                    Get token expired in validity period.\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasTokenExpired\n                        \n                        \n                    \n                \n            \n            \n                \nhasTokenExpired(token: AuthorizationToken, type: HasTokenExpiredType)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:61\n                \n            \n\n\n            \n                \n                    Has authorization token expired.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                AuthorizationToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    type\n                                    \n                                                HasTokenExpiredType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Validate type.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            refreshAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshAuthorizationToken(authorizationToken: AuthorizationToken)\n                \n            \n\n\n            \n                \n                    Defined in src/authorization-token/authorization-token.service.ts:131\n                \n            \n\n\n            \n                \n                    Refresh authorization token object to database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    authorizationToken\n                                    \n                                                AuthorizationToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Await refresh authorization token object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthorizationToken, PrismaClient, User } from '@prisma/client';\nimport * as dayjs from 'dayjs';\nimport {\n  AUTHORIZATION_TOKEN_NOT_FOUND,\n  SECURITY_COMPARE_FAILED,\n} from 'src/constants';\nimport { IDHelper } from 'src/helper';\nimport { UserService } from 'src/user/user.service';\nimport { UserSecurityCompareType } from 'src/user/enums';\nimport {\n  AUTH_TOKEN_DEFAULT_EXPORED_IN,\n  AUTH_TOKEN_DEFAULT_EXPORED_UNIT,\n  AUTH_TOKEN_DEFAULT_REFRESH_EXPORED_IN,\n  AUTH_TOKEN_DEFAULT_REFRESH_EXPORED_UNIT,\n  AUTH_TOKEN_VVALIDITY_PERIOD_KEY,\n} from './constants';\nimport { HasTokenExpiredType } from './enums';\nimport { AuthorizationTokenValidityPeriod } from './types';\n\n@Injectable()\nexport class AuthorizationTokenService {\n  constructor(\n    private readonly prisma: PrismaClient,\n    private readonly userService: UserService,\n  ) {}\n\n  /**\n   * Get token expired in validity period.\n   */\n  async getTokenExpiredIn(): Promise {\n    const setting = await this.prisma.setting.findUnique({\n      where: {\n        namespace_name: {\n          namespace: 'system',\n          name: AUTH_TOKEN_VVALIDITY_PERIOD_KEY,\n        },\n      },\n      rejectOnNotFound: false,\n    });\n    const { value = {} } = setting || {};\n    const { expiredIn = {}, refreshExpiredIn = {} } = value as any;\n\n    return {\n      expiredIn: {\n        value: expiredIn.value || AUTH_TOKEN_DEFAULT_EXPORED_IN,\n        unit: expiredIn.unit || AUTH_TOKEN_DEFAULT_EXPORED_UNIT,\n      },\n      refreshExpiredIn: {\n        value: refreshExpiredIn.value || AUTH_TOKEN_DEFAULT_REFRESH_EXPORED_IN,\n        unit: refreshExpiredIn.unit || AUTH_TOKEN_DEFAULT_REFRESH_EXPORED_UNIT,\n      },\n    };\n  }\n\n  /**\n   * Has authorization token expired.\n   * @param client `AuthotizationToken` query Prisma client.\n   * @param type Validate type.\n   */\n  hasTokenExpired(\n    token: AuthorizationToken,\n    type: HasTokenExpiredType,\n  ): boolean {\n    if (!token) return true;\n    const expiredAt =\n      type === HasTokenExpiredType.AUTH\n        ? token.expiredAt\n        : token.refreshExpiredAt;\n\n    return !expiredAt || expiredAt.getTime()  {\n    const setting = await this.getTokenExpiredIn();\n    const [token] = await this.prisma.$transaction([\n      this.prisma.authorizationToken.create({\n        data: {\n          userId: typeof user === 'string' ? user : user.id,\n          token: IDHelper.id(128),\n          expiredAt: dayjs()\n            .add(setting.expiredIn.value, setting.expiredIn.unit)\n            .toDate(),\n          refreshExpiredAt: dayjs()\n            .add(setting.refreshExpiredIn.value, setting.refreshExpiredIn.unit)\n            .toDate(),\n        },\n      }),\n      this.prisma.authorizationToken.deleteMany({\n        where: {\n          refreshExpiredAt: {\n            lte: dayjs().add(10, 'minutes').toDate(),\n          },\n        },\n      }),\n    ]);\n\n    return token;\n  }\n\n  async createTokenWithSecurity(\n    user: User,\n    type: UserSecurityCompareType,\n    security: string,\n  ) {\n    const compared = await this.userService.compareSecurity(\n      user,\n      type,\n      security,\n    );\n    if (compared) {\n      if (compared instanceof Function) {\n        compared();\n      }\n      return this.createUserAuthorizationToken(user);\n    }\n\n    throw new Error(SECURITY_COMPARE_FAILED);\n  }\n\n  /**\n   * Refresh authorization token object to database.\n   * @param authorizationToken Await refresh authorization token object.\n   */\n  async refreshAuthorizationToken(\n    authorizationToken: AuthorizationToken,\n  ): Promise {\n    const setting = await this.getTokenExpiredIn();\n    // If authorization token not found, throw `not found` error.\n    if (!authorizationToken) {\n      throw new Error(AUTHORIZATION_TOKEN_NOT_FOUND);\n\n      // If token is expired, update to new token.\n    } else if (authorizationToken.expiredAt.getTime()  fiveMinutesDate.getTime()) {\n      await this.prisma.authorizationToken.update({\n        where: { token: authorizationToken.token },\n        data: {\n          expiredAt: fiveMinutesDate,\n          refreshExpiredAt: new Date(),\n        },\n      });\n    }\n\n    return this.createUserAuthorizationToken(authorizationToken.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthorizationTokenValidityPeriod.html":{"url":"interfaces/AuthorizationTokenValidityPeriod.html","title":"interface - AuthorizationTokenValidityPeriod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthorizationTokenValidityPeriod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/types.ts\n        \n\n            \n                Description\n            \n            \n                认证Token有效期\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expiredIn\n                                \n                                \n                                        refreshExpiredIn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expiredIn\n                                    \n                                \n                                \n                                    \n                                        expiredIn:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    token 生命有效期\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiredIn\n                                    \n                                \n                                \n                                    \n                                        refreshExpiredIn:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Token 用作刷新生命周期\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { UnitType } from 'dayjs';\n\n/**\n * 认证Token有效期\n */\nexport interface AuthorizationTokenValidityPeriod {\n  /**\n   * token 生命有效期\n   */\n  expiredIn: {\n    value: number;\n    unit: UnitType;\n  };\n\n  /**\n   * Token 用作刷新生命周期\n   */\n  refreshExpiredIn: {\n    value: number;\n    unit: UnitType;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthorizationTokenArgs.html":{"url":"classes/CreateAuthorizationTokenArgs.html","title":"class - CreateAuthorizationTokenArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthorizationTokenArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authorization-token/dto/create-authorization-token.args.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                security\n                            \n                            \n                                type\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            security\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Create AuthorizationToken security value'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/dto/create-authorization-token.args.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserSecurityCompareType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Create AuthorizationToken security type'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/dto/create-authorization-token.args.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserWhereUniqueInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User find where unique input'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/authorization-token/dto/create-authorization-token.args.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field } from '@nestjs/graphql';\nimport { UserWhereUniqueInput } from 'src/user/dto';\nimport { UserSecurityCompareType } from 'src/user/enums';\n\n@ArgsType()\nexport class CreateAuthorizationTokenArgs {\n  @Field(() => UserWhereUniqueInput, {\n    description: 'User find where unique input',\n  })\n  user: UserWhereUniqueInput;\n\n  @Field(() => UserSecurityCompareType, {\n    description: 'Create AuthorizationToken security type',\n  })\n  type: UserSecurityCompareType;\n\n  @Field(() => String, {\n    description: 'Create AuthorizationToken security value',\n  })\n  security: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExecutionContext.html":{"url":"classes/ExecutionContext.html","title":"class - ExecutionContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExecutionContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/execution-context.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                authorizationToken\n                            \n                            \n                                    Public\n                                request\n                            \n                            \n                                    Public\n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                create\n                            \n                            \n                                    Private\n                                    Static\n                                getAuthorizationToken\n                            \n                            \n                                    Private\n                                    Static\n                                getHttpAuthorization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor(request: Request, authorizationToken?: AuthorizationToken, user?: User)\n                    \n                \n                        \n                            \n                                Defined in src/execution-context.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationToken\n                                                  \n                                                        \n                                                                        AuthorizationToken\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    User\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            authorizationToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthorizationToken\n\n                        \n                    \n                        \n                            \n                                    Defined in src/execution-context.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Request\n\n                        \n                    \n                        \n                            \n                                    Defined in src/execution-context.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/execution-context.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(prismaClient: PrismaClient, request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/execution-context.ts:15\n                \n            \n\n\n            \n                \n                    Create kernel context.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prismaClient\n                                    \n                                            PrismaClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Express request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getAuthorizationToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthorizationToken(prismaClient: PrismaClient, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/execution-context.ts:61\n                \n            \n\n\n            \n                \n                    Get AuthorizationToken\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prismaClient\n                                    \n                                            PrismaClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token string.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getHttpAuthorization\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHttpAuthorization(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/execution-context.ts:42\n                \n            \n\n\n            \n                \n                    Get HTTP endpoint Authorization header value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Express request.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request } from 'express';\nimport { AuthorizationToken, Prisma, PrismaClient, User } from '@prisma/client';\n\nexport class ExecutionContext {\n  private constructor(\n    public request: Request,\n    public authorizationToken?: AuthorizationToken,\n    public user?: User,\n  ) {}\n\n  /**\n   * Create kernel context.\n   * @param request Express request.\n   */\n  static async create(prismaClient: PrismaClient, request: Request): Promise {\n    const token = this.getHttpAuthorization(request);\n    if (\n      request.context &&\n      request.context.authorizationToken?.token === token\n    ) {\n      return request.context;\n    }\n\n    const authorizationToken = await this.getAuthorizationToken(\n      prismaClient,\n      token,\n    );\n    const context = new ExecutionContext(\n      request,\n      authorizationToken,\n      authorizationToken?.user,\n    );\n    context.request.context = request.context = context;\n\n    return context;\n  }\n\n  /**\n   * Get HTTP endpoint `Authorization` header value.\n   * @param request Express request.\n   */\n  private static getHttpAuthorization(request: Request): string {\n    const key = 'Authorization';\n    if (request.header instanceof Function) {\n      return request.header(key);\n    }\n\n    const headers = request.headers;\n    let token = headers[key.toLowerCase()];\n    if (!token || !token.length) {\n      token = headers[key];\n    }\n\n    return Array.isArray(token) ? token.pop() : token;\n  }\n\n  /**\n   * Get `AuthorizationToken`\n   * @param token Token string.\n   */\n  private static getAuthorizationToken(\n    prismaClient: PrismaClient,\n    token: string,\n  ): Promise> {\n    if (token)\n      return prismaClient.authorizationToken.findUnique({\n        where: { token: token },\n        include: { user: true },\n        rejectOnNotFound: false,\n      });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {\n  ClassProvider,\n  Global,\n  Logger,\n  Module,\n  OnModuleDestroy,\n  OnModuleInit,\n} from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\nimport { PrismaLoggerMiddleware } from './middleware';\n\n/**\n * Prisma class provider\n */\nconst client: ClassProvider = {\n  provide: PrismaClient,\n  useClass: class\n    extends PrismaClient\n    implements OnModuleInit, OnModuleDestroy {\n    private readonly logger = new Logger('Prisma');\n\n    /**\n     * Prisma client constructor\n     */\n    constructor() {\n      super({\n        datasources: {\n          database: { url: process.env.DATABASE_URL },\n        },\n      });\n    }\n\n    /**\n     * NestJS module init hook callback.\n     */\n    async onModuleInit() {\n      // Prisma connect database.\n      await this.$connect();\n\n      // Set Prisma client global logger middleware.\n      this.$use(PrismaLoggerMiddleware(this.logger));\n    }\n\n    /**\n     * NestJS module destory hook callback.\n     */\n    async onModuleDestroy() {\n      // Prisma disconnect database.\n      await this.$disconnect();\n    }\n  },\n};\n\n@Global()\n@Module({\n  providers: [client],\n  exports: [client],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SecurityModule.html":{"url":"modules/SecurityModule.html","title":"module - SecurityModule","body":"\n                   \n\n\n\n\n    Modules\n    SecurityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SecurityModule\n\n\n\ncluster_SecurityModule_imports\n\n\n\ncluster_SecurityModule_exports\n\n\n\ncluster_SecurityModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSecurityModule\n\nSecurityModule\n\nSecurityModule -->\n\nPrismaModule->SecurityModule\n\n\n\n\n\nTencentCloudModule\n\nTencentCloudModule\n\nSecurityModule -->\n\nTencentCloudModule->SecurityModule\n\n\n\n\n\nSecuritySmsService \n\nSecuritySmsService \n\nSecuritySmsService  -->\n\nSecurityModule->SecuritySmsService \n\n\n\n\n\nSecuritySmsService\n\nSecuritySmsService\n\nSecurityModule -->\n\nSecuritySmsService->SecurityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/security/security.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SecuritySmsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            TencentCloudModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SecuritySmsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { TencentCloudModule } from 'src/tencent-cloud';\nimport { SecuritySmsResolver } from './security-sms.resolver';\nimport { SecuritySmsService } from './security-sms.service';\n\n@Module({\n  imports: [TencentCloudModule, PrismaModule],\n  providers: [SecuritySmsService, SecuritySmsResolver],\n  exports: [SecuritySmsService],\n})\nexport class SecurityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecuritySmsResolver.html":{"url":"classes/SecuritySmsResolver.html","title":"class - SecuritySmsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecuritySmsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/security/security-sms.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSecurity\n                            \n                            \n                                    Async\n                                createViewerSecurity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(securitySmsService: SecuritySmsService)\n                    \n                \n                        \n                            \n                                Defined in src/security/security-sms.resolver.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        securitySmsService\n                                                  \n                                                        \n                                                                        SecuritySmsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSecurity(phone: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/security/security-sms.resolver.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createViewerSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createViewerSecurity(context: ExecutionContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@Authorization({hasAuthorization: true, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/security/security-sms.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, GraphQLISODateTime, Mutation, Resolver } from '@nestjs/graphql';\nimport { HasTokenExpiredType } from 'src/authorization-token/enums';\nimport { Authorization } from 'src/authorization.decorator';\nimport { USER_NOT_SET_PHONE } from 'src/constants';\nimport { Context } from 'src/context.decorator';\nimport { ExecutionContext } from 'src/execution-context';\nimport { SecuritySmsService } from './security-sms.service';\n\n@Resolver()\nexport class SecuritySmsResolver {\n  constructor(private readonly securitySmsService: SecuritySmsService) {}\n\n  @Mutation(() => GraphQLISODateTime)\n  async createSecurity(\n    @Args({\n      name: 'phone',\n      description: 'Need send code phone number',\n      type: () => String,\n    })\n    phone: string,\n  ) {\n    const { expiredAt } = await this.securitySmsService.send(phone);\n    return expiredAt;\n  }\n\n  @Mutation(() => GraphQLISODateTime)\n  @Authorization({ hasAuthorization: true, type: HasTokenExpiredType.AUTH })\n  async createViewerSecurity(@Context() context: ExecutionContext) {\n    const { phone } = context.user || {};\n    if (!phone) {\n      throw new Error(USER_NOT_SET_PHONE);\n    }\n\n    return await this.createSecurity(phone);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SecuritySmsService.html":{"url":"injectables/SecuritySmsService.html","title":"injectable - SecuritySmsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SecuritySmsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/security/security-sms.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compareCode\n                            \n                            \n                                getOptions\n                            \n                            \n                                    Async\n                                send\n                            \n                            \n                                    Async\n                                updateCodeToUsed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tencentCloudSmsService: TencentCloudSmsService, prisma: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/security/security-sms.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tencentCloudSmsService\n                                                  \n                                                        \n                                                                        TencentCloudSmsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            compareCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    compareCode(phone: string, code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/security/security-sms.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptions(hasChina: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/security/security-sms.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hasChina\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { expiredIn: any; templateID: any; veriables: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(phone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/security/security-sms.service.ts:37\n                \n            \n\n\n            \n                \n                    Send a SMS code to phone.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Send phone number.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateCodeToUsed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCodeToUsed(security: SecuritySmsCode)\n                \n            \n\n\n            \n                \n                    Defined in src/security/security-sms.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    security\n                                    \n                                            SecuritySmsCode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaClient, SecuritySmsCode } from '@prisma/client';\nimport * as dayjs from 'dayjs';\nimport { IDHelper } from 'src/helper';\nimport { TencentCloudSmsService } from 'src/tencent-cloud/sms';\n\n@Injectable()\nexport class SecuritySmsService {\n  constructor(\n    private readonly tencentCloudSmsService: TencentCloudSmsService,\n    private readonly prisma: PrismaClient,\n  ) {}\n\n  getOptions(hasChina: boolean) {\n    const expiredIn = Number.parseInt(\n      process.env.TENCENT_CLOUD_SMS_EXPIRED_IN || '300',\n    );\n    if (hasChina) {\n      return {\n        expiredIn,\n        templateID: process.env.TENCENT_CLOUD_SMS_CHINA_TEMPLATE_ID,\n        veriables: process.env.TENCENT_CLOUD_SMS_CHINA_VERIABLES,\n      };\n    }\n\n    return {\n      expiredIn,\n      templateID: process.env.TENCENT_CLOUD_SMS_OTHER_TEMPLATE_ID,\n      veriables: process.env.TENCENT_CLOUD_SMS_OTHER_VERIABLES,\n    };\n  }\n\n  /**\n   * Send a SMS code to phone.\n   * @param phone Send phone number.\n   */\n  async send(phone: string) {\n    const hasChina = phone.startsWith('+86');\n    const options = this.getOptions(hasChina);\n    const code = IDHelper.numeral(6);\n    const expiredAt = dayjs().add(options.expiredIn, 'seconds').toDate();\n    const paramsSet = options.veriables\n      .split(',')\n      .map((item) =>\n        item\n          .replace('#code#', code)\n          .replace('#expired#', (options.expiredIn / 60).toString()),\n      );\n\n    const security = await this.prisma.securitySmsCode.create({\n      data: {\n        id: IDHelper.id(32),\n        phone,\n        code,\n        expiredAt,\n      },\n    });\n\n    this.tencentCloudSmsService.send({\n      PhoneNumberSet: [phone],\n      TemplateID: options.templateID,\n      TemplateParamSet: paramsSet,\n    });\n\n    return security;\n  }\n\n  async compareCode(\n    phone: string,\n    code: string,\n  ): Promise {\n    if (!phone || !code) {\n      return false;\n    }\n\n    const security = await this.prisma.securitySmsCode.findFirst({\n      where: { phone, code },\n      orderBy: { createdAt: 'desc' },\n      rejectOnNotFound: false,\n    });\n    if (\n      security &&\n      !security.usedAt &&\n      security.expiredAt.getTime() > Date.now()\n    ) {\n      return security;\n    }\n\n    return false;\n  }\n\n  async updateCodeToUsed(security: SecuritySmsCode) {\n    return await this.prisma.securitySmsCode.update({\n      where: { id: security.id },\n      data: { usedAt: new Date() },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TencentCloudCosCredentials.html":{"url":"classes/TencentCloudCosCredentials.html","title":"class - TencentCloudCosCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TencentCloudCosCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/cos/entities/cos.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                bucket\n                            \n                            \n                                region\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authorization\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TencentCloudStsFederationToken\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud STS authorization token'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/cos/entities/cos.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bucket\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud COS bucket'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/cos/entities/cos.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            region\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud COS bucket region'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/cos/entities/cos.entity.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { TencentCloudStsFederationToken } from '../../sts';\n\n@ObjectType()\nexport class TencentCloudCosCredentials {\n  @Field(() => TencentCloudStsFederationToken, {\n    description: 'Tencent Cloud STS authorization token',\n  })\n  authorization: TencentCloudStsFederationToken;\n\n  @Field(() => String, {\n    description: 'Tencent Cloud COS bucket',\n  })\n  bucket: string;\n\n  @Field(() => String, {\n    description: 'Tencent Cloud COS bucket region',\n  })\n  region: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TencentCloudCosResolver.html":{"url":"classes/TencentCloudCosResolver.html","title":"class - TencentCloudCosResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TencentCloudCosResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/cos/cos.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authorization\n                            \n                            \n                                    Async\n                                createCosTemporaryReadCredential\n                            \n                            \n                                    Async\n                                createCosTemporaryWriteCredential\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cosService: TencentCloudCosService)\n                    \n                \n                        \n                            \n                                Defined in src/tencent-cloud/cos/cos.resolver.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cosService\n                                                  \n                                                        \n                                                                        TencentCloudCosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authorization\n                        \n                        \n                    \n                \n            \n            \n                \nauthorization(undefined: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/tencent-cloud/cos/cos.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createCosTemporaryReadCredential\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCosTemporaryReadCredential()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create Tencent Cloud COS read credential'})\n                \n            \n\n            \n                \n                    Defined in src/tencent-cloud/cos/cos.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createCosTemporaryWriteCredential\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCosTemporaryWriteCredential(type: AllowUploadFileType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Create Tencent Cloud COS write credential'})@AuthorizationWith()\n                \n            \n\n            \n                \n                    Defined in src/tencent-cloud/cos/cos.resolver.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                AllowUploadFileType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Args,\n  Mutation,\n  Parent,\n  registerEnumType,\n  ResolveField,\n  Resolver,\n} from '@nestjs/graphql';\nimport { AuthorizationWith } from 'src/authorization.decorator';\nimport { IDHelper } from 'src/helper';\nimport { TencentCloudStsFederationToken } from '../sts';\nimport { TencentCloudCosCredentials } from './entities/cos.entity';\nimport { TencentCloudCosService } from './soc.service';\n\nexport enum AllowUploadFileType {\n  // 图片\n  JPG = '.jpg',\n  PNG = '.png',\n  GIF = '.gif',\n  // 视频\n  MP4 = '.mp4',\n  OGG = '.ogg',\n  // 音频\n  MP3 = '.mp3',\n  WAV = '.wav',\n}\n\nregisterEnumType(AllowUploadFileType, {\n  name: 'AllowUploadFileType',\n});\n\n@Resolver(() => TencentCloudCosCredentials)\nexport class TencentCloudCosResolver {\n  constructor(private readonly cosService: TencentCloudCosService) {}\n\n  @ResolveField(() => TencentCloudStsFederationToken)\n  authorization(\n    @Parent()\n    {\n      authorization,\n    }: {\n      authorization: () => Promise;\n    },\n  ) {\n    return authorization();\n  }\n\n  @Mutation(() => TencentCloudCosCredentials, {\n    description: 'Create Tencent Cloud COS read credential',\n  })\n  async createCosTemporaryReadCredential(): Promise & {\n      authorization: () => Promise;\n    }\n  > {\n    return Object.assign({}, this.cosService.options, {\n      authorization: () => this.cosService.createTemporaryReadCredential(),\n    });\n  }\n\n  @Mutation(() => TencentCloudCosCredentials, {\n    description: 'Create Tencent Cloud COS write credential',\n  })\n  @AuthorizationWith()\n  async createCosTemporaryWriteCredential(\n    @Args({\n      name: 'type',\n      type: () => AllowUploadFileType,\n      description: 'create resource type.',\n    })\n    type: AllowUploadFileType,\n  ): Promise & {\n      authorization: () => Promise;\n    }\n  > {\n    return Object.assign({}, this.cosService.options, {\n      authorization: () =>\n        this.cosService.createTemporaryWriteCredential(IDHelper.id(64) + type),\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TencentCloudCosService.html":{"url":"injectables/TencentCloudCosService.html","title":"injectable - TencentCloudCosService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TencentCloudCosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/cos/soc.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTemporaryReadCredential\n                            \n                            \n                                    Async\n                                createTemporaryWriteCredential\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                                \n                                    temporaryCredentialDurationSeconds\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sts: TencentCloudStsService)\n                    \n                \n                        \n                            \n                                Defined in src/tencent-cloud/cos/soc.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sts\n                                                  \n                                                        \n                                                                        TencentCloudStsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTemporaryReadCredential\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTemporaryReadCredential()\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/cos/soc.service.ts:26\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud COS temporary read credential.\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTemporaryWriteCredential\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTemporaryWriteCredential(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/cos/soc.service.ts:54\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud COS temporary write credential.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tencent Cloud COS object key.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in src/tencent-cloud/cos/soc.service.ts:9\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        temporaryCredentialDurationSeconds\n                    \n                \n\n                \n                    \n                        gettemporaryCredentialDurationSeconds()\n                    \n                \n                            \n                                \n                                    Defined in src/tencent-cloud/cos/soc.service.ts:19\n                                \n                            \n                    \n                        \n                                get temporary credential duration seconds.\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { IDHelper } from 'src/helper';\nimport { TencentCloudStsService } from '../sts';\n\n@Injectable()\nexport class TencentCloudCosService {\n  constructor(private readonly sts: TencentCloudStsService) {}\n\n  get options() {\n    return {\n      bucket: process.env.TENCENT_CLOUD_COS_BUCKET,\n      region: process.env.TENCENT_CLOUD_COS_REGION,\n    };\n  }\n\n  /**\n   * get temporary credential duration seconds.\n   */\n  get temporaryCredentialDurationSeconds() {\n    return 7200;\n  }\n\n  /**\n   * Create Tencent Cloud COS temporary read credential.\n   */\n  async createTemporaryReadCredential() {\n    const { bucket, region } = this.options;\n    const stsClient = this.sts.createClient(region);\n    const [_, uid] = bucket.split('-');\n    return await stsClient.GetFederationToken({\n      Name: IDHelper.alphabet(32),\n      DurationSeconds: this.temporaryCredentialDurationSeconds,\n      Policy: JSON.stringify({\n        version: '2.0',\n        statement: [\n          {\n            effect: 'allow',\n            action: [\n              'name/cos:GetObject',\n              'name/cos:HeadObject',\n              'name/cos:OptionsObject',\n            ],\n            resource: [`qcs::cos:${region}:uid/${uid}:${bucket}/*`],\n          },\n        ],\n      }),\n    });\n  }\n\n  /**\n   * Create Tencent Cloud COS temporary write credential.\n   * @param name Tencent Cloud COS object key.\n   */\n  async createTemporaryWriteCredential(name: string) {\n    const { bucket, region } = this.options;\n    const stsClient = this.sts.createClient(region);\n    const [_, uid] = bucket.split('-');\n    return await stsClient.GetFederationToken({\n      Name: IDHelper.alphabet(32),\n      DurationSeconds: this.temporaryCredentialDurationSeconds,\n      Policy: JSON.stringify({\n        version: '2.0',\n        statement: [\n          {\n            effect: 'allow',\n            action: [\n              //简单上传操作\n              'name/cos:PutObject',\n              //表单上传对象\n              'name/cos:PostObject',\n              //分块上传：初始化分块操作\n              'name/cos:InitiateMultipartUpload',\n              //分块上传：List 进行中的分块上传\n              'name/cos:ListMultipartUploads',\n              //分块上传：List 已上传分块操作\n              'name/cos:ListParts',\n              //分块上传：上传分块块操作\n              'name/cos:UploadPart',\n              //分块上传：完成所有分块上传操作\n              'name/cos:CompleteMultipartUpload',\n              //取消分块上传操作\n              'name/cos:AbortMultipartUpload',\n            ],\n            resource: [`qcs::cos:${region}:uid/${uid}:${bucket}/${name}`],\n          },\n        ],\n      }),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TencentCloudModule.html":{"url":"modules/TencentCloudModule.html","title":"module - TencentCloudModule","body":"\n                   \n\n\n\n\n    Modules\n    TencentCloudModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TencentCloudModule\n\n\n\ncluster_TencentCloudModule_providers\n\n\n\ncluster_TencentCloudModule_exports\n\n\n\n\nTencentCloudCosService \n\nTencentCloudCosService \n\n\n\nTencentCloudSmsService \n\nTencentCloudSmsService \n\n\n\nTencentCloudStsService \n\nTencentCloudStsService \n\n\n\nTencentCloudModule\n\nTencentCloudModule\n\nTencentCloudCosService  -->\n\nTencentCloudModule->TencentCloudCosService \n\n\n\nTencentCloudSmsService  -->\n\nTencentCloudModule->TencentCloudSmsService \n\n\n\nTencentCloudStsService  -->\n\nTencentCloudModule->TencentCloudStsService \n\n\n\n\n\nTencentCloudCosService\n\nTencentCloudCosService\n\nTencentCloudModule -->\n\nTencentCloudCosService->TencentCloudModule\n\n\n\n\n\nTencentCloudSmsService\n\nTencentCloudSmsService\n\nTencentCloudModule -->\n\nTencentCloudSmsService->TencentCloudModule\n\n\n\n\n\nTencentCloudStsService\n\nTencentCloudStsService\n\nTencentCloudModule -->\n\nTencentCloudStsService->TencentCloudModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tencent-cloud/tencent-cloud.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TencentCloudCosService\n                        \n                        \n                            TencentCloudSmsService\n                        \n                        \n                            TencentCloudStsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TencentCloudCosService\n                        \n                        \n                            TencentCloudSmsService\n                        \n                        \n                            TencentCloudStsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TencentCloudCosService } from './cos';\nimport { TencentCloudCosResolver } from './cos/cos.resolver';\nimport { TencentCloudSmsService } from './sms';\nimport { TencentCloudStsService } from './sts';\n\n@Module({\n  providers: [\n    TencentCloudStsService,\n    TencentCloudCosService,\n    TencentCloudSmsService,\n\n    // Resolvers\n    TencentCloudCosResolver,\n  ],\n  exports: [\n    TencentCloudStsService,\n    TencentCloudCosService,\n    TencentCloudSmsService,\n  ],\n})\nexport class TencentCloudModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TencentCloudSmsService.html":{"url":"injectables/TencentCloudSmsService.html","title":"injectable - TencentCloudSmsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TencentCloudSmsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/sms/sms.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createClient\n                            \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createClient\n                        \n                        \n                    \n                \n            \n            \n                \ncreateClient(region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/sms/sms.service.ts:23\n                \n            \n\n\n            \n                \n                    Create Tencent Cloud SMS client.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'ap-guangzhou'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Client\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(params: Pick, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/sms/sms.service.ts:39\n                \n            \n\n\n            \n                \n                    Send SMS.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Pick\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Send SMS params.\n\n                                    \n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'ap-guangzhou'\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseOptions\n                    \n                \n\n                \n                    \n                        getbaseOptions()\n                    \n                \n                            \n                                \n                                    Defined in src/tencent-cloud/sms/sms.service.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Client } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sms/v20190711/sms_client';\nimport { SendSmsRequest } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sms/v20190711/sms_models';\nimport { getCredential } from '../common';\n\n@Injectable()\nexport class TencentCloudSmsService {\n  get baseOptions(): Pick {\n    return {\n      SmsSdkAppid: process.env.TENCENT_CLOUD_SMS_APP_ID,\n      Sign: process.env.TENCENT_CLOUD_SMS_SIGN,\n      ExtendCode: process.env.TENCENT_CLOUD_SMS_EXTEND_CODE,\n      SenderId: process.env.TENCENT_CLOUD_SMS_SENDER_ID,\n    };\n  }\n\n  /**\n   * Create Tencent Cloud SMS client.\n   */\n  createClient(region: string = 'ap-guangzhou'): Client {\n    return new Client({\n      credential: getCredential(),\n      region,\n      profile: {\n        httpProfile: {\n          endpoint: 'sms.tencentcloudapi.com',\n        },\n      },\n    });\n  }\n\n  /**\n   * Send SMS.\n   * @param params Send SMS params.\n   */\n  async send(\n    params: Pick,\n    region: string = 'ap-guangzhou',\n  ) {\n    const client = this.createClient(region);\n    const request = Object.assign({}, this.baseOptions, params);\n    return await client.SendSms(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TencentCloudStsCredentials.html":{"url":"classes/TencentCloudStsCredentials.html","title":"class - TencentCloudStsCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TencentCloudStsCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/sts/entities/sts.entity.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Credentials\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                TmpSecretId\n                            \n                            \n                                TmpSecretKey\n                            \n                            \n                                Token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TmpSecretId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials secrect id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TmpSecretKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials secrect key'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials token'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Int, ObjectType } from '@nestjs/graphql';\nimport { GetFederationTokenResponse } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_models';\nimport { Credentials } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_models';\n\n@ObjectType()\nexport class TencentCloudStsCredentials implements Credentials {\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials token',\n  })\n  Token: string;\n\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials secrect id',\n  })\n  TmpSecretId: string;\n\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials secrect key',\n  })\n  TmpSecretKey: string;\n}\n\n@ObjectType()\nexport class TencentCloudStsFederationToken\n  implements GetFederationTokenResponse {\n  @Field(() => TencentCloudStsCredentials, {\n    description: 'Tencent Cloud credentials',\n    nullable: true,\n  })\n  Credentials?: TencentCloudStsCredentials;\n\n  @Field(() => Int, {\n    description: 'Tencent Cloud credentials expired Unix time.',\n    nullable: true,\n  })\n  ExpiredTime?: number;\n\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials expired ISO8601 date.',\n    nullable: true,\n  })\n  Expiration?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TencentCloudStsFederationToken.html":{"url":"classes/TencentCloudStsFederationToken.html","title":"class - TencentCloudStsFederationToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TencentCloudStsFederationToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/sts/entities/sts.entity.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        GetFederationTokenResponse\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                Credentials\n                            \n                            \n                                    Optional\n                                Expiration\n                            \n                            \n                                    Optional\n                                ExpiredTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            Credentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TencentCloudStsCredentials\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            Expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials expired ISO8601 date.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ExpiredTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Tencent Cloud credentials expired Unix time.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tencent-cloud/sts/entities/sts.entity.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Int, ObjectType } from '@nestjs/graphql';\nimport { GetFederationTokenResponse } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_models';\nimport { Credentials } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_models';\n\n@ObjectType()\nexport class TencentCloudStsCredentials implements Credentials {\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials token',\n  })\n  Token: string;\n\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials secrect id',\n  })\n  TmpSecretId: string;\n\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials secrect key',\n  })\n  TmpSecretKey: string;\n}\n\n@ObjectType()\nexport class TencentCloudStsFederationToken\n  implements GetFederationTokenResponse {\n  @Field(() => TencentCloudStsCredentials, {\n    description: 'Tencent Cloud credentials',\n    nullable: true,\n  })\n  Credentials?: TencentCloudStsCredentials;\n\n  @Field(() => Int, {\n    description: 'Tencent Cloud credentials expired Unix time.',\n    nullable: true,\n  })\n  ExpiredTime?: number;\n\n  @Field(() => String, {\n    description: 'Tencent Cloud credentials expired ISO8601 date.',\n    nullable: true,\n  })\n  Expiration?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TencentCloudStsService.html":{"url":"injectables/TencentCloudStsService.html","title":"injectable - TencentCloudStsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TencentCloudStsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tencent-cloud/sts/sts.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createClient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createClient\n                        \n                        \n                    \n                \n            \n            \n                \ncreateClient(region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tencent-cloud/sts/sts.service.ts:11\n                \n            \n\n\n            \n                \n                    Create STS client for region.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'ap-guangzhou'\n                                    \n\n                                    \n                                        server region.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Client\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Client } from 'tencentcloud-sdk-nodejs/tencentcloud/services/sts/v20180813/sts_client';\nimport { getCredential } from '../common';\n\n@Injectable()\nexport class TencentCloudStsService {\n  /**\n   * Create STS client for region.\n   * @param region server region.\n   */\n  createClient(region: string = 'ap-guangzhou'): Client {\n    return new Client({\n      credential: getCredential(),\n      region,\n      profile: {\n        httpProfile: {\n          endpoint: 'sts.tencentcloudapi.com',\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateViewerArgs.html":{"url":"classes/UpdateViewerArgs.html","title":"class - UpdateViewerArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateViewerArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-viewer.args.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                newPhoneSecurity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserUpdateInput\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User update input'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-viewer.args.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            newPhoneSecurity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'Update phone need set new phone security code'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/update-viewer.args.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field, PickType } from '@nestjs/graphql';\nimport { CreateAuthorizationTokenArgs } from 'src/authorization-token/dto/create-authorization-token.args';\nimport { UserUpdateInput } from './user-update.input';\n\n@ArgsType()\nexport class UpdateViewerArgs extends PickType(\n  CreateAuthorizationTokenArgs,\n  ['security', 'type'] as const,\n  ArgsType,\n) {\n  @Field(() => UserUpdateInput, {\n    description: 'User update input',\n  })\n  data: UserUpdateInput;\n\n  @Field(() => String, {\n    nullable: true,\n    description: 'Update phone need set new phone security code',\n  })\n  newPhoneSecurity?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n            \n                Description\n            \n            \n                User entity.\n\n            \n\n            \n                Extends\n            \n            \n                        UserInterface\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User registered date at.'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:44\n\n                            \n                        \n\n                \n                    \n                        User registered date at.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User ID'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:27\n\n                            \n                        \n\n                \n                    \n                        User ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User login name'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:36\n\n                            \n                        \n\n                \n                    \n                        User login name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UserProfile\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'The user profile'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:52\n\n                            \n                        \n\n                \n                    \n                        User profile.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType } from '@nestjs/graphql';\nimport { UserInterface } from './user.interface';\n\n/**\n * User entity.\n */\n@ObjectType({\n  implements: [UserInterface],\n  description: 'User entity',\n})\nexport class UserEntity extends UserInterface {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInterface.html":{"url":"classes/UserInterface.html","title":"class - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                User interface.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User registered date at.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.interface.ts:44\n                            \n                        \n\n                \n                    \n                        User registered date at.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.interface.ts:27\n                            \n                        \n\n                \n                    \n                        User ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User login name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.interface.ts:36\n                            \n                        \n\n                \n                    \n                        User login name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UserProfile\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'The user profile'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.interface.ts:52\n                            \n                        \n\n                \n                    \n                        User profile.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, GraphQLISODateTime, ID, InterfaceType } from '@nestjs/graphql';\nimport { Prisma, UserProfile } from '@prisma/client';\nimport { UserProfileEntity } from '../profile/entities/profile.entity';\n\n/**\n * User interface.\n */\n@InterfaceType({\n  description: 'User interface.',\n})\nexport class UserInterface\n  implements\n    Omit,\n      'phone' | 'email' | 'password'\n    > {\n  /**\n   * User ID\n   */\n  @Field((type) => ID, {\n    description: 'User ID',\n  })\n  id: string;\n\n  /**\n   * User login name\n   */\n  @Field((type) => String, {\n    nullable: true,\n    description: 'User login name',\n  })\n  login: string;\n\n  /**\n   * User registered date at.\n   */\n  @Field((type) => GraphQLISODateTime, {\n    description: 'User registered date at.',\n  })\n  createdAt: Date;\n\n  /**\n   * User profile.\n   */\n  @Field((type) => UserProfileEntity, {\n    description: 'The user profile',\n  })\n  profile: UserProfile;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInterfaceResolver.html":{"url":"classes/UserInterfaceResolver.html","title":"class - UserInterfaceResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInterfaceResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user-interface.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userProfileService: UserProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user-interface.resolver.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userProfileService\n                                                  \n                                                        \n                                                                        UserProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            profile\n                        \n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user/user-interface.resolver.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Parent, ResolveField, Resolver } from '@nestjs/graphql';\nimport { User } from '@prisma/client';\nimport { UserInterface } from './entities/user.interface';\nimport { UserProfileEntity } from './profile/entities/profile.entity';\nimport { UserProfileService } from './profile/profile.service';\n\n@Resolver(() => UserInterface)\nexport class UserInterfaceResolver {\n  constructor(private readonly userProfileService: UserProfileService) {}\n\n  @ResolveField(() => UserProfileEntity)\n  profile(@Parent() user: User) {\n    return this.userProfileService.resolveProfile(user);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nSecurityModule\n\nSecurityModule\n\nUserModule -->\n\nSecurityModule->UserModule\n\n\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserModule -->\n\nUserProfileModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            SecurityModule\n                        \n                        \n                            UserProfileModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { SecurityModule } from 'src/security/security.module';\nimport { UserProfileModule } from './profile/profile.module';\nimport { UserInterfaceResolver } from './user-interface.resolver';\nimport { UserService } from './user.service';\nimport { ViewerResolver } from './viewer.resolver';\n\n@Module({\n  imports: [PrismaModule, UserProfileModule, SecurityModule],\n  providers: [UserService, UserInterfaceResolver, ViewerResolver],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileEntity.html":{"url":"classes/UserProfileEntity.html","title":"class - UserProfileEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/entities/profile.entity.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            UserProfileEntity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                bio\n                            \n                            \n                                location\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User avatar storage path.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User bio.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User location string.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User name.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User profile updated at.', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Profile owner ID'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/profile/entities/profile.entity.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, GraphQLISODateTime, ID, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class UserProfileEntity implements UserProfileEntity {\n  @Field((type) => ID, {\n    description: 'Profile owner ID',\n  })\n  userId: string;\n\n  @Field((type) => String, {\n    description: 'User name.',\n    nullable: true,\n  })\n  name: string;\n\n  @Field((type) => String, {\n    description: 'User avatar storage path.',\n    nullable: true,\n  })\n  avatar: string;\n\n  @Field((type) => String, {\n    description: 'User bio.',\n    nullable: true,\n  })\n  bio: string;\n\n  @Field((type) => String, {\n    description: 'User location string.',\n    nullable: true,\n  })\n  location: string;\n\n  @Field((type) => GraphQLISODateTime, {\n    description: 'User profile updated at.',\n    nullable: true,\n  })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserProfileModule.html":{"url":"modules/UserProfileModule.html","title":"module - UserProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    UserProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserProfileModule\n\n\n\ncluster_UserProfileModule_exports\n\n\n\ncluster_UserProfileModule_imports\n\n\n\ncluster_UserProfileModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserProfileModule -->\n\nPrismaModule->UserProfileModule\n\n\n\n\n\nUserProfileService \n\nUserProfileService \n\nUserProfileService  -->\n\nUserProfileModule->UserProfileService \n\n\n\n\n\nUserProfileService\n\nUserProfileService\n\nUserProfileModule -->\n\nUserProfileService->UserProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserProfileService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserProfileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'src/prisma';\nimport { UserProfileResolver } from './profile.resolver';\nimport { UserProfileService } from './profile.service';\n\n@Module({\n  imports: [PrismaModule],\n  providers: [UserProfileService, UserProfileResolver],\n  exports: [UserProfileService],\n})\nexport class UserProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileResolver.html":{"url":"classes/UserProfileResolver.html","title":"class - UserProfileResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/profile.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                updateViewerProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileService: UserProfileService, prismaClient: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/user/profile/profile.resolver.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        UserProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateViewerProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViewerProfile(context: ExecutionContext, data: UserProfileUpdateInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@AuthorizationWith()\n                \n            \n\n            \n                \n                    Defined in src/user/profile/profile.resolver.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UserProfileUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Context, Mutation, Resolver } from '@nestjs/graphql';\nimport { PrismaClient } from '@prisma/client';\nimport { AuthorizationWith } from 'src/authorization.decorator';\nimport { ExecutionContext } from 'src/execution-context';\nimport { UserProfileUpdateInput } from './dto/profile-update.input';\nimport { UserProfileEntity } from './entities/profile.entity';\nimport { UserProfileService } from './profile.service';\n\n@Resolver(() => UserProfileEntity)\nexport class UserProfileResolver {\n  constructor(\n    private readonly profileService: UserProfileService,\n    private readonly prismaClient: PrismaClient,\n  ) {}\n\n  @Mutation(() => UserProfileEntity)\n  @AuthorizationWith()\n  async updateViewerProfile(\n    @Context() context: ExecutionContext,\n    @Args({\n      name: 'data',\n      type: () => UserProfileUpdateInput,\n      description: 'Viewer profile update data.',\n    })\n    data: UserProfileUpdateInput,\n  ) {\n    const profile = await this.profileService.resolveProfile(context.user);\n    return await this.prismaClient.userProfile.update({\n      where: { userId: profile.userId },\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserProfileService.html":{"url":"injectables/UserProfileService.html","title":"injectable - UserProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolveProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/user/profile/profile.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resolveProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveProfile(user: User | Prisma.UserGetPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/user/profile/profile.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User | Prisma.UserGetPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma, PrismaClient, User, UserProfile } from '@prisma/client';\n\n@Injectable()\nexport class UserProfileService {\n  constructor(private readonly prisma: PrismaClient) {}\n\n  async resolveProfile(\n    user:\n      | User\n      | Prisma.UserGetPayload,\n  ): Promise {\n    let { profile } = user as Prisma.UserGetPayload;\n    if (profile) {\n      return profile;\n    }\n    profile = await this.prisma.userProfile.findUnique({\n      where: { userId: user.id },\n      rejectOnNotFound: false,\n    });\n    if (profile) {\n      return profile;\n    }\n\n    return await this.prisma.userProfile.create({\n      data: { userId: user.id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileUpdateInput.html":{"url":"classes/UserProfileUpdateInput.html","title":"class - UserProfileUpdateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileUpdateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/dto/profile-update.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, OmitType, PartialType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { UserProfileEntity } from '../entities/profile.entity';\n\n@InputType()\nexport class UserProfileUpdateInput\n  extends OmitType(\n    PartialType(UserProfileEntity),\n    ['updatedAt', 'userId'] as const,\n    InputType,\n  )\n  implements Omit {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaClient: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            user\n                        \n                        \n                    \n                \n            \n            \n                \nuser(where: UserWhereUniqueInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {description: 'Query a user where unique.'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.resolver.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                                UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Query, Resolver } from '@nestjs/graphql';\nimport { PrismaClient } from '@prisma/client';\nimport { USER_NOT_FOUND } from 'src/constants';\nimport { UserWhereUniqueInput } from './dto';\nimport { UserEntity } from './entities/user.entity';\nimport { UserUnion } from './entities/user.union';\n\n@Resolver(() => UserEntity)\nexport class UserResolver {\n  constructor(private readonly prismaClient: PrismaClient) {}\n\n  @Query(() => UserUnion, {\n    description: 'Query a user where unique.',\n  })\n  user(\n    @Args({\n      name: 'where',\n      type: () => UserWhereUniqueInput,\n      description: 'query where',\n    })\n    where: UserWhereUniqueInput,\n  ) {\n    return this.prismaClient.user.findUnique({\n      where,\n      rejectOnNotFound: () => new Error(USER_NOT_FOUND),\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                comparePassword\n                            \n                            \n                                    Async\n                                compareSecurity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(securitySmsService: SecuritySmsService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        securitySmsService\n                                                  \n                                                        \n                                                                        SecuritySmsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            comparePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    comparePassword(user: User, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:16\n                \n            \n\n\n            \n                \n                    Compore user password.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Need compare password user.\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        input password.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            compareSecurity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    compareSecurity(user: User, type: UserSecurityCompareType, security: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                UserSecurityCompareType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    security\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { User } from '@prisma/client';\nimport { PasswordHelper } from 'src/helper';\nimport { SecuritySmsService } from 'src/security/security-sms.service';\nimport { UserSecurityCompareType } from './enums';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly securitySmsService: SecuritySmsService) {}\n\n  /**\n   * Compore user password.\n   * @param user Need compare password user.\n   * @param password input password.\n   */\n  async comparePassword(user: User, password: string): Promise {\n    if (!user?.password) return false;\n    return await PasswordHelper.compare(password, user.password);\n  }\n\n  async compareSecurity(\n    user: User,\n    type: UserSecurityCompareType,\n    security: string,\n  ): Promise {\n    switch (type) {\n      case UserSecurityCompareType.PASSWORD:\n        return await this.comparePassword(user, security);\n      case UserSecurityCompareType.SMS_CODE:\n        const value = await this.securitySmsService.compareCode(\n          user.phone,\n          security,\n        );\n        if (value) {\n          return () => this.securitySmsService.updateCodeToUsed(value);\n        }\n        return false;\n      default:\n        return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserUpdateInput.html":{"url":"classes/UserUpdateInput.html","title":"class - UserUpdateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserUpdateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user-update.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Pick\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User new password', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-update.input.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, PartialType, PickType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\nimport { ViewerEntity } from '../entities/viewer.entity';\n\n@InputType()\nexport class UserUpdateInput\n  extends PartialType(\n    PickType(ViewerEntity, ['email', 'login', 'phone']),\n    InputType,\n  )\n  implements\n    Pick {\n  @Field(() => String, {\n    description: 'User new password',\n    nullable: true,\n  })\n  password?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserWhereUniqueInput.html":{"url":"classes/UserWhereUniqueInput.html","title":"class - UserWhereUniqueInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserWhereUniqueInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user-where-unique.input.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                login\n                            \n                            \n                                    Optional\n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User email', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where-unique.input.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User ID', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where-unique.input.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User login name', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where-unique.input.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User phone number', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user-where-unique.input.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ID, InputType } from '@nestjs/graphql';\nimport { Prisma } from '@prisma/client';\n\n@InputType()\nexport class UserWhereUniqueInput implements Prisma.UserWhereUniqueInput {\n  @Field(() => ID, {\n    description: 'User ID',\n    nullable: true,\n  })\n  id?: string;\n\n  @Field(() => String, {\n    description: 'User login name',\n    nullable: true,\n  })\n  login?: string;\n\n  @Field(() => String, {\n    description: 'User email',\n    nullable: true,\n  })\n  email?: string;\n\n  @Field(() => String, {\n    description: 'User phone number',\n    nullable: true,\n  })\n  phone?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewerEntity.html":{"url":"classes/ViewerEntity.html","title":"class - ViewerEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewerEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/viewer.entity.ts\n        \n\n            \n                Description\n            \n            \n                Viewer entity.\n\n            \n\n            \n                Extends\n            \n            \n                        UserInterface\n            \n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                phone\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User bound E-Mail address.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/viewer.entity.ts:22\n                            \n                        \n\n                \n                    \n                        User bound E-Mail address.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User bound Phone full number.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/viewer.entity.ts:31\n                            \n                        \n\n                \n                    \n                        User bound Phone full number.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User registered date at.'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:44\n\n                            \n                        \n\n                \n                    \n                        User registered date at.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'User ID'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:27\n\n                            \n                        \n\n                \n                    \n                        User ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true, description: 'User login name'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:36\n\n                            \n                        \n\n                \n                    \n                        User login name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UserProfile\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'The user profile'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         UserInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in         UserInterface:52\n\n                            \n                        \n\n                \n                    \n                        User profile.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { User } from '@prisma/client';\nimport { UserInterface } from './user.interface';\n\n/**\n * Viewer entity.\n */\n@ObjectType({\n  implements: [UserInterface],\n  description: 'Viewer entity.',\n})\nexport class ViewerEntity\n  extends UserInterface\n  implements Omit {\n  /**\n   * User bound E-Mail address.\n   */\n  @Field((type) => String, {\n    nullable: true,\n    description: 'User bound E-Mail address.',\n  })\n  email: string;\n\n  /**\n   * User bound Phone full number.\n   */\n  @Field((type) => String, {\n    nullable: true,\n    description: 'User bound Phone full number.',\n  })\n  phone: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewerResolver.html":{"url":"classes/ViewerResolver.html","title":"class - ViewerResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewerResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/viewer.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                phone\n                            \n                            \n                                    Async\n                                updateViewer\n                            \n                            \n                                viewer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, prismaClient: PrismaClient)\n                    \n                \n                        \n                            \n                                Defined in src/user/viewer.resolver.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                    PrismaClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            email\n                        \n                        \n                    \n                \n            \n            \n                \nemail(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user/viewer.resolver.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            phone\n                        \n                        \n                    \n                \n            \n            \n                \nphone(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user/viewer.resolver.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateViewer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViewer(context: ExecutionContext, args: UpdateViewerArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@AuthorizationWith()\n                \n            \n\n            \n                \n                    Defined in src/user/viewer.resolver.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                UpdateViewerArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            viewer\n                        \n                        \n                    \n                \n            \n            \n                \nviewer(context: ExecutionContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {description: 'Query the HTTP endpoint Authorization user.'})@AuthorizationWith()\n                \n            \n\n            \n                \n                    Defined in src/user/viewer.resolver.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Args,\n  Mutation,\n  Parent,\n  Query,\n  ResolveField,\n  Resolver,\n} from '@nestjs/graphql';\nimport { PrismaClient, User } from '@prisma/client';\nimport { AuthorizationWith } from 'src/authorization.decorator';\nimport {\n  SECURITY_COMPARE_FAILED,\n  USER_EMAIL_FIELD_EXISTED,\n  USER_LOGIN_FIELD_EXISTED,\n  USER_PHONE_FIELD_EXISTED,\n} from 'src/constants';\nimport { Context } from 'src/context.decorator';\nimport { ExecutionContext } from 'src/execution-context';\nimport { PasswordHelper } from 'src/helper';\nimport { UpdateViewerArgs } from './dto/update-viewer.args';\nimport { ViewerEntity } from './entities/viewer.entity';\nimport { UserSecurityCompareType } from './enums';\nimport { UserService } from './user.service';\n\nconst constants = {\n  USER_LOGIN_FIELD_EXISTED,\n  USER_PHONE_FIELD_EXISTED,\n  USER_EMAIL_FIELD_EXISTED,\n};\n\n@Resolver(() => ViewerEntity)\nexport class ViewerResolver {\n  constructor(\n    private readonly userService: UserService,\n    private readonly prismaClient: PrismaClient,\n  ) {}\n\n  @ResolveField(() => String)\n  phone(@Parent() user: User) {\n    const { phone } = user;\n    if (phone) {\n      return phone.replace(/(.*)\\d{4}(\\d{4})/, '$1****$2');\n    }\n\n    return phone;\n  }\n\n  @ResolveField(() => String)\n  email(@Parent() user: User) {\n    const { email } = user;\n    if (email) {\n      return email.replace(/^(\\w{1}).*?(\\w{1}?)\\@(.*)$/, '$1***$2@$3');\n    }\n\n    return email;\n  }\n\n  @Query(() => ViewerEntity, {\n    description: 'Query the HTTP endpoint Authorization user.',\n  })\n  @AuthorizationWith()\n  viewer(@Context() context: ExecutionContext) {\n    return context.user;\n  }\n\n  @Mutation(() => ViewerEntity)\n  @AuthorizationWith()\n  async updateViewer(\n    @Context() context: ExecutionContext,\n    @Args({\n      type: () => UpdateViewerArgs,\n      description: 'Update viewer args.',\n    })\n    args: UpdateViewerArgs,\n  ) {\n    const { data, security, type, newPhoneSecurity } = args;\n    const { user } = context;\n    for await (const key of Object.keys(data)) {\n      // Convert to password hash\n      if (key === 'password') {\n        data[key] = await PasswordHelper.hash(data[key]);\n        continue;\n      }\n\n      // Check whether the unique field is used by other users\n      const other = await this.prismaClient.user.findUnique({\n        where: { [key]: data[key] },\n        rejectOnNotFound: false,\n      });\n      if (other && other.id !== user.id) {\n        throw new Error(constants[`USER_${key.toUpperCase()}_FIELD_EXISTED`]);\n      }\n\n      // Check whether the new mobile phone number verification code matches\n      if (key === 'phone' && data[key] !== user.phone) {\n        const compared = await this.userService.compareSecurity(\n          Object.assign({}, user, { phone: data[key] }),\n          UserSecurityCompareType.SMS_CODE,\n          newPhoneSecurity,\n        );\n        if (compared) {\n          if (compared instanceof Function) {\n            compared();\n          }\n          continue;\n        }\n\n        throw new Error(SECURITY_COMPARE_FAILED);\n      }\n    }\n    const compared = await this.userService.compareSecurity(\n      user,\n      type,\n      security,\n    );\n    if (compared) {\n      if (compared instanceof Function) {\n        compared();\n      }\n      return (context.user = await this.prismaClient.user.update({\n        where: { id: user.id },\n        data,\n      }));\n    }\n\n    throw new Error(SECURITY_COMPARE_FAILED);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.config.ts\n            \n            function\n            getConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            function\n            loadConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authorization-token/authorization-token.resolver.ts\n            \n            class\n            AuthorizationTokenEntityResolver\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/authorization-token/authorization-token.service.ts\n            \n            injectable\n            AuthorizationTokenService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_METADATA_HAS_AUTHORIZATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_METADATA_HAS_AUTHORIZATION_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_DEFAULT_EXPORED_IN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_DEFAULT_EXPORED_UNIT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_DEFAULT_REFRESH_EXPORED_IN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_DEFAULT_REFRESH_EXPORED_UNIT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authorization-token/constants.ts\n            \n            variable\n            AUTH_TOKEN_VVALIDITY_PERIOD_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authorization-token/dto/create-authorization-token.args.ts\n            \n            class\n            CreateAuthorizationTokenArgs\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/authorization-token/entities/authorization-token.entity.ts\n            \n            class\n            AuthorizationTokenEntity\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/authorization-token/types.ts\n            \n            interface\n            AuthorizationTokenValidityPeriod\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/authorization.decorator.ts\n            \n            interface\n            AuthDecoratorOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/authorization.decorator.ts\n            \n            function\n            Authorization\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization.decorator.ts\n            \n            variable\n            AuthorizationWith\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization.decorator.ts\n            \n            variable\n            AuthorizationWithout\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/authorization.guard.ts\n            \n            guard\n            AuthorizationGuard\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            AUTHORIZATION_TOKEN_NOT_FOUND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            SECURITY_COMPARE_FAILED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            UNAUTHORIZED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_EMAIL_FIELD_EXISTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_LOGIN_FIELD_EXISTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_NOT_FOUND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_NOT_SET_PHONE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            USER_PHONE_FIELD_EXISTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/context.decorator.ts\n            \n            variable\n            Context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/execution-context.ts\n            \n            class\n            ExecutionContext\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            alphabet\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            custom\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            id\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            numeral\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/id.helper.ts\n            \n            variable\n            readability\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/password.helper.ts\n            \n            function\n            compare\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helper/password.helper.ts\n            \n            function\n            hash\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/middleware/logger.middleware.ts\n            \n            function\n            PrismaLoggerMiddleware\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.module.ts\n            \n            variable\n            client\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/security/security-sms.resolver.ts\n            \n            class\n            SecuritySmsResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/security/security-sms.service.ts\n            \n            injectable\n            SecuritySmsService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/tencent-cloud/common/index.ts\n            \n            function\n            getCredential\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tencent-cloud/cos/cos.resolver.ts\n            \n            class\n            TencentCloudCosResolver\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tencent-cloud/cos/entities/cos.entity.ts\n            \n            class\n            TencentCloudCosCredentials\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tencent-cloud/cos/soc.service.ts\n            \n            injectable\n            TencentCloudCosService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/tencent-cloud/sms/sms.service.ts\n            \n            injectable\n            TencentCloudSmsService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/tencent-cloud/sts/entities/sts.entity.ts\n            \n            class\n            TencentCloudStsCredentials\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tencent-cloud/sts/entities/sts.entity.ts\n            \n            class\n            TencentCloudStsFederationToken\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tencent-cloud/sts/sts.service.ts\n            \n            injectable\n            TencentCloudStsService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/user/dto/update-viewer.args.ts\n            \n            class\n            UpdateViewerArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/user-update.input.ts\n            \n            class\n            UserUpdateInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/user-where-unique.input.ts\n            \n            class\n            UserWhereUniqueInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            UserEntity\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/user/entities/user.interface.ts\n            \n            class\n            UserInterface\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/user/entities/user.union.ts\n            \n            function\n            resolveType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.union.ts\n            \n            variable\n            UserUnion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/entities/viewer.entity.ts\n            \n            class\n            ViewerEntity\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/user/profile/dto/profile-update.input.ts\n            \n            class\n            UserProfileUpdateInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/profile/entities/profile.entity.ts\n            \n            class\n            UserProfileEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/profile/profile.resolver.ts\n            \n            class\n            UserProfileResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/profile/profile.service.ts\n            \n            injectable\n            UserProfileService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user-interface.resolver.ts\n            \n            class\n            UserInterfaceResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/user/viewer.resolver.ts\n            \n            class\n            ViewerResolver\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/viewer.resolver.ts\n            \n            variable\n            constants\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.5\n        \n            @nestjs/core : ^7.6.5\n        \n            @nestjs/graphql : ^7.9.8\n        \n            @nestjs/platform-express : ^7.6.5\n        \n            @prisma/client : ^2.15.0\n        \n            apollo-server-express : ^2.19.2\n        \n            bcrypt : ^5.0.0\n        \n            class-transformer : ^0.3.2\n        \n            class-validator : ^0.13.1\n        \n            dayjs : ^1.10.4\n        \n            dotenv : ^8.2.0\n        \n            express : ^4.17.1\n        \n            graphql : ^15.4.0\n        \n            nanoid : ^3.1.20\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^6.6.3\n        \n            tencentcloud-sdk-nodejs : ^4.0.55\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllowUploadFileType   (src/.../cos.resolver.ts)\n                        \n                        \n                            HasTokenExpiredType   (src/.../enums.ts)\n                        \n                        \n                            UserSecurityCompareType   (src/.../enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tencent-cloud/cos/cos.resolver.ts\n    \n        \n            \n                \n                    \n                        \n                        AllowUploadFileType\n                    \n                \n                        \n                            \n                                 JPG\n                            \n                        \n                        \n                            \n                                Value : .jpg\n                            \n                        \n                        \n                            \n                                 PNG\n                            \n                        \n                        \n                            \n                                Value : .png\n                            \n                        \n                        \n                            \n                                 GIF\n                            \n                        \n                        \n                            \n                                Value : .gif\n                            \n                        \n                        \n                            \n                                 MP4\n                            \n                        \n                        \n                            \n                                Value : .mp4\n                            \n                        \n                        \n                            \n                                 OGG\n                            \n                        \n                        \n                            \n                                Value : .ogg\n                            \n                        \n                        \n                            \n                                 MP3\n                            \n                        \n                        \n                            \n                                Value : .mp3\n                            \n                        \n                        \n                            \n                                 WAV\n                            \n                        \n                        \n                            \n                                Value : .wav\n                            \n                        \n            \n        \n\n    src/authorization-token/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        HasTokenExpiredType\n                    \n                \n                        \n                            \n                                 AUTH\n                            \n                        \n                        \n                            \n                                 REFRESH\n                            \n                        \n            \n        \n\n    src/user/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        UserSecurityCompareType\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                 SMS_CODE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Authorization   (src/.../authorization.decorator.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            compare   (src/.../password.helper.ts)\n                        \n                        \n                            getConfig   (src/.../app.config.ts)\n                        \n                        \n                            getCredential   (src/.../index.ts)\n                        \n                        \n                            hash   (src/.../password.helper.ts)\n                        \n                        \n                            loadConfig   (src/.../app.config.ts)\n                        \n                        \n                            PrismaLoggerMiddleware   (src/.../logger.middleware.ts)\n                        \n                        \n                            resolveType   (src/.../user.union.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/authorization.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Authorization\n                        \n                        \n                    \n                \n            \n            \n                \nAuthorization(options?)\n                \n            \n\n\n\n\n            \n                \n                    Need validate HTTP endpoint Authorization token decorator.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/helper/password.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            compare\n                        \n                        \n                    \n                \n            \n            \n                \ncompare(password, encrypted)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    encrypted\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hash\n                        \n                        \n                    \n                \n            \n            \n                \nhash(password)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConfig\n                        \n                        \n                    \n                \n            \n            \n                \nloadConfig(path?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/tencent-cloud/common/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getCredential\n                        \n                        \n                    \n                \n            \n            \n                \ngetCredential()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Credential\n\n                    \n                \n            \n        \n    \n    src/prisma/middleware/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PrismaLoggerMiddleware\n                        \n                        \n                    \n                \n            \n            \n                \nPrismaLoggerMiddleware(logger)\n                \n            \n\n\n\n\n            \n                \n                    Create Prisma logger middleware helper.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    logger\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Logger\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Prisma.Middleware\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/user/entities/user.union.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            resolveType\n                        \n                        \n                    \n                \n            \n            \n                \nresolveType(value, context)\n                \n            \n\n\n\n\n            \n                \n                    resolve UserUnion real type\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User object.\n\n                                    \n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Application context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSocfony\nSocfony is a full-stack open source software that builds full-platform application with social networking as the core. Socfony plugin mechanism allows more developers or teams to write more functions for it, can help you solve the complexity of developing full-platform software.\n\n\n\n\nEcosystem\n\n\n\nProject\nStatus\nDescription\n\n\n\n\nSocfony App\n\nSocfony App with Flutter\n\n\n\nDocumentation\nNo document has been written yet.\nLicense\nSocfony is BSD-3-Clause licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBSD 3-Clause License\nCopyright (c) 2021, Byte Gem\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\nNeither the name of the copyright holder nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationTokenModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SecurityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TencentCloudModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthorizationTokenModule\n\n\n\ncluster_AuthorizationTokenModule_exports\n\n\n\ncluster_AuthorizationTokenModule_providers\n\n\n\ncluster_SecurityModule\n\n\n\ncluster_SecurityModule_exports\n\n\n\ncluster_SecurityModule_providers\n\n\n\ncluster_TencentCloudModule\n\n\n\ncluster_TencentCloudModule_exports\n\n\n\ncluster_TencentCloudModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserProfileModule\n\n\n\ncluster_UserProfileModule_exports\n\n\n\ncluster_UserProfileModule_providers\n\n\n\n\nAuthorizationTokenModule\n\nAuthorizationTokenModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthorizationTokenModule->AppModule\n\n\n\n\n\nAuthorizationTokenService \n\nAuthorizationTokenService \n\nAuthorizationTokenService  -->\n\nAuthorizationTokenModule->AuthorizationTokenService \n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthorizationTokenModule -->\n\nPrismaModule->AuthorizationTokenModule\n\n\n\n\n\nSecurityModule\n\nSecurityModule\n\nSecurityModule -->\n\nPrismaModule->SecurityModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserProfileModule -->\n\nPrismaModule->UserProfileModule\n\n\n\nUserModule -->\n\nSecurityModule->UserModule\n\n\n\nAppModule -->\n\nSecurityModule->AppModule\n\n\n\n\n\nSecuritySmsService \n\nSecuritySmsService \n\nSecuritySmsService  -->\n\nSecurityModule->SecuritySmsService \n\n\n\n\n\nTencentCloudModule\n\nTencentCloudModule\n\nSecurityModule -->\n\nTencentCloudModule->SecurityModule\n\n\n\nAppModule -->\n\nTencentCloudModule->AppModule\n\n\n\n\n\nTencentCloudCosService \n\nTencentCloudCosService \n\nTencentCloudCosService  -->\n\nTencentCloudModule->TencentCloudCosService \n\n\n\n\n\nTencentCloudSmsService \n\nTencentCloudSmsService \n\nTencentCloudSmsService  -->\n\nTencentCloudModule->TencentCloudSmsService \n\n\n\n\n\nTencentCloudStsService \n\nTencentCloudStsService \n\nTencentCloudStsService  -->\n\nTencentCloudModule->TencentCloudStsService \n\n\n\nAuthorizationTokenModule -->\n\nUserModule->AuthorizationTokenModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthorizationTokenService\n\nAuthorizationTokenService\n\nAuthorizationTokenModule -->\n\nAuthorizationTokenService->AuthorizationTokenModule\n\n\n\n\n\nSecuritySmsService\n\nSecuritySmsService\n\nSecurityModule -->\n\nSecuritySmsService->SecurityModule\n\n\n\n\n\nTencentCloudCosService\n\nTencentCloudCosService\n\nTencentCloudModule -->\n\nTencentCloudCosService->TencentCloudModule\n\n\n\n\n\nTencentCloudSmsService\n\nTencentCloudSmsService\n\nTencentCloudModule -->\n\nTencentCloudSmsService->TencentCloudModule\n\n\n\n\n\nTencentCloudStsService\n\nTencentCloudStsService\n\nTencentCloudModule -->\n\nTencentCloudStsService->TencentCloudModule\n\n\n\nUserModule -->\n\nUserProfileModule->UserModule\n\n\n\n\n\nUserProfileService \n\nUserProfileService \n\nUserProfileService  -->\n\nUserProfileModule->UserProfileService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nUserProfileService\n\nUserProfileService\n\nUserProfileModule -->\n\nUserProfileService->UserProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    21 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            alphabet   (src/.../id.helper.ts)\n                        \n                        \n                            AUTH_METADATA_HAS_AUTHORIZATION   (src/.../constants.ts)\n                        \n                        \n                            AUTH_METADATA_HAS_AUTHORIZATION_TYPE   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_DEFAULT_EXPORED_IN   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_DEFAULT_EXPORED_UNIT   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_DEFAULT_REFRESH_EXPORED_IN   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_DEFAULT_REFRESH_EXPORED_UNIT   (src/.../constants.ts)\n                        \n                        \n                            AUTH_TOKEN_VVALIDITY_PERIOD_KEY   (src/.../constants.ts)\n                        \n                        \n                            AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE   (src/.../constants.ts)\n                        \n                        \n                            AUTHORIZATION_TOKEN_NOT_FOUND   (src/.../constants.ts)\n                        \n                        \n                            AuthorizationWith   (src/.../authorization.decorator.ts)\n                        \n                        \n                            AuthorizationWithout   (src/.../authorization.decorator.ts)\n                        \n                        \n                            client   (src/.../prisma.module.ts)\n                        \n                        \n                            constants   (src/.../viewer.resolver.ts)\n                        \n                        \n                            Context   (src/.../context.decorator.ts)\n                        \n                        \n                            custom   (src/.../id.helper.ts)\n                        \n                        \n                            id   (src/.../id.helper.ts)\n                        \n                        \n                            numeral   (src/.../id.helper.ts)\n                        \n                        \n                            readability   (src/.../id.helper.ts)\n                        \n                        \n                            SECURITY_COMPARE_FAILED   (src/.../constants.ts)\n                        \n                        \n                            UNAUTHORIZED   (src/.../constants.ts)\n                        \n                        \n                            USER_EMAIL_FIELD_EXISTED   (src/.../constants.ts)\n                        \n                        \n                            USER_LOGIN_FIELD_EXISTED   (src/.../constants.ts)\n                        \n                        \n                            USER_NOT_FOUND   (src/.../constants.ts)\n                        \n                        \n                            USER_NOT_SET_PHONE   (src/.../constants.ts)\n                        \n                        \n                            USER_PHONE_FIELD_EXISTED   (src/.../constants.ts)\n                        \n                        \n                               (src/.../main.ts)\n                        \n                        \n                            UserUnion   (src/.../user.union.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/helper/id.helper.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            alphabet\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n    customAlphabet('qwertyuiopasdfghjklzxcvbnm', size)()\n                        \n                    \n\n                \n                    \n                        Generate alphabet(a-z) ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            custom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (alphabet: string, size: number) =>\n    customAlphabet(alphabet, size)()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string => nanoid(size)\n                        \n                    \n\n                \n                    \n                        Generate secure URL-friendly unique ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numeral\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n    customAlphabet('0123456789', size)()\n                        \n                    \n\n                \n                    \n                        Generate numeral ID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readability\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n    customAlphabet('23456789qwertyupasdfghjklzxcvbnm', size)()\n                        \n                    \n\n                \n                    \n                        Generate readability(23456789qwertyupasdfghjklzxcvbnm) ID.\n\n                    \n                \n\n            \n        \n\n    src/authorization-token/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_METADATA_HAS_AUTHORIZATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'metadata has authorization'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_METADATA_HAS_AUTHORIZATION_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'metadata has authorization type'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_DEFAULT_EXPORED_IN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_DEFAULT_EXPORED_UNIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'days'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_DEFAULT_REFRESH_EXPORED_IN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_DEFAULT_REFRESH_EXPORED_UNIT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'months'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_TOKEN_VVALIDITY_PERIOD_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'auth token validity period'\n                        \n                    \n\n\n            \n        \n\n    src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'AUTHORIZATION_TOKEN_CREATE_USER_WHERE_ALLOW_ONE'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTHORIZATION_TOKEN_NOT_FOUND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'AUTHORIZATION_TOKEN_NOT_FOUND'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SECURITY_COMPARE_FAILED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SECURITY_COMPARE_FAILED'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UNAUTHORIZED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'UNAUTHORIZED'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_EMAIL_FIELD_EXISTED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_EMAIL_FIELD_EXISTED'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_LOGIN_FIELD_EXISTED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_LOGIN_FIELD_EXISTED'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NOT_FOUND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_NOT_FOUND'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_NOT_SET_PHONE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_NOT_SET_PHONE'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_PHONE_FIELD_EXISTED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'USER_PHONE_FIELD_EXISTED'\n                        \n                    \n\n\n            \n        \n\n    src/authorization.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthorizationWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () =>\n  Authorization({\n    hasAuthorization: true,\n    type: HasTokenExpiredType.AUTH,\n  })\n                        \n                    \n\n                \n                    \n                        Http auth validate token.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AuthorizationWithout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () =>\n  Authorization({\n    hasAuthorization: false,\n    type: HasTokenExpiredType.AUTH,\n  })\n                        \n                    \n\n                \n                    \n                        Http auth, without validate token.\n\n                    \n                \n\n            \n        \n\n    src/prisma/prisma.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClassProvider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: PrismaClient,\n  useClass: class\n    extends PrismaClient\n    implements OnModuleInit, OnModuleDestroy {\n    private readonly logger = new Logger('Prisma');\n\n    /**\n     * Prisma client constructor\n     */\n    constructor() {\n      super({\n        datasources: {\n          database: { url: process.env.DATABASE_URL },\n        },\n      });\n    }\n\n    /**\n     * NestJS module init hook callback.\n     */\n    async onModuleInit() {\n      // Prisma connect database.\n      await this.$connect();\n\n      // Set Prisma client global logger middleware.\n      this.$use(PrismaLoggerMiddleware(this.logger));\n    }\n\n    /**\n     * NestJS module destory hook callback.\n     */\n    async onModuleDestroy() {\n      // Prisma disconnect database.\n      await this.$disconnect();\n    }\n  },\n}\n                        \n                    \n\n                \n                    \n                        Prisma class provider\n\n                    \n                \n\n            \n        \n\n    src/user/viewer.resolver.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            constants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  USER_LOGIN_FIELD_EXISTED,\n  USER_PHONE_FIELD_EXISTED,\n  USER_EMAIL_FIELD_EXISTED,\n}\n                        \n                    \n\n\n            \n        \n\n    src/context.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator(function (\n  _data: unknown,\n  context: ExecutionContext,\n): IContext {\n  if (context.getType() === 'graphql') {\n    return GqlExecutionContext.create(context).getContext();\n  }\n\n  return context.switchToHttp().getRequest().context;\n})\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.argv\n                        \n                    \n\n\n            \n        \n\n    src/user/entities/user.union.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserUnion\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createUnionType({\n  name: 'userUnion',\n  types: () => [UserEntity, ViewerEntity],\n  resolveType,\n  description: 'User union type.',\n})\n                        \n                    \n\n                \n                    \n                        User union type.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
